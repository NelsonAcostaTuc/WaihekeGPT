/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["src_components_layouts_MainLayout_MainLayout_tsx"],{

/***/ "./node_modules/darkreader/darkreader.js":
/*!***********************************************!*\
  !*** ./node_modules/darkreader/darkreader.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\r\n * Dark Reader v4.9.75\r\n * https://darkreader.org/\r\n */\r\n\r\n(function (global, factory) {\r\n     true\r\n        ? factory(exports)\r\n        : 0;\r\n})(this, function (exports) {\r\n    \"use strict\";\r\n\r\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n    var __assign = function () {\r\n        __assign =\r\n            Object.assign ||\r\n            function __assign(t) {\r\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                    s = arguments[i];\r\n                    for (var p in s)\r\n                        if (Object.prototype.hasOwnProperty.call(s, p))\r\n                            t[p] = s[p];\r\n                }\r\n                return t;\r\n            };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) {\r\n            return value instanceof P\r\n                ? value\r\n                : new P(function (resolve) {\r\n                      resolve(value);\r\n                  });\r\n        }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) {\r\n                try {\r\n                    step(generator.next(value));\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            function rejected(value) {\r\n                try {\r\n                    step(generator[\"throw\"](value));\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            function step(result) {\r\n                result.done\r\n                    ? resolve(result.value)\r\n                    : adopt(result.value).then(fulfilled, rejected);\r\n            }\r\n            step(\r\n                (generator = generator.apply(thisArg, _arguments || [])).next()\r\n            );\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = {\r\n                label: 0,\r\n                sent: function () {\r\n                    if (t[0] & 1) throw t[1];\r\n                    return t[1];\r\n                },\r\n                trys: [],\r\n                ops: []\r\n            },\r\n            f,\r\n            y,\r\n            t,\r\n            g;\r\n        return (\r\n            (g = {next: verb(0), throw: verb(1), return: verb(2)}),\r\n            typeof Symbol === \"function\" &&\r\n                (g[Symbol.iterator] = function () {\r\n                    return this;\r\n                }),\r\n            g\r\n        );\r\n        function verb(n) {\r\n            return function (v) {\r\n                return step([n, v]);\r\n            };\r\n        }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while ((g && ((g = 0), op[0] && (_ = 0)), _))\r\n                try {\r\n                    if (\r\n                        ((f = 1),\r\n                        y &&\r\n                            (t =\r\n                                op[0] & 2\r\n                                    ? y[\"return\"]\r\n                                    : op[0]\r\n                                      ? y[\"throw\"] ||\r\n                                        ((t = y[\"return\"]) && t.call(y), 0)\r\n                                      : y.next) &&\r\n                            !(t = t.call(y, op[1])).done)\r\n                    )\r\n                        return t;\r\n                    if (((y = 0), t)) op = [op[0] & 2, t.value];\r\n                    switch (op[0]) {\r\n                        case 0:\r\n                        case 1:\r\n                            t = op;\r\n                            break;\r\n                        case 4:\r\n                            _.label++;\r\n                            return {value: op[1], done: false};\r\n                        case 5:\r\n                            _.label++;\r\n                            y = op[1];\r\n                            op = [0];\r\n                            continue;\r\n                        case 7:\r\n                            op = _.ops.pop();\r\n                            _.trys.pop();\r\n                            continue;\r\n                        default:\r\n                            if (\r\n                                !((t = _.trys),\r\n                                (t = t.length > 0 && t[t.length - 1])) &&\r\n                                (op[0] === 6 || op[0] === 2)\r\n                            ) {\r\n                                _ = 0;\r\n                                continue;\r\n                            }\r\n                            if (\r\n                                op[0] === 3 &&\r\n                                (!t || (op[1] > t[0] && op[1] < t[3]))\r\n                            ) {\r\n                                _.label = op[1];\r\n                                break;\r\n                            }\r\n                            if (op[0] === 6 && _.label < t[1]) {\r\n                                _.label = t[1];\r\n                                t = op;\r\n                                break;\r\n                            }\r\n                            if (t && _.label < t[2]) {\r\n                                _.label = t[2];\r\n                                _.ops.push(op);\r\n                                break;\r\n                            }\r\n                            if (t[2]) _.ops.pop();\r\n                            _.trys.pop();\r\n                            continue;\r\n                    }\r\n                    op = body.call(thisArg, _);\r\n                } catch (e) {\r\n                    op = [6, e];\r\n                    y = 0;\r\n                } finally {\r\n                    f = t = 0;\r\n                }\r\n            if (op[0] & 5) throw op[1];\r\n            return {value: op[0] ? op[1] : void 0, done: true};\r\n        }\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator,\r\n            m = s && o[s],\r\n            i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\")\r\n            return {\r\n                next: function () {\r\n                    if (o && i >= o.length) o = void 0;\r\n                    return {value: o && o[i++], done: !o};\r\n                }\r\n            };\r\n        throw new TypeError(\r\n            s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\"\r\n        );\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o),\r\n            r,\r\n            ar = [],\r\n            e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\r\n                ar.push(r.value);\r\n        } catch (error) {\r\n            e = {error: error};\r\n        } finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            } finally {\r\n                if (e) throw e.error;\r\n            }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2)\r\n            for (var i = 0, l = from.length, ar; i < l; i++) {\r\n                if (ar || !(i in from)) {\r\n                    if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                    ar[i] = from[i];\r\n                }\r\n            }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    }\r\n\r\n    typeof SuppressedError === \"function\"\r\n        ? SuppressedError\r\n        : function (error, suppressed, message) {\r\n              var e = new Error(message);\r\n              return (\r\n                  (e.name = \"SuppressedError\"),\r\n                  (e.error = error),\r\n                  (e.suppressed = suppressed),\r\n                  e\r\n              );\r\n          };\r\n\r\n    var MessageTypeUItoBG;\r\n    (function (MessageTypeUItoBG) {\r\n        MessageTypeUItoBG[\"GET_DATA\"] = \"ui-bg-get-data\";\r\n        MessageTypeUItoBG[\"GET_DEVTOOLS_DATA\"] = \"ui-bg-get-devtools-data\";\r\n        MessageTypeUItoBG[\"SUBSCRIBE_TO_CHANGES\"] =\r\n            \"ui-bg-subscribe-to-changes\";\r\n        MessageTypeUItoBG[\"UNSUBSCRIBE_FROM_CHANGES\"] =\r\n            \"ui-bg-unsubscribe-from-changes\";\r\n        MessageTypeUItoBG[\"CHANGE_SETTINGS\"] = \"ui-bg-change-settings\";\r\n        MessageTypeUItoBG[\"SET_THEME\"] = \"ui-bg-set-theme\";\r\n        MessageTypeUItoBG[\"TOGGLE_ACTIVE_TAB\"] = \"ui-bg-toggle-active-tab\";\r\n        MessageTypeUItoBG[\"MARK_NEWS_AS_READ\"] = \"ui-bg-mark-news-as-read\";\r\n        MessageTypeUItoBG[\"MARK_NEWS_AS_DISPLAYED\"] =\r\n            \"ui-bg-mark-news-as-displayed\";\r\n        MessageTypeUItoBG[\"LOAD_CONFIG\"] = \"ui-bg-load-config\";\r\n        MessageTypeUItoBG[\"APPLY_DEV_DYNAMIC_THEME_FIXES\"] =\r\n            \"ui-bg-apply-dev-dynamic-theme-fixes\";\r\n        MessageTypeUItoBG[\"RESET_DEV_DYNAMIC_THEME_FIXES\"] =\r\n            \"ui-bg-reset-dev-dynamic-theme-fixes\";\r\n        MessageTypeUItoBG[\"APPLY_DEV_INVERSION_FIXES\"] =\r\n            \"ui-bg-apply-dev-inversion-fixes\";\r\n        MessageTypeUItoBG[\"RESET_DEV_INVERSION_FIXES\"] =\r\n            \"ui-bg-reset-dev-inversion-fixes\";\r\n        MessageTypeUItoBG[\"APPLY_DEV_STATIC_THEMES\"] =\r\n            \"ui-bg-apply-dev-static-themes\";\r\n        MessageTypeUItoBG[\"RESET_DEV_STATIC_THEMES\"] =\r\n            \"ui-bg-reset-dev-static-themes\";\r\n        MessageTypeUItoBG[\"COLOR_SCHEME_CHANGE\"] = \"ui-bg-color-scheme-change\";\r\n        MessageTypeUItoBG[\"HIDE_HIGHLIGHTS\"] = \"ui-bg-hide-highlights\";\r\n    })(MessageTypeUItoBG || (MessageTypeUItoBG = {}));\r\n    var MessageTypeBGtoUI;\r\n    (function (MessageTypeBGtoUI) {\r\n        MessageTypeBGtoUI[\"CHANGES\"] = \"bg-ui-changes\";\r\n    })(MessageTypeBGtoUI || (MessageTypeBGtoUI = {}));\r\n    var DebugMessageTypeBGtoUI;\r\n    (function (DebugMessageTypeBGtoUI) {\r\n        DebugMessageTypeBGtoUI[\"CSS_UPDATE\"] = \"debug-bg-ui-css-update\";\r\n        DebugMessageTypeBGtoUI[\"UPDATE\"] = \"debug-bg-ui-update\";\r\n    })(DebugMessageTypeBGtoUI || (DebugMessageTypeBGtoUI = {}));\r\n    var MessageTypeBGtoCS;\r\n    (function (MessageTypeBGtoCS) {\r\n        MessageTypeBGtoCS[\"ADD_CSS_FILTER\"] = \"bg-cs-add-css-filter\";\r\n        MessageTypeBGtoCS[\"ADD_DYNAMIC_THEME\"] = \"bg-cs-add-dynamic-theme\";\r\n        MessageTypeBGtoCS[\"ADD_STATIC_THEME\"] = \"bg-cs-add-static-theme\";\r\n        MessageTypeBGtoCS[\"ADD_SVG_FILTER\"] = \"bg-cs-add-svg-filter\";\r\n        MessageTypeBGtoCS[\"CLEAN_UP\"] = \"bg-cs-clean-up\";\r\n        MessageTypeBGtoCS[\"FETCH_RESPONSE\"] = \"bg-cs-fetch-response\";\r\n        MessageTypeBGtoCS[\"UNSUPPORTED_SENDER\"] = \"bg-cs-unsupported-sender\";\r\n    })(MessageTypeBGtoCS || (MessageTypeBGtoCS = {}));\r\n    var DebugMessageTypeBGtoCS;\r\n    (function (DebugMessageTypeBGtoCS) {\r\n        DebugMessageTypeBGtoCS[\"RELOAD\"] = \"debug-bg-cs-reload\";\r\n    })(DebugMessageTypeBGtoCS || (DebugMessageTypeBGtoCS = {}));\r\n    var MessageTypeCStoBG;\r\n    (function (MessageTypeCStoBG) {\r\n        MessageTypeCStoBG[\"COLOR_SCHEME_CHANGE\"] = \"cs-bg-color-scheme-change\";\r\n        MessageTypeCStoBG[\"DARK_THEME_DETECTED\"] = \"cs-bg-dark-theme-detected\";\r\n        MessageTypeCStoBG[\"DARK_THEME_NOT_DETECTED\"] =\r\n            \"cs-bg-dark-theme-not-detected\";\r\n        MessageTypeCStoBG[\"FETCH\"] = \"cs-bg-fetch\";\r\n        MessageTypeCStoBG[\"DOCUMENT_CONNECT\"] = \"cs-bg-document-connect\";\r\n        MessageTypeCStoBG[\"DOCUMENT_FORGET\"] = \"cs-bg-document-forget\";\r\n        MessageTypeCStoBG[\"DOCUMENT_FREEZE\"] = \"cs-bg-document-freeze\";\r\n        MessageTypeCStoBG[\"DOCUMENT_RESUME\"] = \"cs-bg-document-resume\";\r\n    })(MessageTypeCStoBG || (MessageTypeCStoBG = {}));\r\n    var DebugMessageTypeCStoBG;\r\n    (function (DebugMessageTypeCStoBG) {\r\n        DebugMessageTypeCStoBG[\"LOG\"] = \"debug-cs-bg-log\";\r\n    })(DebugMessageTypeCStoBG || (DebugMessageTypeCStoBG = {}));\r\n    var MessageTypeCStoUI;\r\n    (function (MessageTypeCStoUI) {\r\n        MessageTypeCStoUI[\"EXPORT_CSS_RESPONSE\"] = \"cs-ui-export-css-response\";\r\n    })(MessageTypeCStoUI || (MessageTypeCStoUI = {}));\r\n    var MessageTypeUItoCS;\r\n    (function (MessageTypeUItoCS) {\r\n        MessageTypeUItoCS[\"EXPORT_CSS\"] = \"ui-cs-export-css\";\r\n    })(MessageTypeUItoCS || (MessageTypeUItoCS = {}));\r\n\r\n    var isNavigatorDefined = typeof navigator !== \"undefined\";\r\n    var userAgent = isNavigatorDefined\r\n        ? navigator.userAgentData &&\r\n          Array.isArray(navigator.userAgentData.brands)\r\n            ? navigator.userAgentData.brands\r\n                  .map(function (brand) {\r\n                      return \"\"\r\n                          .concat(brand.brand.toLowerCase(), \" \")\r\n                          .concat(brand.version);\r\n                  })\r\n                  .join(\" \")\r\n            : navigator.userAgent.toLowerCase()\r\n        : \"some useragent\";\r\n    var platform = isNavigatorDefined\r\n        ? navigator.userAgentData &&\r\n          typeof navigator.userAgentData.platform === \"string\"\r\n            ? navigator.userAgentData.platform.toLowerCase()\r\n            : navigator.platform.toLowerCase()\r\n        : \"some platform\";\r\n    var isChromium =\r\n        userAgent.includes(\"chrome\") || userAgent.includes(\"chromium\");\r\n    var isFirefox =\r\n        userAgent.includes(\"firefox\") ||\r\n        userAgent.includes(\"thunderbird\") ||\r\n        userAgent.includes(\"librewolf\");\r\n    var isSafari = userAgent.includes(\"safari\") && !isChromium;\r\n    var isWindows = platform.startsWith(\"win\");\r\n    var isMacOS = platform.startsWith(\"mac\");\r\n    isNavigatorDefined && navigator.userAgentData\r\n        ? navigator.userAgentData.mobile\r\n        : userAgent.includes(\"mobile\");\r\n    var isShadowDomSupported = typeof ShadowRoot === \"function\";\r\n    var isMatchMediaChangeEventListenerSupported =\r\n        typeof MediaQueryList === \"function\" &&\r\n        typeof MediaQueryList.prototype.addEventListener === \"function\";\r\n    (function () {\r\n        var m = userAgent.match(/chrom(?:e|ium)(?:\\/| )([^ ]+)/);\r\n        if (m && m[1]) {\r\n            return m[1];\r\n        }\r\n        return \"\";\r\n    })();\r\n    (function () {\r\n        var m = userAgent.match(/(?:firefox|librewolf)(?:\\/| )([^ ]+)/);\r\n        if (m && m[1]) {\r\n            return m[1];\r\n        }\r\n        return \"\";\r\n    })();\r\n    var isDefinedSelectorSupported = (function () {\r\n        try {\r\n            document.querySelector(\":defined\");\r\n            return true;\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    })();\r\n    var isCSSColorSchemePropSupported = (function () {\r\n        try {\r\n            if (typeof document === \"undefined\") {\r\n                return false;\r\n            }\r\n            var el = document.createElement(\"div\");\r\n            if (!el || typeof el.style !== \"object\") {\r\n                return false;\r\n            }\r\n            if (typeof el.style.colorScheme === \"string\") {\r\n                return true;\r\n            }\r\n            el.setAttribute(\"style\", \"color-scheme: dark\");\r\n            return el.style.colorScheme === \"dark\";\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })();\r\n\r\n    function getOKResponse(url, mimeType, origin) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        return [\r\n                            4,\r\n                            fetch(url, {\r\n                                cache: \"force-cache\",\r\n                                credentials: \"omit\",\r\n                                referrer: origin\r\n                            })\r\n                        ];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (\r\n                            isFirefox &&\r\n                            mimeType === \"text/css\" &&\r\n                            url.startsWith(\"moz-extension://\") &&\r\n                            url.endsWith(\".css\")\r\n                        ) {\r\n                            return [2, response];\r\n                        }\r\n                        if (\r\n                            mimeType &&\r\n                            !response.headers\r\n                                .get(\"Content-Type\")\r\n                                .startsWith(mimeType)\r\n                        ) {\r\n                            throw new Error(\r\n                                \"Mime type mismatch when loading \".concat(url)\r\n                            );\r\n                        }\r\n                        if (!response.ok) {\r\n                            throw new Error(\r\n                                \"Unable to load \"\r\n                                    .concat(url, \" \")\r\n                                    .concat(response.status, \" \")\r\n                                    .concat(response.statusText)\r\n                            );\r\n                        }\r\n                        return [2, response];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function loadAsDataURL(url, mimeType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        return [4, getOKResponse(url, mimeType)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [4, readResponseAsDataURL(response)];\r\n                    case 2:\r\n                        return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function loadAsBlob(url, mimeType) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        return [4, getOKResponse(url, mimeType)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [4, response.blob()];\r\n                    case 2:\r\n                        return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function readResponseAsDataURL(response) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var blob, dataURL;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        return [4, response.blob()];\r\n                    case 1:\r\n                        blob = _a.sent();\r\n                        return [\r\n                            4,\r\n                            new Promise(function (resolve) {\r\n                                var reader = new FileReader();\r\n                                reader.onloadend = function () {\r\n                                    return resolve(reader.result);\r\n                                };\r\n                                reader.readAsDataURL(blob);\r\n                            })\r\n                        ];\r\n                    case 2:\r\n                        dataURL = _a.sent();\r\n                        return [2, dataURL];\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    var throwCORSError = function (url) {\r\n        return __awaiter(void 0, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [\r\n                    2,\r\n                    Promise.reject(\r\n                        new Error(\r\n                            [\r\n                                \"Embedded Dark Reader cannot access a cross-origin resource\",\r\n                                url,\r\n                                \"Overview your URLs and CORS policies or use\",\r\n                                \"`DarkReader.setFetchMethod(fetch: (url) => Promise<Response>))`.\",\r\n                                \"See if using `DarkReader.setFetchMethod(window.fetch)`\",\r\n                                \"before `DarkReader.enable()` works.\"\r\n                            ].join(\" \")\r\n                        )\r\n                    )\r\n                ];\r\n            });\r\n        });\r\n    };\r\n    var fetcher = throwCORSError;\r\n    function setFetchMethod$1(fetch) {\r\n        if (fetch) {\r\n            fetcher = fetch;\r\n        } else {\r\n            fetcher = throwCORSError;\r\n        }\r\n    }\r\n    function callFetchMethod(url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        return [4, fetcher(url)];\r\n                    case 1:\r\n                        return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    if (!window.chrome) {\r\n        window.chrome = {};\r\n    }\r\n    if (!chrome.runtime) {\r\n        chrome.runtime = {};\r\n    }\r\n    var messageListeners = new Set();\r\n    function sendMessage() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var id_1, _a, url, responseType, response, text_1, error_1;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (\r\n                            !(\r\n                                args[0] &&\r\n                                args[0].type === MessageTypeCStoBG.FETCH\r\n                            )\r\n                        )\r\n                            return [3, 8];\r\n                        id_1 = args[0].id;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 7, , 8]);\r\n                        (_a = args[0].data),\r\n                            (url = _a.url),\r\n                            (responseType = _a.responseType);\r\n                        return [4, callFetchMethod(url)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        if (!(responseType === \"data-url\")) return [3, 4];\r\n                        return [4, readResponseAsDataURL(response)];\r\n                    case 3:\r\n                        text_1 = _b.sent();\r\n                        return [3, 6];\r\n                    case 4:\r\n                        return [4, response.text()];\r\n                    case 5:\r\n                        text_1 = _b.sent();\r\n                        _b.label = 6;\r\n                    case 6:\r\n                        messageListeners.forEach(function (cb) {\r\n                            return cb({\r\n                                type: MessageTypeBGtoCS.FETCH_RESPONSE,\r\n                                data: text_1,\r\n                                error: null,\r\n                                id: id_1\r\n                            });\r\n                        });\r\n                        return [3, 8];\r\n                    case 7:\r\n                        error_1 = _b.sent();\r\n                        console.error(error_1);\r\n                        messageListeners.forEach(function (cb) {\r\n                            return cb({\r\n                                type: MessageTypeBGtoCS.FETCH_RESPONSE,\r\n                                data: null,\r\n                                error: error_1,\r\n                                id: id_1\r\n                            });\r\n                        });\r\n                        return [3, 8];\r\n                    case 8:\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function addMessageListener(callback) {\r\n        messageListeners.add(callback);\r\n    }\r\n    if (typeof chrome.runtime.sendMessage === \"function\") {\r\n        var nativeSendMessage_1 = chrome.runtime.sendMessage;\r\n        chrome.runtime.sendMessage = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            sendMessage.apply(void 0, __spreadArray([], __read(args), false));\r\n            nativeSendMessage_1.apply(chrome.runtime, args);\r\n        };\r\n    } else {\r\n        chrome.runtime.sendMessage = sendMessage;\r\n    }\r\n    if (!chrome.runtime.onMessage) {\r\n        chrome.runtime.onMessage = {};\r\n    }\r\n    if (typeof chrome.runtime.onMessage.addListener === \"function\") {\r\n        var nativeAddListener_1 = chrome.runtime.onMessage.addListener;\r\n        chrome.runtime.onMessage.addListener = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            addMessageListener(args[0]);\r\n            nativeAddListener_1.apply(chrome.runtime.onMessage, args);\r\n        };\r\n    } else {\r\n        chrome.runtime.onMessage.addListener = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            return addMessageListener(args[0]);\r\n        };\r\n    }\r\n\r\n    var ThemeEngine;\r\n    (function (ThemeEngine) {\r\n        ThemeEngine[\"cssFilter\"] = \"cssFilter\";\r\n        ThemeEngine[\"svgFilter\"] = \"svgFilter\";\r\n        ThemeEngine[\"staticTheme\"] = \"staticTheme\";\r\n        ThemeEngine[\"dynamicTheme\"] = \"dynamicTheme\";\r\n    })(ThemeEngine || (ThemeEngine = {}));\r\n\r\n    var AutomationMode;\r\n    (function (AutomationMode) {\r\n        AutomationMode[\"NONE\"] = \"\";\r\n        AutomationMode[\"TIME\"] = \"time\";\r\n        AutomationMode[\"SYSTEM\"] = \"system\";\r\n        AutomationMode[\"LOCATION\"] = \"location\";\r\n    })(AutomationMode || (AutomationMode = {}));\r\n\r\n    var DEFAULT_COLORS = {\r\n        darkScheme: {\r\n            background: \"#181a1b\",\r\n            text: \"#e8e6e3\"\r\n        },\r\n        lightScheme: {\r\n            background: \"#dcdad7\",\r\n            text: \"#181a1b\"\r\n        }\r\n    };\r\n    var DEFAULT_THEME = {\r\n        mode: 1,\r\n        brightness: 100,\r\n        contrast: 100,\r\n        grayscale: 0,\r\n        sepia: 0,\r\n        useFont: false,\r\n        fontFamily: isMacOS\r\n            ? \"Helvetica Neue\"\r\n            : isWindows\r\n              ? \"Segoe UI\"\r\n              : \"Open Sans\",\r\n        textStroke: 0,\r\n        engine: ThemeEngine.dynamicTheme,\r\n        stylesheet: \"\",\r\n        darkSchemeBackgroundColor: DEFAULT_COLORS.darkScheme.background,\r\n        darkSchemeTextColor: DEFAULT_COLORS.darkScheme.text,\r\n        lightSchemeBackgroundColor: DEFAULT_COLORS.lightScheme.background,\r\n        lightSchemeTextColor: DEFAULT_COLORS.lightScheme.text,\r\n        scrollbarColor: isMacOS ? \"\" : \"auto\",\r\n        selectionColor: \"auto\",\r\n        styleSystemControls: !isCSSColorSchemePropSupported,\r\n        lightColorScheme: \"Default\",\r\n        darkColorScheme: \"Default\",\r\n        immediateModify: false\r\n    };\r\n    ({\r\n        schemeVersion: 0,\r\n        enabled: true,\r\n        fetchNews: true,\r\n        theme: DEFAULT_THEME,\r\n        presets: [],\r\n        customThemes: [],\r\n        enabledByDefault: true,\r\n        enabledFor: [],\r\n        disabledFor: [],\r\n        changeBrowserTheme: false,\r\n        syncSettings: true,\r\n        syncSitesFixes: false,\r\n        automation: {\r\n            enabled: false,\r\n            mode: AutomationMode.NONE,\r\n            behavior: \"OnOff\"\r\n        },\r\n        time: {\r\n            activation: \"18:00\",\r\n            deactivation: \"9:00\"\r\n        },\r\n        location: {\r\n            latitude: null,\r\n            longitude: null\r\n        },\r\n        previewNewDesign: false,\r\n        enableForPDF: true,\r\n        enableForProtectedPages: false,\r\n        enableContextMenus: false,\r\n        detectDarkTheme: false\r\n    });\r\n\r\n    function isArrayLike(items) {\r\n        return items.length != null;\r\n    }\r\n    function forEach(items, iterator) {\r\n        var e_1, _a;\r\n        if (isArrayLike(items)) {\r\n            for (var i = 0, len = items.length; i < len; i++) {\r\n                iterator(items[i]);\r\n            }\r\n        } else {\r\n            try {\r\n                for (\r\n                    var items_1 = __values(items), items_1_1 = items_1.next();\r\n                    !items_1_1.done;\r\n                    items_1_1 = items_1.next()\r\n                ) {\r\n                    var item = items_1_1.value;\r\n                    iterator(item);\r\n                }\r\n            } catch (e_1_1) {\r\n                e_1 = {error: e_1_1};\r\n            } finally {\r\n                try {\r\n                    if (items_1_1 && !items_1_1.done && (_a = items_1.return))\r\n                        _a.call(items_1);\r\n                } finally {\r\n                    if (e_1) throw e_1.error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function push(array, addition) {\r\n        forEach(addition, function (a) {\r\n            return array.push(a);\r\n        });\r\n    }\r\n    function toArray(items) {\r\n        var results = [];\r\n        for (var i = 0, len = items.length; i < len; i++) {\r\n            results.push(items[i]);\r\n        }\r\n        return results;\r\n    }\r\n\r\n    function logInfo() {}\r\n    function logWarn() {}\r\n\r\n    function throttle(callback) {\r\n        var pending = false;\r\n        var frameId = null;\r\n        var lastArgs;\r\n        var throttled = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            lastArgs = args;\r\n            if (frameId) {\r\n                pending = true;\r\n            } else {\r\n                callback.apply(\r\n                    void 0,\r\n                    __spreadArray([], __read(lastArgs), false)\r\n                );\r\n                frameId = requestAnimationFrame(function () {\r\n                    frameId = null;\r\n                    if (pending) {\r\n                        callback.apply(\r\n                            void 0,\r\n                            __spreadArray([], __read(lastArgs), false)\r\n                        );\r\n                        pending = false;\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        var cancel = function () {\r\n            cancelAnimationFrame(frameId);\r\n            pending = false;\r\n            frameId = null;\r\n        };\r\n        return Object.assign(throttled, {cancel: cancel});\r\n    }\r\n    function createAsyncTasksQueue() {\r\n        var tasks = [];\r\n        var frameId = null;\r\n        function runTasks() {\r\n            var task;\r\n            while ((task = tasks.shift())) {\r\n                task();\r\n            }\r\n            frameId = null;\r\n        }\r\n        function add(task) {\r\n            tasks.push(task);\r\n            if (!frameId) {\r\n                frameId = requestAnimationFrame(runTasks);\r\n            }\r\n        }\r\n        function cancel() {\r\n            tasks.splice(0);\r\n            cancelAnimationFrame(frameId);\r\n            frameId = null;\r\n        }\r\n        return {add: add, cancel: cancel};\r\n    }\r\n    var delayTokens = new Set();\r\n    function requestAnimationFrameOnce(token, callback) {\r\n        if (delayTokens.has(token)) {\r\n            return;\r\n        }\r\n        delayTokens.add(token);\r\n        requestAnimationFrame(function () {\r\n            delayTokens.delete(token);\r\n            callback();\r\n        });\r\n    }\r\n\r\n    function getDuration(time) {\r\n        var duration = 0;\r\n        if (time.seconds) {\r\n            duration += time.seconds * 1000;\r\n        }\r\n        if (time.minutes) {\r\n            duration += time.minutes * 60 * 1000;\r\n        }\r\n        if (time.hours) {\r\n            duration += time.hours * 60 * 60 * 1000;\r\n        }\r\n        if (time.days) {\r\n            duration += time.days * 24 * 60 * 60 * 1000;\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    function removeNode(node) {\r\n        node && node.parentNode && node.parentNode.removeChild(node);\r\n    }\r\n    function watchForNodePosition(node, mode, onRestore) {\r\n        if (onRestore === void 0) {\r\n            onRestore = Function.prototype;\r\n        }\r\n        var MAX_ATTEMPTS_COUNT = 10;\r\n        var RETRY_TIMEOUT = getDuration({seconds: 2});\r\n        var ATTEMPTS_INTERVAL = getDuration({seconds: 10});\r\n        var prevSibling = node.previousSibling;\r\n        var parent = node.parentNode;\r\n        if (!parent) {\r\n            throw new Error(\r\n                \"Unable to watch for node position: parent element not found\"\r\n            );\r\n        }\r\n        if (mode === \"prev-sibling\" && !prevSibling) {\r\n            throw new Error(\r\n                \"Unable to watch for node position: there is no previous sibling\"\r\n            );\r\n        }\r\n        var attempts = 0;\r\n        var start = null;\r\n        var timeoutId = null;\r\n        var restore = throttle(function () {\r\n            if (timeoutId) {\r\n                return;\r\n            }\r\n            attempts++;\r\n            var now = Date.now();\r\n            if (start == null) {\r\n                start = now;\r\n            } else if (attempts >= MAX_ATTEMPTS_COUNT) {\r\n                if (now - start < ATTEMPTS_INTERVAL) {\r\n                    timeoutId = setTimeout(function () {\r\n                        start = null;\r\n                        attempts = 0;\r\n                        timeoutId = null;\r\n                        restore();\r\n                    }, RETRY_TIMEOUT);\r\n                    return;\r\n                }\r\n                start = now;\r\n                attempts = 1;\r\n            }\r\n            if (mode === \"head\") {\r\n                if (prevSibling && prevSibling.parentNode !== parent) {\r\n                    stop();\r\n                    return;\r\n                }\r\n            }\r\n            if (mode === \"prev-sibling\") {\r\n                if (prevSibling.parentNode == null) {\r\n                    stop();\r\n                    return;\r\n                }\r\n                if (prevSibling.parentNode !== parent) {\r\n                    updateParent(prevSibling.parentNode);\r\n                }\r\n            }\r\n            if (mode === \"head\" && !parent.isConnected) {\r\n                parent = document.head;\r\n            }\r\n            parent.insertBefore(\r\n                node,\r\n                prevSibling && prevSibling.isConnected\r\n                    ? prevSibling.nextSibling\r\n                    : parent.firstChild\r\n            );\r\n            observer.takeRecords();\r\n            onRestore && onRestore();\r\n        });\r\n        var observer = new MutationObserver(function () {\r\n            if (\r\n                (mode === \"head\" &&\r\n                    (node.parentNode !== parent ||\r\n                        !node.parentNode.isConnected)) ||\r\n                (mode === \"prev-sibling\" &&\r\n                    node.previousSibling !== prevSibling)\r\n            ) {\r\n                restore();\r\n            }\r\n        });\r\n        var run = function () {\r\n            observer.observe(parent, {childList: true});\r\n        };\r\n        var stop = function () {\r\n            clearTimeout(timeoutId);\r\n            observer.disconnect();\r\n            restore.cancel();\r\n        };\r\n        var skip = function () {\r\n            observer.takeRecords();\r\n        };\r\n        var updateParent = function (parentNode) {\r\n            parent = parentNode;\r\n            stop();\r\n            run();\r\n        };\r\n        run();\r\n        return {run: run, stop: stop, skip: skip};\r\n    }\r\n    function iterateShadowHosts(root, iterator) {\r\n        if (root == null) {\r\n            return;\r\n        }\r\n        var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\r\n            acceptNode: function (node) {\r\n                return node.shadowRoot == null\r\n                    ? NodeFilter.FILTER_SKIP\r\n                    : NodeFilter.FILTER_ACCEPT;\r\n            }\r\n        });\r\n        for (\r\n            var node = root.shadowRoot ? walker.currentNode : walker.nextNode();\r\n            node != null;\r\n            node = walker.nextNode()\r\n        ) {\r\n            if (node.classList.contains(\"surfingkeys_hints_host\")) {\r\n                continue;\r\n            }\r\n            iterator(node);\r\n            iterateShadowHosts(node.shadowRoot, iterator);\r\n        }\r\n    }\r\n    var isDOMReady = function () {\r\n        return (\r\n            document.readyState === \"complete\" ||\r\n            document.readyState === \"interactive\"\r\n        );\r\n    };\r\n    function setIsDOMReady(newFunc) {\r\n        isDOMReady = newFunc;\r\n    }\r\n    var readyStateListeners = new Set();\r\n    function addDOMReadyListener(listener) {\r\n        isDOMReady() ? listener() : readyStateListeners.add(listener);\r\n    }\r\n    function removeDOMReadyListener(listener) {\r\n        readyStateListeners.delete(listener);\r\n    }\r\n    function isReadyStateComplete() {\r\n        return document.readyState === \"complete\";\r\n    }\r\n    var readyStateCompleteListeners = new Set();\r\n    function addReadyStateCompleteListener(listener) {\r\n        isReadyStateComplete()\r\n            ? listener()\r\n            : readyStateCompleteListeners.add(listener);\r\n    }\r\n    function cleanReadyStateCompleteListeners() {\r\n        readyStateCompleteListeners.clear();\r\n    }\r\n    if (!isDOMReady()) {\r\n        var onReadyStateChange_1 = function () {\r\n            if (isDOMReady()) {\r\n                readyStateListeners.forEach(function (listener) {\r\n                    return listener();\r\n                });\r\n                readyStateListeners.clear();\r\n                if (isReadyStateComplete()) {\r\n                    document.removeEventListener(\r\n                        \"readystatechange\",\r\n                        onReadyStateChange_1\r\n                    );\r\n                    readyStateCompleteListeners.forEach(function (listener) {\r\n                        return listener();\r\n                    });\r\n                    readyStateCompleteListeners.clear();\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", onReadyStateChange_1);\r\n    }\r\n    var HUGE_MUTATIONS_COUNT = 1000;\r\n    function isHugeMutation(mutations) {\r\n        if (mutations.length > HUGE_MUTATIONS_COUNT) {\r\n            return true;\r\n        }\r\n        var addedNodesCount = 0;\r\n        for (var i = 0; i < mutations.length; i++) {\r\n            addedNodesCount += mutations[i].addedNodes.length;\r\n            if (addedNodesCount > HUGE_MUTATIONS_COUNT) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    function getElementsTreeOperations(mutations) {\r\n        var additions = new Set();\r\n        var deletions = new Set();\r\n        var moves = new Set();\r\n        mutations.forEach(function (m) {\r\n            forEach(m.addedNodes, function (n) {\r\n                if (n instanceof Element && n.isConnected) {\r\n                    additions.add(n);\r\n                }\r\n            });\r\n            forEach(m.removedNodes, function (n) {\r\n                if (n instanceof Element) {\r\n                    if (n.isConnected) {\r\n                        moves.add(n);\r\n                        additions.delete(n);\r\n                    } else {\r\n                        deletions.add(n);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        var duplicateAdditions = [];\r\n        var duplicateDeletions = [];\r\n        additions.forEach(function (node) {\r\n            if (additions.has(node.parentElement)) {\r\n                duplicateAdditions.push(node);\r\n            }\r\n        });\r\n        deletions.forEach(function (node) {\r\n            if (deletions.has(node.parentElement)) {\r\n                duplicateDeletions.push(node);\r\n            }\r\n        });\r\n        duplicateAdditions.forEach(function (node) {\r\n            return additions.delete(node);\r\n        });\r\n        duplicateDeletions.forEach(function (node) {\r\n            return deletions.delete(node);\r\n        });\r\n        return {additions: additions, moves: moves, deletions: deletions};\r\n    }\r\n    var optimizedTreeObservers = new Map();\r\n    var optimizedTreeCallbacks = new WeakMap();\r\n    function createOptimizedTreeObserver(root, callbacks) {\r\n        var observer;\r\n        var observerCallbacks;\r\n        var domReadyListener;\r\n        if (optimizedTreeObservers.has(root)) {\r\n            observer = optimizedTreeObservers.get(root);\r\n            observerCallbacks = optimizedTreeCallbacks.get(observer);\r\n        } else {\r\n            var hadHugeMutationsBefore_1 = false;\r\n            var subscribedForReadyState_1 = false;\r\n            observer = new MutationObserver(function (mutations) {\r\n                if (isHugeMutation(mutations)) {\r\n                    if (!hadHugeMutationsBefore_1 || isDOMReady()) {\r\n                        observerCallbacks.forEach(function (_a) {\r\n                            var onHugeMutations = _a.onHugeMutations;\r\n                            return onHugeMutations(root);\r\n                        });\r\n                    } else if (!subscribedForReadyState_1) {\r\n                        domReadyListener = function () {\r\n                            return observerCallbacks.forEach(function (_a) {\r\n                                var onHugeMutations = _a.onHugeMutations;\r\n                                return onHugeMutations(root);\r\n                            });\r\n                        };\r\n                        addDOMReadyListener(domReadyListener);\r\n                        subscribedForReadyState_1 = true;\r\n                    }\r\n                    hadHugeMutationsBefore_1 = true;\r\n                } else {\r\n                    var elementsOperations_1 =\r\n                        getElementsTreeOperations(mutations);\r\n                    observerCallbacks.forEach(function (_a) {\r\n                        var onMinorMutations = _a.onMinorMutations;\r\n                        return onMinorMutations(elementsOperations_1);\r\n                    });\r\n                }\r\n            });\r\n            observer.observe(root, {childList: true, subtree: true});\r\n            optimizedTreeObservers.set(root, observer);\r\n            observerCallbacks = new Set();\r\n            optimizedTreeCallbacks.set(observer, observerCallbacks);\r\n        }\r\n        observerCallbacks.add(callbacks);\r\n        return {\r\n            disconnect: function () {\r\n                observerCallbacks.delete(callbacks);\r\n                if (domReadyListener) {\r\n                    removeDOMReadyListener(domReadyListener);\r\n                }\r\n                if (observerCallbacks.size === 0) {\r\n                    observer.disconnect();\r\n                    optimizedTreeCallbacks.delete(observer);\r\n                    optimizedTreeObservers.delete(root);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var anchor;\r\n    var parsedURLCache = new Map();\r\n    function fixBaseURL($url) {\r\n        if (!anchor) {\r\n            anchor = document.createElement(\"a\");\r\n        }\r\n        anchor.href = $url;\r\n        return anchor.href;\r\n    }\r\n    function parseURL($url, $base) {\r\n        if ($base === void 0) {\r\n            $base = null;\r\n        }\r\n        var key = \"\".concat($url).concat($base ? \";\".concat($base) : \"\");\r\n        if (parsedURLCache.has(key)) {\r\n            return parsedURLCache.get(key);\r\n        }\r\n        if ($base) {\r\n            var parsedURL_1 = new URL($url, fixBaseURL($base));\r\n            parsedURLCache.set(key, parsedURL_1);\r\n            return parsedURL_1;\r\n        }\r\n        var parsedURL = new URL(fixBaseURL($url));\r\n        parsedURLCache.set($url, parsedURL);\r\n        return parsedURL;\r\n    }\r\n    function getAbsoluteURL($base, $relative) {\r\n        if ($relative.match(/^data\\\\?\\:/)) {\r\n            return $relative;\r\n        }\r\n        if (/^\\/\\//.test($relative)) {\r\n            return \"\".concat(location.protocol).concat($relative);\r\n        }\r\n        var b = parseURL($base);\r\n        var a = parseURL($relative, b.href);\r\n        return a.href;\r\n    }\r\n    function isRelativeHrefOnAbsolutePath(href) {\r\n        if (href.startsWith(\"data:\")) {\r\n            return true;\r\n        }\r\n        var url = parseURL(href);\r\n        if (url.protocol !== location.protocol) {\r\n            return false;\r\n        }\r\n        if (url.hostname !== location.hostname) {\r\n            return false;\r\n        }\r\n        if (url.port !== location.port) {\r\n            return false;\r\n        }\r\n        return url.pathname === location.pathname;\r\n    }\r\n\r\n    function iterateCSSRules(rules, iterate, onMediaRuleError) {\r\n        forEach(rules, function (rule) {\r\n            if (rule.selectorText) {\r\n                iterate(rule);\r\n            } else if (rule.href) {\r\n                try {\r\n                    iterateCSSRules(\r\n                        rule.styleSheet.cssRules,\r\n                        iterate,\r\n                        onMediaRuleError\r\n                    );\r\n                } catch (err) {\r\n                    logInfo(\"Found a non-loaded link.\");\r\n                    onMediaRuleError && onMediaRuleError();\r\n                }\r\n            } else if (rule.media) {\r\n                var media = Array.from(rule.media);\r\n                var isScreenOrAllOrQuery = media.some(function (m) {\r\n                    return (\r\n                        m.startsWith(\"screen\") ||\r\n                        m.startsWith(\"all\") ||\r\n                        m.startsWith(\"(\")\r\n                    );\r\n                });\r\n                var isPrintOrSpeech = media.some(function (m) {\r\n                    return m.startsWith(\"print\") || m.startsWith(\"speech\");\r\n                });\r\n                if (isScreenOrAllOrQuery || !isPrintOrSpeech) {\r\n                    iterateCSSRules(rule.cssRules, iterate, onMediaRuleError);\r\n                }\r\n            } else if (rule.conditionText) {\r\n                if (CSS.supports(rule.conditionText)) {\r\n                    iterateCSSRules(rule.cssRules, iterate, onMediaRuleError);\r\n                }\r\n            } else {\r\n                logWarn(\"CSSRule type not supported\", rule);\r\n            }\r\n        });\r\n    }\r\n    var shorthandVarDependantProperties = [\r\n        \"background\",\r\n        \"border\",\r\n        \"border-color\",\r\n        \"border-bottom\",\r\n        \"border-left\",\r\n        \"border-right\",\r\n        \"border-top\",\r\n        \"outline\",\r\n        \"outline-color\"\r\n    ];\r\n    var shorthandVarDepPropRegexps = isSafari\r\n        ? shorthandVarDependantProperties.map(function (prop) {\r\n              var regexp = new RegExp(\"\".concat(prop, \":\\\\s*(.*?)\\\\s*;\"));\r\n              return [prop, regexp];\r\n          })\r\n        : null;\r\n    function iterateCSSDeclarations(style, iterate) {\r\n        forEach(style, function (property) {\r\n            var value = style.getPropertyValue(property).trim();\r\n            if (!value) {\r\n                return;\r\n            }\r\n            iterate(property, value);\r\n        });\r\n        var cssText = style.cssText;\r\n        if (cssText.includes(\"var(\")) {\r\n            if (isSafari) {\r\n                shorthandVarDepPropRegexps.forEach(function (_a) {\r\n                    var _b = __read(_a, 2),\r\n                        prop = _b[0],\r\n                        regexp = _b[1];\r\n                    var match = cssText.match(regexp);\r\n                    if (match && match[1]) {\r\n                        var val = match[1].trim();\r\n                        iterate(prop, val);\r\n                    }\r\n                });\r\n            } else {\r\n                shorthandVarDependantProperties.forEach(function (prop) {\r\n                    var val = style.getPropertyValue(prop);\r\n                    if (val && val.includes(\"var(\")) {\r\n                        iterate(prop, val);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    var cssURLRegex = /url\\((('.*?')|(\".*?\")|([^\\)]*?))\\)/g;\r\n    var cssImportRegex =\r\n        /@import\\s*(url\\()?(('.+?')|(\".+?\")|([^\\)]*?))\\)? ?(screen)?;?/gi;\r\n    function getCSSURLValue(cssURL) {\r\n        return cssURL\r\n            .trim()\r\n            .replace(/[\\n\\r\\\\]+/g, \"\")\r\n            .replace(/^url\\((.*)\\)$/, \"$1\")\r\n            .trim()\r\n            .replace(/^\"(.*)\"$/, \"$1\")\r\n            .replace(/^'(.*)'$/, \"$1\")\r\n            .replace(/(?:\\\\(.))/g, \"$1\");\r\n    }\r\n    function getCSSBaseBath(url) {\r\n        var cssURL = parseURL(url);\r\n        return \"\"\r\n            .concat(cssURL.origin)\r\n            .concat(\r\n                cssURL.pathname\r\n                    .replace(/\\?.*$/, \"\")\r\n                    .replace(/(\\/)([^\\/]+)$/i, \"$1\")\r\n            );\r\n    }\r\n    function replaceCSSRelativeURLsWithAbsolute($css, cssBasePath) {\r\n        return $css.replace(cssURLRegex, function (match) {\r\n            var pathValue = getCSSURLValue(match);\r\n            try {\r\n                return \"url('\".concat(\r\n                    getAbsoluteURL(cssBasePath, pathValue),\r\n                    \"')\"\r\n                );\r\n            } catch (err) {\r\n                return match;\r\n            }\r\n        });\r\n    }\r\n    var cssCommentsRegex = /\\/\\*[\\s\\S]*?\\*\\//g;\r\n    function removeCSSComments($css) {\r\n        return $css.replace(cssCommentsRegex, \"\");\r\n    }\r\n    var fontFaceRegex = /@font-face\\s*{[^}]*}/g;\r\n    function replaceCSSFontFace($css) {\r\n        return $css.replace(fontFaceRegex, \"\");\r\n    }\r\n\r\n    function evalMath(expression) {\r\n        var rpnStack = [];\r\n        var workingStack = [];\r\n        var lastToken;\r\n        for (var i = 0, len = expression.length; i < len; i++) {\r\n            var token = expression[i];\r\n            if (!token || token === \" \") {\r\n                continue;\r\n            }\r\n            if (operators.has(token)) {\r\n                var op = operators.get(token);\r\n                while (workingStack.length) {\r\n                    var currentOp = operators.get(workingStack[0]);\r\n                    if (!currentOp) {\r\n                        break;\r\n                    }\r\n                    if (op.lessOrEqualThan(currentOp)) {\r\n                        rpnStack.push(workingStack.shift());\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                workingStack.unshift(token);\r\n            } else if (!lastToken || operators.has(lastToken)) {\r\n                rpnStack.push(token);\r\n            } else {\r\n                rpnStack[rpnStack.length - 1] += token;\r\n            }\r\n            lastToken = token;\r\n        }\r\n        rpnStack.push.apply(\r\n            rpnStack,\r\n            __spreadArray([], __read(workingStack), false)\r\n        );\r\n        var stack = [];\r\n        for (var i = 0, len = rpnStack.length; i < len; i++) {\r\n            var op = operators.get(rpnStack[i]);\r\n            if (op) {\r\n                var args = stack.splice(0, 2);\r\n                stack.push(op.exec(args[1], args[0]));\r\n            } else {\r\n                stack.unshift(parseFloat(rpnStack[i]));\r\n            }\r\n        }\r\n        return stack[0];\r\n    }\r\n    var Operator = (function () {\r\n        function Operator(precedence, method) {\r\n            this.precendce = precedence;\r\n            this.execMethod = method;\r\n        }\r\n        Operator.prototype.exec = function (left, right) {\r\n            return this.execMethod(left, right);\r\n        };\r\n        Operator.prototype.lessOrEqualThan = function (op) {\r\n            return this.precendce <= op.precendce;\r\n        };\r\n        return Operator;\r\n    })();\r\n    var operators = new Map([\r\n        [\r\n            \"+\",\r\n            new Operator(1, function (left, right) {\r\n                return left + right;\r\n            })\r\n        ],\r\n        [\r\n            \"-\",\r\n            new Operator(1, function (left, right) {\r\n                return left - right;\r\n            })\r\n        ],\r\n        [\r\n            \"*\",\r\n            new Operator(2, function (left, right) {\r\n                return left * right;\r\n            })\r\n        ],\r\n        [\r\n            \"/\",\r\n            new Operator(2, function (left, right) {\r\n                return left / right;\r\n            })\r\n        ]\r\n    ]);\r\n\r\n    function getMatches(regex, input, group) {\r\n        if (group === void 0) {\r\n            group = 0;\r\n        }\r\n        var matches = [];\r\n        var m;\r\n        while ((m = regex.exec(input))) {\r\n            matches.push(m[group]);\r\n        }\r\n        return matches;\r\n    }\r\n    function formatCSS(text) {\r\n        function trimLeft(text) {\r\n            return text.replace(/^\\s+/, \"\");\r\n        }\r\n        function getIndent(depth) {\r\n            if (depth === 0) {\r\n                return \"\";\r\n            }\r\n            return \" \".repeat(4 * depth);\r\n        }\r\n        if (text.length < 50000) {\r\n            var emptyRuleRegexp = /[^{}]+{\\s*}/;\r\n            while (emptyRuleRegexp.test(text)) {\r\n                text = text.replace(emptyRuleRegexp, \"\");\r\n            }\r\n        }\r\n        var css = text\r\n            .replace(/\\s{2,}/g, \" \")\r\n            .replace(/\\{/g, \"{\\n\")\r\n            .replace(/\\}/g, \"\\n}\\n\")\r\n            .replace(/\\;(?![^\\(|\\\"]*(\\)|\\\"))/g, \";\\n\")\r\n            .replace(/\\,(?![^\\(|\\\"]*(\\)|\\\"))/g, \",\\n\")\r\n            .replace(/\\n\\s*\\n/g, \"\\n\")\r\n            .split(\"\\n\");\r\n        var depth = 0;\r\n        var formatted = [];\r\n        for (var x = 0, len = css.length; x < len; x++) {\r\n            var line = \"\".concat(css[x], \"\\n\");\r\n            if (line.includes(\"{\")) {\r\n                formatted.push(getIndent(depth++) + trimLeft(line));\r\n            } else if (line.includes(\"}\")) {\r\n                formatted.push(getIndent(--depth) + trimLeft(line));\r\n            } else {\r\n                formatted.push(getIndent(depth) + trimLeft(line));\r\n            }\r\n        }\r\n        return formatted.join(\"\").trim();\r\n    }\r\n    function getParenthesesRange(input, searchStartIndex) {\r\n        if (searchStartIndex === void 0) {\r\n            searchStartIndex = 0;\r\n        }\r\n        var length = input.length;\r\n        var depth = 0;\r\n        var firstOpenIndex = -1;\r\n        for (var i = searchStartIndex; i < length; i++) {\r\n            if (depth === 0) {\r\n                var openIndex = input.indexOf(\"(\", i);\r\n                if (openIndex < 0) {\r\n                    break;\r\n                }\r\n                firstOpenIndex = openIndex;\r\n                depth++;\r\n                i = openIndex;\r\n            } else {\r\n                var closingIndex = input.indexOf(\")\", i);\r\n                if (closingIndex < 0) {\r\n                    break;\r\n                }\r\n                var openIndex = input.indexOf(\"(\", i);\r\n                if (openIndex < 0 || closingIndex < openIndex) {\r\n                    depth--;\r\n                    if (depth === 0) {\r\n                        return {start: firstOpenIndex, end: closingIndex + 1};\r\n                    }\r\n                    i = closingIndex;\r\n                } else {\r\n                    depth++;\r\n                    i = openIndex;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    var hslaParseCache = new Map();\r\n    var rgbaParseCache = new Map();\r\n    function parseColorWithCache($color) {\r\n        $color = $color.trim();\r\n        if (rgbaParseCache.has($color)) {\r\n            return rgbaParseCache.get($color);\r\n        }\r\n        if ($color.includes(\"calc(\")) {\r\n            $color = lowerCalcExpression($color);\r\n        }\r\n        var color = parse($color);\r\n        color && rgbaParseCache.set($color, color);\r\n        return color;\r\n    }\r\n    function parseToHSLWithCache(color) {\r\n        if (hslaParseCache.has(color)) {\r\n            return hslaParseCache.get(color);\r\n        }\r\n        var rgb = parseColorWithCache(color);\r\n        if (!rgb) {\r\n            return null;\r\n        }\r\n        var hsl = rgbToHSL(rgb);\r\n        hslaParseCache.set(color, hsl);\r\n        return hsl;\r\n    }\r\n    function clearColorCache() {\r\n        hslaParseCache.clear();\r\n        rgbaParseCache.clear();\r\n    }\r\n    function hslToRGB(_a) {\r\n        var h = _a.h,\r\n            s = _a.s,\r\n            l = _a.l,\r\n            _b = _a.a,\r\n            a = _b === void 0 ? 1 : _b;\r\n        if (s === 0) {\r\n            var _c = __read(\r\n                    [l, l, l].map(function (x) {\r\n                        return Math.round(x * 255);\r\n                    }),\r\n                    3\r\n                ),\r\n                r_1 = _c[0],\r\n                b_1 = _c[1],\r\n                g_1 = _c[2];\r\n            return {r: r_1, g: g_1, b: b_1, a: a};\r\n        }\r\n        var c = (1 - Math.abs(2 * l - 1)) * s;\r\n        var x = c * (1 - Math.abs(((h / 60) % 2) - 1));\r\n        var m = l - c / 2;\r\n        var _d = __read(\r\n                (h < 60\r\n                    ? [c, x, 0]\r\n                    : h < 120\r\n                      ? [x, c, 0]\r\n                      : h < 180\r\n                        ? [0, c, x]\r\n                        : h < 240\r\n                          ? [0, x, c]\r\n                          : h < 300\r\n                            ? [x, 0, c]\r\n                            : [c, 0, x]\r\n                ).map(function (n) {\r\n                    return Math.round((n + m) * 255);\r\n                }),\r\n                3\r\n            ),\r\n            r = _d[0],\r\n            g = _d[1],\r\n            b = _d[2];\r\n        return {r: r, g: g, b: b, a: a};\r\n    }\r\n    function rgbToHSL(_a) {\r\n        var r255 = _a.r,\r\n            g255 = _a.g,\r\n            b255 = _a.b,\r\n            _b = _a.a,\r\n            a = _b === void 0 ? 1 : _b;\r\n        var r = r255 / 255;\r\n        var g = g255 / 255;\r\n        var b = b255 / 255;\r\n        var max = Math.max(r, g, b);\r\n        var min = Math.min(r, g, b);\r\n        var c = max - min;\r\n        var l = (max + min) / 2;\r\n        if (c === 0) {\r\n            return {h: 0, s: 0, l: l, a: a};\r\n        }\r\n        var h =\r\n            (max === r\r\n                ? ((g - b) / c) % 6\r\n                : max === g\r\n                  ? (b - r) / c + 2\r\n                  : (r - g) / c + 4) * 60;\r\n        if (h < 0) {\r\n            h += 360;\r\n        }\r\n        var s = c / (1 - Math.abs(2 * l - 1));\r\n        return {h: h, s: s, l: l, a: a};\r\n    }\r\n    function toFixed(n, digits) {\r\n        if (digits === void 0) {\r\n            digits = 0;\r\n        }\r\n        var fixed = n.toFixed(digits);\r\n        if (digits === 0) {\r\n            return fixed;\r\n        }\r\n        var dot = fixed.indexOf(\".\");\r\n        if (dot >= 0) {\r\n            var zerosMatch = fixed.match(/0+$/);\r\n            if (zerosMatch) {\r\n                if (zerosMatch.index === dot + 1) {\r\n                    return fixed.substring(0, dot);\r\n                }\r\n                return fixed.substring(0, zerosMatch.index);\r\n            }\r\n        }\r\n        return fixed;\r\n    }\r\n    function rgbToString(rgb) {\r\n        var r = rgb.r,\r\n            g = rgb.g,\r\n            b = rgb.b,\r\n            a = rgb.a;\r\n        if (a != null && a < 1) {\r\n            return \"rgba(\"\r\n                .concat(toFixed(r), \", \")\r\n                .concat(toFixed(g), \", \")\r\n                .concat(toFixed(b), \", \")\r\n                .concat(toFixed(a, 2), \")\");\r\n        }\r\n        return \"rgb(\"\r\n            .concat(toFixed(r), \", \")\r\n            .concat(toFixed(g), \", \")\r\n            .concat(toFixed(b), \")\");\r\n    }\r\n    function rgbToHexString(_a) {\r\n        var r = _a.r,\r\n            g = _a.g,\r\n            b = _a.b,\r\n            a = _a.a;\r\n        return \"#\".concat(\r\n            (a != null && a < 1 ? [r, g, b, Math.round(a * 255)] : [r, g, b])\r\n                .map(function (x) {\r\n                    return \"\".concat(x < 16 ? \"0\" : \"\").concat(x.toString(16));\r\n                })\r\n                .join(\"\")\r\n        );\r\n    }\r\n    function hslToString(hsl) {\r\n        var h = hsl.h,\r\n            s = hsl.s,\r\n            l = hsl.l,\r\n            a = hsl.a;\r\n        if (a != null && a < 1) {\r\n            return \"hsla(\"\r\n                .concat(toFixed(h), \", \")\r\n                .concat(toFixed(s * 100), \"%, \")\r\n                .concat(toFixed(l * 100), \"%, \")\r\n                .concat(toFixed(a, 2), \")\");\r\n        }\r\n        return \"hsl(\"\r\n            .concat(toFixed(h), \", \")\r\n            .concat(toFixed(s * 100), \"%, \")\r\n            .concat(toFixed(l * 100), \"%)\");\r\n    }\r\n    var rgbMatch = /^rgba?\\([^\\(\\)]+\\)$/;\r\n    var hslMatch = /^hsla?\\([^\\(\\)]+\\)$/;\r\n    var hexMatch = /^#[0-9a-f]+$/i;\r\n    function parse($color) {\r\n        var c = $color.trim().toLowerCase();\r\n        if (c.match(rgbMatch)) {\r\n            return parseRGB(c);\r\n        }\r\n        if (c.match(hslMatch)) {\r\n            return parseHSL(c);\r\n        }\r\n        if (c.match(hexMatch)) {\r\n            return parseHex(c);\r\n        }\r\n        if (knownColors.has(c)) {\r\n            return getColorByName(c);\r\n        }\r\n        if (systemColors.has(c)) {\r\n            return getSystemColor(c);\r\n        }\r\n        if ($color === \"transparent\") {\r\n            return {r: 0, g: 0, b: 0, a: 0};\r\n        }\r\n        return null;\r\n    }\r\n    function getNumbers($color) {\r\n        var numbers = [];\r\n        var prevPos = 0;\r\n        var isMining = false;\r\n        var startIndex = $color.indexOf(\"(\");\r\n        $color = $color.substring(startIndex + 1, $color.length - 1);\r\n        for (var i = 0; i < $color.length; i++) {\r\n            var c = $color[i];\r\n            if ((c >= \"0\" && c <= \"9\") || c === \".\" || c === \"+\" || c === \"-\") {\r\n                isMining = true;\r\n            } else if (isMining && (c === \" \" || c === \",\" || c === \"/\")) {\r\n                numbers.push($color.substring(prevPos, i));\r\n                isMining = false;\r\n                prevPos = i + 1;\r\n            } else if (!isMining) {\r\n                prevPos = i + 1;\r\n            }\r\n        }\r\n        if (isMining) {\r\n            numbers.push($color.substring(prevPos, $color.length));\r\n        }\r\n        return numbers;\r\n    }\r\n    function getNumbersFromString(str, range, units) {\r\n        var raw = getNumbers(str);\r\n        var unitsList = Object.entries(units);\r\n        var numbers = raw\r\n            .map(function (r) {\r\n                return r.trim();\r\n            })\r\n            .map(function (r, i) {\r\n                var n;\r\n                var unit = unitsList.find(function (_a) {\r\n                    var _b = __read(_a, 1),\r\n                        u = _b[0];\r\n                    return r.endsWith(u);\r\n                });\r\n                if (unit) {\r\n                    n =\r\n                        (parseFloat(r.substring(0, r.length - unit[0].length)) /\r\n                            unit[1]) *\r\n                        range[i];\r\n                } else {\r\n                    n = parseFloat(r);\r\n                }\r\n                if (range[i] > 1) {\r\n                    return Math.round(n);\r\n                }\r\n                return n;\r\n            });\r\n        return numbers;\r\n    }\r\n    var rgbRange = [255, 255, 255, 1];\r\n    var rgbUnits = {\"%\": 100};\r\n    function parseRGB($rgb) {\r\n        var _a = __read(getNumbersFromString($rgb, rgbRange, rgbUnits), 4),\r\n            r = _a[0],\r\n            g = _a[1],\r\n            b = _a[2],\r\n            _b = _a[3],\r\n            a = _b === void 0 ? 1 : _b;\r\n        return {r: r, g: g, b: b, a: a};\r\n    }\r\n    var hslRange = [360, 1, 1, 1];\r\n    var hslUnits = {\"%\": 100, \"deg\": 360, \"rad\": 2 * Math.PI, \"turn\": 1};\r\n    function parseHSL($hsl) {\r\n        var _a = __read(getNumbersFromString($hsl, hslRange, hslUnits), 4),\r\n            h = _a[0],\r\n            s = _a[1],\r\n            l = _a[2],\r\n            _b = _a[3],\r\n            a = _b === void 0 ? 1 : _b;\r\n        return hslToRGB({h: h, s: s, l: l, a: a});\r\n    }\r\n    function parseHex($hex) {\r\n        var h = $hex.substring(1);\r\n        switch (h.length) {\r\n            case 3:\r\n            case 4: {\r\n                var _a = __read(\r\n                        [0, 1, 2].map(function (i) {\r\n                            return parseInt(\"\".concat(h[i]).concat(h[i]), 16);\r\n                        }),\r\n                        3\r\n                    ),\r\n                    r = _a[0],\r\n                    g = _a[1],\r\n                    b = _a[2];\r\n                var a =\r\n                    h.length === 3\r\n                        ? 1\r\n                        : parseInt(\"\".concat(h[3]).concat(h[3]), 16) / 255;\r\n                return {r: r, g: g, b: b, a: a};\r\n            }\r\n            case 6:\r\n            case 8: {\r\n                var _b = __read(\r\n                        [0, 2, 4].map(function (i) {\r\n                            return parseInt(h.substring(i, i + 2), 16);\r\n                        }),\r\n                        3\r\n                    ),\r\n                    r = _b[0],\r\n                    g = _b[1],\r\n                    b = _b[2];\r\n                var a =\r\n                    h.length === 6 ? 1 : parseInt(h.substring(6, 8), 16) / 255;\r\n                return {r: r, g: g, b: b, a: a};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function getColorByName($color) {\r\n        var n = knownColors.get($color);\r\n        return {\r\n            r: (n >> 16) & 255,\r\n            g: (n >> 8) & 255,\r\n            b: (n >> 0) & 255,\r\n            a: 1\r\n        };\r\n    }\r\n    function getSystemColor($color) {\r\n        var n = systemColors.get($color);\r\n        return {\r\n            r: (n >> 16) & 255,\r\n            g: (n >> 8) & 255,\r\n            b: (n >> 0) & 255,\r\n            a: 1\r\n        };\r\n    }\r\n    function lowerCalcExpression(color) {\r\n        var searchIndex = 0;\r\n        var replaceBetweenIndices = function (start, end, replacement) {\r\n            color =\r\n                color.substring(0, start) + replacement + color.substring(end);\r\n        };\r\n        while ((searchIndex = color.indexOf(\"calc(\")) !== -1) {\r\n            var range = getParenthesesRange(color, searchIndex);\r\n            if (!range) {\r\n                break;\r\n            }\r\n            var slice = color.slice(range.start + 1, range.end - 1);\r\n            var includesPercentage = slice.includes(\"%\");\r\n            slice = slice.split(\"%\").join(\"\");\r\n            var output = Math.round(evalMath(slice));\r\n            replaceBetweenIndices(\r\n                range.start - 4,\r\n                range.end,\r\n                output + (includesPercentage ? \"%\" : \"\")\r\n            );\r\n        }\r\n        return color;\r\n    }\r\n    var knownColors = new Map(\r\n        Object.entries({\r\n            aliceblue: 0xf0f8ff,\r\n            antiquewhite: 0xfaebd7,\r\n            aqua: 0x00ffff,\r\n            aquamarine: 0x7fffd4,\r\n            azure: 0xf0ffff,\r\n            beige: 0xf5f5dc,\r\n            bisque: 0xffe4c4,\r\n            black: 0x000000,\r\n            blanchedalmond: 0xffebcd,\r\n            blue: 0x0000ff,\r\n            blueviolet: 0x8a2be2,\r\n            brown: 0xa52a2a,\r\n            burlywood: 0xdeb887,\r\n            cadetblue: 0x5f9ea0,\r\n            chartreuse: 0x7fff00,\r\n            chocolate: 0xd2691e,\r\n            coral: 0xff7f50,\r\n            cornflowerblue: 0x6495ed,\r\n            cornsilk: 0xfff8dc,\r\n            crimson: 0xdc143c,\r\n            cyan: 0x00ffff,\r\n            darkblue: 0x00008b,\r\n            darkcyan: 0x008b8b,\r\n            darkgoldenrod: 0xb8860b,\r\n            darkgray: 0xa9a9a9,\r\n            darkgrey: 0xa9a9a9,\r\n            darkgreen: 0x006400,\r\n            darkkhaki: 0xbdb76b,\r\n            darkmagenta: 0x8b008b,\r\n            darkolivegreen: 0x556b2f,\r\n            darkorange: 0xff8c00,\r\n            darkorchid: 0x9932cc,\r\n            darkred: 0x8b0000,\r\n            darksalmon: 0xe9967a,\r\n            darkseagreen: 0x8fbc8f,\r\n            darkslateblue: 0x483d8b,\r\n            darkslategray: 0x2f4f4f,\r\n            darkslategrey: 0x2f4f4f,\r\n            darkturquoise: 0x00ced1,\r\n            darkviolet: 0x9400d3,\r\n            deeppink: 0xff1493,\r\n            deepskyblue: 0x00bfff,\r\n            dimgray: 0x696969,\r\n            dimgrey: 0x696969,\r\n            dodgerblue: 0x1e90ff,\r\n            firebrick: 0xb22222,\r\n            floralwhite: 0xfffaf0,\r\n            forestgreen: 0x228b22,\r\n            fuchsia: 0xff00ff,\r\n            gainsboro: 0xdcdcdc,\r\n            ghostwhite: 0xf8f8ff,\r\n            gold: 0xffd700,\r\n            goldenrod: 0xdaa520,\r\n            gray: 0x808080,\r\n            grey: 0x808080,\r\n            green: 0x008000,\r\n            greenyellow: 0xadff2f,\r\n            honeydew: 0xf0fff0,\r\n            hotpink: 0xff69b4,\r\n            indianred: 0xcd5c5c,\r\n            indigo: 0x4b0082,\r\n            ivory: 0xfffff0,\r\n            khaki: 0xf0e68c,\r\n            lavender: 0xe6e6fa,\r\n            lavenderblush: 0xfff0f5,\r\n            lawngreen: 0x7cfc00,\r\n            lemonchiffon: 0xfffacd,\r\n            lightblue: 0xadd8e6,\r\n            lightcoral: 0xf08080,\r\n            lightcyan: 0xe0ffff,\r\n            lightgoldenrodyellow: 0xfafad2,\r\n            lightgray: 0xd3d3d3,\r\n            lightgrey: 0xd3d3d3,\r\n            lightgreen: 0x90ee90,\r\n            lightpink: 0xffb6c1,\r\n            lightsalmon: 0xffa07a,\r\n            lightseagreen: 0x20b2aa,\r\n            lightskyblue: 0x87cefa,\r\n            lightslategray: 0x778899,\r\n            lightslategrey: 0x778899,\r\n            lightsteelblue: 0xb0c4de,\r\n            lightyellow: 0xffffe0,\r\n            lime: 0x00ff00,\r\n            limegreen: 0x32cd32,\r\n            linen: 0xfaf0e6,\r\n            magenta: 0xff00ff,\r\n            maroon: 0x800000,\r\n            mediumaquamarine: 0x66cdaa,\r\n            mediumblue: 0x0000cd,\r\n            mediumorchid: 0xba55d3,\r\n            mediumpurple: 0x9370db,\r\n            mediumseagreen: 0x3cb371,\r\n            mediumslateblue: 0x7b68ee,\r\n            mediumspringgreen: 0x00fa9a,\r\n            mediumturquoise: 0x48d1cc,\r\n            mediumvioletred: 0xc71585,\r\n            midnightblue: 0x191970,\r\n            mintcream: 0xf5fffa,\r\n            mistyrose: 0xffe4e1,\r\n            moccasin: 0xffe4b5,\r\n            navajowhite: 0xffdead,\r\n            navy: 0x000080,\r\n            oldlace: 0xfdf5e6,\r\n            olive: 0x808000,\r\n            olivedrab: 0x6b8e23,\r\n            orange: 0xffa500,\r\n            orangered: 0xff4500,\r\n            orchid: 0xda70d6,\r\n            palegoldenrod: 0xeee8aa,\r\n            palegreen: 0x98fb98,\r\n            paleturquoise: 0xafeeee,\r\n            palevioletred: 0xdb7093,\r\n            papayawhip: 0xffefd5,\r\n            peachpuff: 0xffdab9,\r\n            peru: 0xcd853f,\r\n            pink: 0xffc0cb,\r\n            plum: 0xdda0dd,\r\n            powderblue: 0xb0e0e6,\r\n            purple: 0x800080,\r\n            rebeccapurple: 0x663399,\r\n            red: 0xff0000,\r\n            rosybrown: 0xbc8f8f,\r\n            royalblue: 0x4169e1,\r\n            saddlebrown: 0x8b4513,\r\n            salmon: 0xfa8072,\r\n            sandybrown: 0xf4a460,\r\n            seagreen: 0x2e8b57,\r\n            seashell: 0xfff5ee,\r\n            sienna: 0xa0522d,\r\n            silver: 0xc0c0c0,\r\n            skyblue: 0x87ceeb,\r\n            slateblue: 0x6a5acd,\r\n            slategray: 0x708090,\r\n            slategrey: 0x708090,\r\n            snow: 0xfffafa,\r\n            springgreen: 0x00ff7f,\r\n            steelblue: 0x4682b4,\r\n            tan: 0xd2b48c,\r\n            teal: 0x008080,\r\n            thistle: 0xd8bfd8,\r\n            tomato: 0xff6347,\r\n            turquoise: 0x40e0d0,\r\n            violet: 0xee82ee,\r\n            wheat: 0xf5deb3,\r\n            white: 0xffffff,\r\n            whitesmoke: 0xf5f5f5,\r\n            yellow: 0xffff00,\r\n            yellowgreen: 0x9acd32\r\n        })\r\n    );\r\n    var systemColors = new Map(\r\n        Object.entries({\r\n            \"ActiveBorder\": 0x3b99fc,\r\n            \"ActiveCaption\": 0x000000,\r\n            \"AppWorkspace\": 0xaaaaaa,\r\n            \"Background\": 0x6363ce,\r\n            \"ButtonFace\": 0xffffff,\r\n            \"ButtonHighlight\": 0xe9e9e9,\r\n            \"ButtonShadow\": 0x9fa09f,\r\n            \"ButtonText\": 0x000000,\r\n            \"CaptionText\": 0x000000,\r\n            \"GrayText\": 0x7f7f7f,\r\n            \"Highlight\": 0xb2d7ff,\r\n            \"HighlightText\": 0x000000,\r\n            \"InactiveBorder\": 0xffffff,\r\n            \"InactiveCaption\": 0xffffff,\r\n            \"InactiveCaptionText\": 0x000000,\r\n            \"InfoBackground\": 0xfbfcc5,\r\n            \"InfoText\": 0x000000,\r\n            \"Menu\": 0xf6f6f6,\r\n            \"MenuText\": 0xffffff,\r\n            \"Scrollbar\": 0xaaaaaa,\r\n            \"ThreeDDarkShadow\": 0x000000,\r\n            \"ThreeDFace\": 0xc0c0c0,\r\n            \"ThreeDHighlight\": 0xffffff,\r\n            \"ThreeDLightShadow\": 0xffffff,\r\n            \"ThreeDShadow\": 0x000000,\r\n            \"Window\": 0xececec,\r\n            \"WindowFrame\": 0xaaaaaa,\r\n            \"WindowText\": 0x000000,\r\n            \"-webkit-focus-ring-color\": 0xe59700\r\n        }).map(function (_a) {\r\n            var _b = __read(_a, 2),\r\n                key = _b[0],\r\n                value = _b[1];\r\n            return [key.toLowerCase(), value];\r\n        })\r\n    );\r\n    function getSRGBLightness(r, g, b) {\r\n        return (0.2126 * r + 0.7152 * g + 0.0722 * b) / 255;\r\n    }\r\n\r\n    function scale(x, inLow, inHigh, outLow, outHigh) {\r\n        return ((x - inLow) * (outHigh - outLow)) / (inHigh - inLow) + outLow;\r\n    }\r\n    function clamp(x, min, max) {\r\n        return Math.min(max, Math.max(min, x));\r\n    }\r\n    function multiplyMatrices(m1, m2) {\r\n        var result = [];\r\n        for (var i = 0, len = m1.length; i < len; i++) {\r\n            result[i] = [];\r\n            for (var j = 0, len2 = m2[0].length; j < len2; j++) {\r\n                var sum = 0;\r\n                for (var k = 0, len3 = m1[0].length; k < len3; k++) {\r\n                    sum += m1[i][k] * m2[k][j];\r\n                }\r\n                result[i][j] = sum;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function createFilterMatrix(config) {\r\n        var m = Matrix.identity();\r\n        if (config.sepia !== 0) {\r\n            m = multiplyMatrices(m, Matrix.sepia(config.sepia / 100));\r\n        }\r\n        if (config.grayscale !== 0) {\r\n            m = multiplyMatrices(m, Matrix.grayscale(config.grayscale / 100));\r\n        }\r\n        if (config.contrast !== 100) {\r\n            m = multiplyMatrices(m, Matrix.contrast(config.contrast / 100));\r\n        }\r\n        if (config.brightness !== 100) {\r\n            m = multiplyMatrices(m, Matrix.brightness(config.brightness / 100));\r\n        }\r\n        if (config.mode === 1) {\r\n            m = multiplyMatrices(m, Matrix.invertNHue());\r\n        }\r\n        return m;\r\n    }\r\n    function applyColorMatrix(_a, matrix) {\r\n        var _b = __read(_a, 3),\r\n            r = _b[0],\r\n            g = _b[1],\r\n            b = _b[2];\r\n        var rgb = [[r / 255], [g / 255], [b / 255], [1], [1]];\r\n        var result = multiplyMatrices(matrix, rgb);\r\n        return [0, 1, 2].map(function (i) {\r\n            return clamp(Math.round(result[i][0] * 255), 0, 255);\r\n        });\r\n    }\r\n    var Matrix = {\r\n        identity: function () {\r\n            return [\r\n                [1, 0, 0, 0, 0],\r\n                [0, 1, 0, 0, 0],\r\n                [0, 0, 1, 0, 0],\r\n                [0, 0, 0, 1, 0],\r\n                [0, 0, 0, 0, 1]\r\n            ];\r\n        },\r\n        invertNHue: function () {\r\n            return [\r\n                [0.333, -0.667, -0.667, 0, 1],\r\n                [-0.667, 0.333, -0.667, 0, 1],\r\n                [-0.667, -0.667, 0.333, 0, 1],\r\n                [0, 0, 0, 1, 0],\r\n                [0, 0, 0, 0, 1]\r\n            ];\r\n        },\r\n        brightness: function (v) {\r\n            return [\r\n                [v, 0, 0, 0, 0],\r\n                [0, v, 0, 0, 0],\r\n                [0, 0, v, 0, 0],\r\n                [0, 0, 0, 1, 0],\r\n                [0, 0, 0, 0, 1]\r\n            ];\r\n        },\r\n        contrast: function (v) {\r\n            var t = (1 - v) / 2;\r\n            return [\r\n                [v, 0, 0, 0, t],\r\n                [0, v, 0, 0, t],\r\n                [0, 0, v, 0, t],\r\n                [0, 0, 0, 1, 0],\r\n                [0, 0, 0, 0, 1]\r\n            ];\r\n        },\r\n        sepia: function (v) {\r\n            return [\r\n                [\r\n                    0.393 + 0.607 * (1 - v),\r\n                    0.769 - 0.769 * (1 - v),\r\n                    0.189 - 0.189 * (1 - v),\r\n                    0,\r\n                    0\r\n                ],\r\n                [\r\n                    0.349 - 0.349 * (1 - v),\r\n                    0.686 + 0.314 * (1 - v),\r\n                    0.168 - 0.168 * (1 - v),\r\n                    0,\r\n                    0\r\n                ],\r\n                [\r\n                    0.272 - 0.272 * (1 - v),\r\n                    0.534 - 0.534 * (1 - v),\r\n                    0.131 + 0.869 * (1 - v),\r\n                    0,\r\n                    0\r\n                ],\r\n                [0, 0, 0, 1, 0],\r\n                [0, 0, 0, 0, 1]\r\n            ];\r\n        },\r\n        grayscale: function (v) {\r\n            return [\r\n                [\r\n                    0.2126 + 0.7874 * (1 - v),\r\n                    0.7152 - 0.7152 * (1 - v),\r\n                    0.0722 - 0.0722 * (1 - v),\r\n                    0,\r\n                    0\r\n                ],\r\n                [\r\n                    0.2126 - 0.2126 * (1 - v),\r\n                    0.7152 + 0.2848 * (1 - v),\r\n                    0.0722 - 0.0722 * (1 - v),\r\n                    0,\r\n                    0\r\n                ],\r\n                [\r\n                    0.2126 - 0.2126 * (1 - v),\r\n                    0.7152 - 0.7152 * (1 - v),\r\n                    0.0722 + 0.9278 * (1 - v),\r\n                    0,\r\n                    0\r\n                ],\r\n                [0, 0, 0, 1, 0],\r\n                [0, 0, 0, 0, 1]\r\n            ];\r\n        }\r\n    };\r\n\r\n    function getBgPole(theme) {\r\n        var isDarkScheme = theme.mode === 1;\r\n        var prop = isDarkScheme\r\n            ? \"darkSchemeBackgroundColor\"\r\n            : \"lightSchemeBackgroundColor\";\r\n        return theme[prop];\r\n    }\r\n    function getFgPole(theme) {\r\n        var isDarkScheme = theme.mode === 1;\r\n        var prop = isDarkScheme\r\n            ? \"darkSchemeTextColor\"\r\n            : \"lightSchemeTextColor\";\r\n        return theme[prop];\r\n    }\r\n    var colorModificationCache = new Map();\r\n    function clearColorModificationCache() {\r\n        colorModificationCache.clear();\r\n    }\r\n    var rgbCacheKeys = [\"r\", \"g\", \"b\", \"a\"];\r\n    var themeCacheKeys$1 = [\r\n        \"mode\",\r\n        \"brightness\",\r\n        \"contrast\",\r\n        \"grayscale\",\r\n        \"sepia\",\r\n        \"darkSchemeBackgroundColor\",\r\n        \"darkSchemeTextColor\",\r\n        \"lightSchemeBackgroundColor\",\r\n        \"lightSchemeTextColor\"\r\n    ];\r\n    function getCacheId(rgb, theme) {\r\n        var resultId = \"\";\r\n        rgbCacheKeys.forEach(function (key) {\r\n            resultId += \"\".concat(rgb[key], \";\");\r\n        });\r\n        themeCacheKeys$1.forEach(function (key) {\r\n            resultId += \"\".concat(theme[key], \";\");\r\n        });\r\n        return resultId;\r\n    }\r\n    function modifyColorWithCache(\r\n        rgb,\r\n        theme,\r\n        modifyHSL,\r\n        poleColor,\r\n        anotherPoleColor\r\n    ) {\r\n        var fnCache;\r\n        if (colorModificationCache.has(modifyHSL)) {\r\n            fnCache = colorModificationCache.get(modifyHSL);\r\n        } else {\r\n            fnCache = new Map();\r\n            colorModificationCache.set(modifyHSL, fnCache);\r\n        }\r\n        var id = getCacheId(rgb, theme);\r\n        if (fnCache.has(id)) {\r\n            return fnCache.get(id);\r\n        }\r\n        var hsl = rgbToHSL(rgb);\r\n        var pole = poleColor == null ? null : parseToHSLWithCache(poleColor);\r\n        var anotherPole =\r\n            anotherPoleColor == null\r\n                ? null\r\n                : parseToHSLWithCache(anotherPoleColor);\r\n        var modified = modifyHSL(hsl, pole, anotherPole);\r\n        var _a = hslToRGB(modified),\r\n            r = _a.r,\r\n            g = _a.g,\r\n            b = _a.b,\r\n            a = _a.a;\r\n        var matrix = createFilterMatrix(theme);\r\n        var _b = __read(applyColorMatrix([r, g, b], matrix), 3),\r\n            rf = _b[0],\r\n            gf = _b[1],\r\n            bf = _b[2];\r\n        var color =\r\n            a === 1\r\n                ? rgbToHexString({r: rf, g: gf, b: bf})\r\n                : rgbToString({r: rf, g: gf, b: bf, a: a});\r\n        fnCache.set(id, color);\r\n        return color;\r\n    }\r\n    function noopHSL(hsl) {\r\n        return hsl;\r\n    }\r\n    function modifyColor(rgb, theme) {\r\n        return modifyColorWithCache(rgb, theme, noopHSL);\r\n    }\r\n    function modifyLightSchemeColor(rgb, theme) {\r\n        var poleBg = getBgPole(theme);\r\n        var poleFg = getFgPole(theme);\r\n        return modifyColorWithCache(\r\n            rgb,\r\n            theme,\r\n            modifyLightModeHSL,\r\n            poleFg,\r\n            poleBg\r\n        );\r\n    }\r\n    function modifyLightModeHSL(_a, poleFg, poleBg) {\r\n        var h = _a.h,\r\n            s = _a.s,\r\n            l = _a.l,\r\n            a = _a.a;\r\n        var isDark = l < 0.5;\r\n        var isNeutral;\r\n        if (isDark) {\r\n            isNeutral = l < 0.2 || s < 0.12;\r\n        } else {\r\n            var isBlue = h > 200 && h < 280;\r\n            isNeutral = s < 0.24 || (l > 0.8 && isBlue);\r\n        }\r\n        var hx = h;\r\n        var sx = l;\r\n        if (isNeutral) {\r\n            if (isDark) {\r\n                hx = poleFg.h;\r\n                sx = poleFg.s;\r\n            } else {\r\n                hx = poleBg.h;\r\n                sx = poleBg.s;\r\n            }\r\n        }\r\n        var lx = scale(l, 0, 1, poleFg.l, poleBg.l);\r\n        return {h: hx, s: sx, l: lx, a: a};\r\n    }\r\n    var MAX_BG_LIGHTNESS = 0.4;\r\n    function modifyBgHSL(_a, pole) {\r\n        var h = _a.h,\r\n            s = _a.s,\r\n            l = _a.l,\r\n            a = _a.a;\r\n        var isDark = l < 0.5;\r\n        var isBlue = h > 200 && h < 280;\r\n        var isNeutral = s < 0.12 || (l > 0.8 && isBlue);\r\n        if (isDark) {\r\n            var lx_1 = scale(l, 0, 0.5, 0, MAX_BG_LIGHTNESS);\r\n            if (isNeutral) {\r\n                var hx_1 = pole.h;\r\n                var sx = pole.s;\r\n                return {h: hx_1, s: sx, l: lx_1, a: a};\r\n            }\r\n            return {h: h, s: s, l: lx_1, a: a};\r\n        }\r\n        var lx = scale(l, 0.5, 1, MAX_BG_LIGHTNESS, pole.l);\r\n        if (isNeutral) {\r\n            var hx_2 = pole.h;\r\n            var sx = pole.s;\r\n            return {h: hx_2, s: sx, l: lx, a: a};\r\n        }\r\n        var hx = h;\r\n        var isYellow = h > 60 && h < 180;\r\n        if (isYellow) {\r\n            var isCloserToGreen = h > 120;\r\n            if (isCloserToGreen) {\r\n                hx = scale(h, 120, 180, 135, 180);\r\n            } else {\r\n                hx = scale(h, 60, 120, 60, 105);\r\n            }\r\n        }\r\n        if (hx > 40 && hx < 80) {\r\n            lx *= 0.75;\r\n        }\r\n        return {h: hx, s: s, l: lx, a: a};\r\n    }\r\n    function modifyBackgroundColor(rgb, theme) {\r\n        if (theme.mode === 0) {\r\n            return modifyLightSchemeColor(rgb, theme);\r\n        }\r\n        var pole = getBgPole(theme);\r\n        return modifyColorWithCache(\r\n            rgb,\r\n            __assign(__assign({}, theme), {mode: 0}),\r\n            modifyBgHSL,\r\n            pole\r\n        );\r\n    }\r\n    var MIN_FG_LIGHTNESS = 0.55;\r\n    function modifyBlueFgHue(hue) {\r\n        return scale(hue, 205, 245, 205, 220);\r\n    }\r\n    function modifyFgHSL(_a, pole) {\r\n        var h = _a.h,\r\n            s = _a.s,\r\n            l = _a.l,\r\n            a = _a.a;\r\n        var isLight = l > 0.5;\r\n        var isNeutral = l < 0.2 || s < 0.24;\r\n        var isBlue = !isNeutral && h > 205 && h < 245;\r\n        if (isLight) {\r\n            var lx_2 = scale(l, 0.5, 1, MIN_FG_LIGHTNESS, pole.l);\r\n            if (isNeutral) {\r\n                var hx_3 = pole.h;\r\n                var sx = pole.s;\r\n                return {h: hx_3, s: sx, l: lx_2, a: a};\r\n            }\r\n            var hx_4 = h;\r\n            if (isBlue) {\r\n                hx_4 = modifyBlueFgHue(h);\r\n            }\r\n            return {h: hx_4, s: s, l: lx_2, a: a};\r\n        }\r\n        if (isNeutral) {\r\n            var hx_5 = pole.h;\r\n            var sx = pole.s;\r\n            var lx_3 = scale(l, 0, 0.5, pole.l, MIN_FG_LIGHTNESS);\r\n            return {h: hx_5, s: sx, l: lx_3, a: a};\r\n        }\r\n        var hx = h;\r\n        var lx;\r\n        if (isBlue) {\r\n            hx = modifyBlueFgHue(h);\r\n            lx = scale(l, 0, 0.5, pole.l, Math.min(1, MIN_FG_LIGHTNESS + 0.05));\r\n        } else {\r\n            lx = scale(l, 0, 0.5, pole.l, MIN_FG_LIGHTNESS);\r\n        }\r\n        return {h: hx, s: s, l: lx, a: a};\r\n    }\r\n    function modifyForegroundColor(rgb, theme) {\r\n        if (theme.mode === 0) {\r\n            return modifyLightSchemeColor(rgb, theme);\r\n        }\r\n        var pole = getFgPole(theme);\r\n        return modifyColorWithCache(\r\n            rgb,\r\n            __assign(__assign({}, theme), {mode: 0}),\r\n            modifyFgHSL,\r\n            pole\r\n        );\r\n    }\r\n    function modifyBorderHSL(_a, poleFg, poleBg) {\r\n        var h = _a.h,\r\n            s = _a.s,\r\n            l = _a.l,\r\n            a = _a.a;\r\n        var isDark = l < 0.5;\r\n        var isNeutral = l < 0.2 || s < 0.24;\r\n        var hx = h;\r\n        var sx = s;\r\n        if (isNeutral) {\r\n            if (isDark) {\r\n                hx = poleFg.h;\r\n                sx = poleFg.s;\r\n            } else {\r\n                hx = poleBg.h;\r\n                sx = poleBg.s;\r\n            }\r\n        }\r\n        var lx = scale(l, 0, 1, 0.5, 0.2);\r\n        return {h: hx, s: sx, l: lx, a: a};\r\n    }\r\n    function modifyBorderColor(rgb, theme) {\r\n        if (theme.mode === 0) {\r\n            return modifyLightSchemeColor(rgb, theme);\r\n        }\r\n        var poleFg = getFgPole(theme);\r\n        var poleBg = getBgPole(theme);\r\n        return modifyColorWithCache(\r\n            rgb,\r\n            __assign(__assign({}, theme), {mode: 0}),\r\n            modifyBorderHSL,\r\n            poleFg,\r\n            poleBg\r\n        );\r\n    }\r\n    function modifyShadowColor(rgb, filter) {\r\n        return modifyBackgroundColor(rgb, filter);\r\n    }\r\n    function modifyGradientColor(rgb, filter) {\r\n        return modifyBackgroundColor(rgb, filter);\r\n    }\r\n\r\n    function createTextStyle(config) {\r\n        var lines = [];\r\n        lines.push(\r\n            '*:not(pre, pre *, code, .far, .fa, .glyphicon, [class*=\"vjs-\"], .fab, .fa-github, .fas, .material-icons, .icofont, .typcn, mu, [class*=\"mu-\"], .glyphicon, .icon) {'\r\n        );\r\n        if (config.useFont && config.fontFamily) {\r\n            lines.push(\r\n                \"  font-family: \".concat(config.fontFamily, \" !important;\")\r\n            );\r\n        }\r\n        if (config.textStroke > 0) {\r\n            lines.push(\r\n                \"  -webkit-text-stroke: \".concat(\r\n                    config.textStroke,\r\n                    \"px !important;\"\r\n                )\r\n            );\r\n            lines.push(\r\n                \"  text-stroke: \".concat(config.textStroke, \"px !important;\")\r\n            );\r\n        }\r\n        lines.push(\"}\");\r\n        return lines.join(\"\\n\");\r\n    }\r\n\r\n    var FilterMode;\r\n    (function (FilterMode) {\r\n        FilterMode[(FilterMode[\"light\"] = 0)] = \"light\";\r\n        FilterMode[(FilterMode[\"dark\"] = 1)] = \"dark\";\r\n    })(FilterMode || (FilterMode = {}));\r\n    function getCSSFilterValue(config) {\r\n        var filters = [];\r\n        if (config.mode === FilterMode.dark) {\r\n            filters.push(\"invert(100%) hue-rotate(180deg)\");\r\n        }\r\n        if (config.brightness !== 100) {\r\n            filters.push(\"brightness(\".concat(config.brightness, \"%)\"));\r\n        }\r\n        if (config.contrast !== 100) {\r\n            filters.push(\"contrast(\".concat(config.contrast, \"%)\"));\r\n        }\r\n        if (config.grayscale !== 0) {\r\n            filters.push(\"grayscale(\".concat(config.grayscale, \"%)\"));\r\n        }\r\n        if (config.sepia !== 0) {\r\n            filters.push(\"sepia(\".concat(config.sepia, \"%)\"));\r\n        }\r\n        if (filters.length === 0) {\r\n            return null;\r\n        }\r\n        return filters.join(\" \");\r\n    }\r\n\r\n    function toSVGMatrix(matrix) {\r\n        return matrix\r\n            .slice(0, 4)\r\n            .map(function (m) {\r\n                return m\r\n                    .map(function (m) {\r\n                        return m.toFixed(3);\r\n                    })\r\n                    .join(\" \");\r\n            })\r\n            .join(\" \");\r\n    }\r\n    function getSVGFilterMatrixValue(config) {\r\n        return toSVGMatrix(createFilterMatrix(config));\r\n    }\r\n\r\n    function hexify(number) {\r\n        return (number < 16 ? \"0\" : \"\") + number.toString(16);\r\n    }\r\n    function generateUID() {\r\n        if (\"randomUUID\" in crypto) {\r\n            var uuid = crypto.randomUUID();\r\n            return (\r\n                uuid.substring(0, 8) +\r\n                uuid.substring(9, 13) +\r\n                uuid.substring(14, 18) +\r\n                uuid.substring(19, 23) +\r\n                uuid.substring(24)\r\n            );\r\n        }\r\n        if (\"getRandomValues\" in crypto) {\r\n            return Array.from(crypto.getRandomValues(new Uint8Array(16)))\r\n                .map(function (x) {\r\n                    return hexify(x);\r\n                })\r\n                .join(\"\");\r\n        }\r\n        return Math.floor(Math.random() * Math.pow(2, 55)).toString(36);\r\n    }\r\n\r\n    var resolvers$1 = new Map();\r\n    var rejectors = new Map();\r\n    function bgFetch(request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [\r\n                    2,\r\n                    new Promise(function (resolve, reject) {\r\n                        var id = generateUID();\r\n                        resolvers$1.set(id, resolve);\r\n                        rejectors.set(id, reject);\r\n                        chrome.runtime.sendMessage({\r\n                            type: MessageTypeCStoBG.FETCH,\r\n                            data: request,\r\n                            id: id\r\n                        });\r\n                    })\r\n                ];\r\n            });\r\n        });\r\n    }\r\n    chrome.runtime.onMessage.addListener(function (_a) {\r\n        var type = _a.type,\r\n            data = _a.data,\r\n            error = _a.error,\r\n            id = _a.id;\r\n        if (type === MessageTypeBGtoCS.FETCH_RESPONSE) {\r\n            var resolve = resolvers$1.get(id);\r\n            var reject = rejectors.get(id);\r\n            resolvers$1.delete(id);\r\n            rejectors.delete(id);\r\n            if (error) {\r\n                reject && reject(error);\r\n            } else {\r\n                resolve && resolve(data);\r\n            }\r\n        }\r\n    });\r\n\r\n    var MAX_FRAME_DURATION = 1000 / 60;\r\n    var AsyncQueue = (function () {\r\n        function AsyncQueue() {\r\n            this.queue = [];\r\n            this.timerId = null;\r\n        }\r\n        AsyncQueue.prototype.addTask = function (task) {\r\n            this.queue.push(task);\r\n            this.scheduleFrame();\r\n        };\r\n        AsyncQueue.prototype.stop = function () {\r\n            if (this.timerId !== null) {\r\n                cancelAnimationFrame(this.timerId);\r\n                this.timerId = null;\r\n            }\r\n            this.queue = [];\r\n        };\r\n        AsyncQueue.prototype.scheduleFrame = function () {\r\n            var _this = this;\r\n            if (this.timerId) {\r\n                return;\r\n            }\r\n            this.timerId = requestAnimationFrame(function () {\r\n                _this.timerId = null;\r\n                var start = Date.now();\r\n                var cb;\r\n                while ((cb = _this.queue.shift())) {\r\n                    cb();\r\n                    if (Date.now() - start >= MAX_FRAME_DURATION) {\r\n                        _this.scheduleFrame();\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return AsyncQueue;\r\n    })();\r\n\r\n    var imageManager = new AsyncQueue();\r\n    function getImageDetails(url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [\r\n                    2,\r\n                    new Promise(function (resolve, reject) {\r\n                        return __awaiter(_this, void 0, void 0, function () {\r\n                            var dataURL_1, _a, blob_1, _b, image_1, _c, error_1;\r\n                            var _d, _e;\r\n                            return __generator(this, function (_f) {\r\n                                switch (_f.label) {\r\n                                    case 0:\r\n                                        _f.trys.push([0, 14, , 15]);\r\n                                        if (!url.startsWith(\"data:\"))\r\n                                            return [3, 1];\r\n                                        _a = url;\r\n                                        return [3, 3];\r\n                                    case 1:\r\n                                        return [4, getDataURL(url)];\r\n                                    case 2:\r\n                                        _a = _f.sent();\r\n                                        _f.label = 3;\r\n                                    case 3:\r\n                                        dataURL_1 = _a;\r\n                                        if (\r\n                                            !(\r\n                                                (_d =\r\n                                                    tryConvertDataURLToBlobSync(\r\n                                                        dataURL_1\r\n                                                    )) !== null && _d !== void 0\r\n                                            )\r\n                                        )\r\n                                            return [3, 4];\r\n                                        _b = _d;\r\n                                        return [3, 6];\r\n                                    case 4:\r\n                                        return [4, loadAsBlob(url)];\r\n                                    case 5:\r\n                                        _b = _f.sent();\r\n                                        _f.label = 6;\r\n                                    case 6:\r\n                                        blob_1 = _b;\r\n                                        if (\r\n                                            !dataURL_1.startsWith(\r\n                                                \"data:image/svg+xml\"\r\n                                            )\r\n                                        )\r\n                                            return [3, 8];\r\n                                        return [4, loadImage(dataURL_1)];\r\n                                    case 7:\r\n                                        image_1 = _f.sent();\r\n                                        return [3, 13];\r\n                                    case 8:\r\n                                        return [\r\n                                            4,\r\n                                            tryCreateImageBitmap(blob_1)\r\n                                        ];\r\n                                    case 9:\r\n                                        if (\r\n                                            !(\r\n                                                (_e = _f.sent()) !== null &&\r\n                                                _e !== void 0\r\n                                            )\r\n                                        )\r\n                                            return [3, 10];\r\n                                        _c = _e;\r\n                                        return [3, 12];\r\n                                    case 10:\r\n                                        return [4, loadImage(dataURL_1)];\r\n                                    case 11:\r\n                                        _c = _f.sent();\r\n                                        _f.label = 12;\r\n                                    case 12:\r\n                                        image_1 = _c;\r\n                                        _f.label = 13;\r\n                                    case 13:\r\n                                        imageManager.addTask(function () {\r\n                                            var analysis =\r\n                                                analyzeImage(image_1);\r\n                                            resolve(\r\n                                                __assign(\r\n                                                    {\r\n                                                        src: url,\r\n                                                        blob: blob_1,\r\n                                                        dataURL: dataURL_1,\r\n                                                        width: image_1.width,\r\n                                                        height: image_1.height\r\n                                                    },\r\n                                                    analysis\r\n                                                )\r\n                                            );\r\n                                        });\r\n                                        return [3, 15];\r\n                                    case 14:\r\n                                        error_1 = _f.sent();\r\n                                        reject(error_1);\r\n                                        return [3, 15];\r\n                                    case 15:\r\n                                        return [2];\r\n                                }\r\n                            });\r\n                        });\r\n                    })\r\n                ];\r\n            });\r\n        });\r\n    }\r\n    function getDataURL(url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url);\r\n                        if (!(parsedURL.origin === location.origin))\r\n                            return [3, 2];\r\n                        return [4, loadAsDataURL(url)];\r\n                    case 1:\r\n                        return [2, _a.sent()];\r\n                    case 2:\r\n                        return [\r\n                            4,\r\n                            bgFetch({url: url, responseType: \"data-url\"})\r\n                        ];\r\n                    case 3:\r\n                        return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function tryCreateImageBitmap(blob) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var err_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4, createImageBitmap(blob)];\r\n                    case 1:\r\n                        return [2, _a.sent()];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        logWarn(\r\n                            \"Unable to create image bitmap for type \"\r\n                                .concat(blob.type, \": \")\r\n                                .concat(String(err_1))\r\n                        );\r\n                        return [2, null];\r\n                    case 3:\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    var INCOMPLETE_DOC_LOADING_IMAGE_LIMIT = 256;\r\n    var loadingImagesCount = 0;\r\n    function loadImage(url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [\r\n                    2,\r\n                    new Promise(function (resolve, reject) {\r\n                        var image = new Image();\r\n                        image.onload = function () {\r\n                            return resolve(image);\r\n                        };\r\n                        image.onerror = function () {\r\n                            return reject(\"Unable to load image \".concat(url));\r\n                        };\r\n                        if (\r\n                            ++loadingImagesCount <=\r\n                                INCOMPLETE_DOC_LOADING_IMAGE_LIMIT ||\r\n                            isReadyStateComplete()\r\n                        ) {\r\n                            image.src = url;\r\n                        } else {\r\n                            addReadyStateCompleteListener(function () {\r\n                                return (image.src = url);\r\n                            });\r\n                        }\r\n                    })\r\n                ];\r\n            });\r\n        });\r\n    }\r\n    var MAX_ANALYSIS_PIXELS_COUNT = 32 * 32;\r\n    var canvas;\r\n    var context;\r\n    function createCanvas() {\r\n        var maxWidth = MAX_ANALYSIS_PIXELS_COUNT;\r\n        var maxHeight = MAX_ANALYSIS_PIXELS_COUNT;\r\n        canvas = document.createElement(\"canvas\");\r\n        canvas.width = maxWidth;\r\n        canvas.height = maxHeight;\r\n        context = canvas.getContext(\"2d\", {willReadFrequently: true});\r\n        context.imageSmoothingEnabled = false;\r\n    }\r\n    function removeCanvas() {\r\n        canvas = null;\r\n        context = null;\r\n    }\r\n    var LARGE_IMAGE_PIXELS_COUNT = 512 * 512;\r\n    function analyzeImage(image) {\r\n        if (!canvas) {\r\n            createCanvas();\r\n        }\r\n        var sw;\r\n        var sh;\r\n        if (image instanceof HTMLImageElement) {\r\n            sw = image.naturalWidth;\r\n            sh = image.naturalHeight;\r\n        } else {\r\n            sw = image.width;\r\n            sh = image.height;\r\n        }\r\n        if (sw === 0 || sh === 0) {\r\n            return {\r\n                isDark: false,\r\n                isLight: false,\r\n                isTransparent: false,\r\n                isLarge: false,\r\n                isTooLarge: false\r\n            };\r\n        }\r\n        if (sw * sh > LARGE_IMAGE_PIXELS_COUNT) {\r\n            return {\r\n                isDark: false,\r\n                isLight: false,\r\n                isTransparent: false,\r\n                isLarge: true\r\n            };\r\n        }\r\n        var sourcePixelsCount = sw * sh;\r\n        var k = Math.min(\r\n            1,\r\n            Math.sqrt(MAX_ANALYSIS_PIXELS_COUNT / sourcePixelsCount)\r\n        );\r\n        var width = Math.ceil(sw * k);\r\n        var height = Math.ceil(sh * k);\r\n        context.clearRect(0, 0, width, height);\r\n        context.drawImage(image, 0, 0, sw, sh, 0, 0, width, height);\r\n        var imageData = context.getImageData(0, 0, width, height);\r\n        var d = imageData.data;\r\n        var TRANSPARENT_ALPHA_THRESHOLD = 0.05;\r\n        var DARK_LIGHTNESS_THRESHOLD = 0.4;\r\n        var LIGHT_LIGHTNESS_THRESHOLD = 0.7;\r\n        var transparentPixelsCount = 0;\r\n        var darkPixelsCount = 0;\r\n        var lightPixelsCount = 0;\r\n        var i, x, y;\r\n        var r, g, b, a;\r\n        var l;\r\n        for (y = 0; y < height; y++) {\r\n            for (x = 0; x < width; x++) {\r\n                i = 4 * (y * width + x);\r\n                r = d[i + 0];\r\n                g = d[i + 1];\r\n                b = d[i + 2];\r\n                a = d[i + 3];\r\n                if (a / 255 < TRANSPARENT_ALPHA_THRESHOLD) {\r\n                    transparentPixelsCount++;\r\n                } else {\r\n                    l = getSRGBLightness(r, g, b);\r\n                    if (l < DARK_LIGHTNESS_THRESHOLD) {\r\n                        darkPixelsCount++;\r\n                    }\r\n                    if (l > LIGHT_LIGHTNESS_THRESHOLD) {\r\n                        lightPixelsCount++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var totalPixelsCount = width * height;\r\n        var opaquePixelsCount = totalPixelsCount - transparentPixelsCount;\r\n        var DARK_IMAGE_THRESHOLD = 0.7;\r\n        var LIGHT_IMAGE_THRESHOLD = 0.7;\r\n        var TRANSPARENT_IMAGE_THRESHOLD = 0.1;\r\n        return {\r\n            isDark: darkPixelsCount / opaquePixelsCount >= DARK_IMAGE_THRESHOLD,\r\n            isLight:\r\n                lightPixelsCount / opaquePixelsCount >= LIGHT_IMAGE_THRESHOLD,\r\n            isTransparent:\r\n                transparentPixelsCount / totalPixelsCount >=\r\n                TRANSPARENT_IMAGE_THRESHOLD,\r\n            isLarge: false\r\n        };\r\n    }\r\n    var isBlobURLSupported = null;\r\n    var canUseProxy = false;\r\n    var blobURLCheckRequested = false;\r\n    var blobURLCheckAwaiters = [];\r\n    document.addEventListener(\r\n        \"__darkreader__inlineScriptsAllowed\",\r\n        function () {\r\n            return (canUseProxy = true);\r\n        },\r\n        {once: true}\r\n    );\r\n    function requestBlobURLCheck() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!canUseProxy) {\r\n                            return [2];\r\n                        }\r\n                        if (!blobURLCheckRequested) return [3, 2];\r\n                        return [\r\n                            4,\r\n                            new Promise(function (resolve) {\r\n                                return blobURLCheckAwaiters.push(resolve);\r\n                            })\r\n                        ];\r\n                    case 1:\r\n                        return [2, _a.sent()];\r\n                    case 2:\r\n                        blobURLCheckRequested = true;\r\n                        return [\r\n                            4,\r\n                            new Promise(function (resolve) {\r\n                                document.addEventListener(\r\n                                    \"__darkreader__blobURLCheckResponse\",\r\n                                    function (e) {\r\n                                        isBlobURLSupported =\r\n                                            e.detail.blobURLAllowed;\r\n                                        resolve();\r\n                                        blobURLCheckAwaiters.forEach(\r\n                                            function (r) {\r\n                                                return r();\r\n                                            }\r\n                                        );\r\n                                        blobURLCheckAwaiters.splice(0);\r\n                                    },\r\n                                    {once: true}\r\n                                );\r\n                                document.dispatchEvent(\r\n                                    new CustomEvent(\r\n                                        \"__darkreader__blobURLCheckRequest\"\r\n                                    )\r\n                                );\r\n                            })\r\n                        ];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function isBlobURLCheckResultReady() {\r\n        return isBlobURLSupported != null || !canUseProxy;\r\n    }\r\n    function onCSPError(err) {\r\n        if (err.blockedURI === \"blob\") {\r\n            isBlobURLSupported = false;\r\n            document.removeEventListener(\"securitypolicyviolation\", onCSPError);\r\n        }\r\n    }\r\n    document.addEventListener(\"securitypolicyviolation\", onCSPError);\r\n    var objectURLs = new Set();\r\n    function getFilteredImageURL(_a, theme) {\r\n        var dataURL = _a.dataURL,\r\n            width = _a.width,\r\n            height = _a.height;\r\n        if (dataURL.startsWith(\"data:image/svg+xml\")) {\r\n            dataURL = escapeXML(dataURL);\r\n        }\r\n        var matrix = getSVGFilterMatrixValue(theme);\r\n        var svg = [\r\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"'\r\n                .concat(width, '\" height=\"')\r\n                .concat(height, '\">'),\r\n            \"<defs>\",\r\n            '<filter id=\"darkreader-image-filter\">',\r\n            '<feColorMatrix type=\"matrix\" values=\"'.concat(matrix, '\" />'),\r\n            \"</filter>\",\r\n            \"</defs>\",\r\n            '<image width=\"'\r\n                .concat(width, '\" height=\"')\r\n                .concat(\r\n                    height,\r\n                    '\" filter=\"url(#darkreader-image-filter)\" xlink:href=\"'\r\n                )\r\n                .concat(dataURL, '\" />'),\r\n            \"</svg>\"\r\n        ].join(\"\");\r\n        if (!isBlobURLSupported) {\r\n            return \"data:image/svg+xml;base64,\".concat(btoa(svg));\r\n        }\r\n        var bytes = new Uint8Array(svg.length);\r\n        for (var i = 0; i < svg.length; i++) {\r\n            bytes[i] = svg.charCodeAt(i);\r\n        }\r\n        var blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n        var objectURL = URL.createObjectURL(blob);\r\n        objectURLs.add(objectURL);\r\n        return objectURL;\r\n    }\r\n    var xmlEscapeChars = {\r\n        \"<\": \"&lt;\",\r\n        \">\": \"&gt;\",\r\n        \"&\": \"&amp;\",\r\n        \"'\": \"&apos;\",\r\n        '\"': \"&quot;\"\r\n    };\r\n    function escapeXML(str) {\r\n        return str.replace(/[<>&'\"]/g, function (c) {\r\n            var _a;\r\n            return (_a = xmlEscapeChars[c]) !== null && _a !== void 0 ? _a : c;\r\n        });\r\n    }\r\n    var dataURLBlobURLs = new Map();\r\n    function tryConvertDataURLToBlobSync(dataURL) {\r\n        var colonIndex = dataURL.indexOf(\":\");\r\n        var semicolonIndex = dataURL.indexOf(\";\", colonIndex + 1);\r\n        var commaIndex = dataURL.indexOf(\",\", semicolonIndex + 1);\r\n        var encoding = dataURL\r\n            .substring(semicolonIndex + 1, commaIndex)\r\n            .toLocaleLowerCase();\r\n        var mediaType = dataURL.substring(colonIndex + 1, semicolonIndex);\r\n        if (encoding !== \"base64\" || !mediaType) {\r\n            return null;\r\n        }\r\n        var characters = atob(dataURL.substring(commaIndex + 1));\r\n        var bytes = new Uint8Array(characters.length);\r\n        for (var i = 0; i < characters.length; i++) {\r\n            bytes[i] = characters.charCodeAt(i);\r\n        }\r\n        return new Blob([bytes], {type: mediaType});\r\n    }\r\n    function tryConvertDataURLToBlobURL(dataURL) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var blobURL, blob, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!isBlobURLSupported) {\r\n                            return [2, null];\r\n                        }\r\n                        blobURL = dataURLBlobURLs.get(dataURL);\r\n                        if (blobURL) {\r\n                            return [2, blobURL];\r\n                        }\r\n                        blob = tryConvertDataURLToBlobSync(dataURL);\r\n                        if (!!blob) return [3, 3];\r\n                        return [4, fetch(dataURL)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [4, response.blob()];\r\n                    case 2:\r\n                        blob = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        blobURL = URL.createObjectURL(blob);\r\n                        dataURLBlobURLs.set(dataURL, blobURL);\r\n                        return [2, blobURL];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function cleanImageProcessingCache() {\r\n        imageManager && imageManager.stop();\r\n        removeCanvas();\r\n        objectURLs.forEach(function (u) {\r\n            return URL.revokeObjectURL(u);\r\n        });\r\n        objectURLs.clear();\r\n        dataURLBlobURLs.forEach(function (u) {\r\n            return URL.revokeObjectURL(u);\r\n        });\r\n        dataURLBlobURLs.clear();\r\n    }\r\n\r\n    var gradientLength = \"gradient\".length;\r\n    var conicGradient = \"conic-\";\r\n    var conicGradientLength = conicGradient.length;\r\n    var radialGradient = \"radial-\";\r\n    var linearGradient = \"linear-\";\r\n    function parseGradient(value) {\r\n        var result = [];\r\n        var index = 0;\r\n        var startIndex = conicGradient.length;\r\n        var _loop_1 = function () {\r\n            var typeGradient;\r\n            [linearGradient, radialGradient, conicGradient].find(\r\n                function (possibleType) {\r\n                    if (index - possibleType.length >= 0) {\r\n                        var possibleGradient = value.substring(\r\n                            index - possibleType.length,\r\n                            index\r\n                        );\r\n                        if (possibleGradient === possibleType) {\r\n                            if (\r\n                                value.slice(\r\n                                    index - possibleType.length - 10,\r\n                                    index - possibleType.length - 1\r\n                                ) === \"repeating\"\r\n                            ) {\r\n                                typeGradient = \"repeating-\".concat(\r\n                                    possibleType,\r\n                                    \"gradient\"\r\n                                );\r\n                                return true;\r\n                            }\r\n                            if (\r\n                                value.slice(\r\n                                    index - possibleType.length - 8,\r\n                                    index - possibleType.length - 1\r\n                                ) === \"-webkit\"\r\n                            ) {\r\n                                typeGradient = \"-webkit-\".concat(\r\n                                    possibleType,\r\n                                    \"gradient\"\r\n                                );\r\n                                return true;\r\n                            }\r\n                            typeGradient = \"\".concat(possibleType, \"gradient\");\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n            if (!typeGradient) {\r\n                return \"break\";\r\n            }\r\n            var _a = getParenthesesRange(value, index + gradientLength),\r\n                start = _a.start,\r\n                end = _a.end;\r\n            var match = value.substring(start + 1, end - 1);\r\n            startIndex = end + 1 + conicGradientLength;\r\n            result.push({\r\n                typeGradient: typeGradient,\r\n                match: match,\r\n                offset: typeGradient.length + 2,\r\n                index: index - typeGradient.length + gradientLength,\r\n                hasComma: true\r\n            });\r\n        };\r\n        while ((index = value.indexOf(\"gradient\", startIndex)) !== -1) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\") break;\r\n        }\r\n        if (result.length) {\r\n            result[result.length - 1].hasComma = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getPriority(ruleStyle, property) {\r\n        return Boolean(ruleStyle && ruleStyle.getPropertyPriority(property));\r\n    }\r\n    function getModifiableCSSDeclaration(\r\n        property,\r\n        value,\r\n        rule,\r\n        variablesStore,\r\n        ignoreImageSelectors,\r\n        isCancelled\r\n    ) {\r\n        if (property.startsWith(\"--\")) {\r\n            var modifier = getVariableModifier(\r\n                variablesStore,\r\n                property,\r\n                value,\r\n                rule,\r\n                ignoreImageSelectors,\r\n                isCancelled\r\n            );\r\n            if (modifier) {\r\n                return {\r\n                    property: property,\r\n                    value: modifier,\r\n                    important: getPriority(rule.style, property),\r\n                    sourceValue: value\r\n                };\r\n            }\r\n        } else if (value.includes(\"var(\")) {\r\n            var modifier = getVariableDependantModifier(\r\n                variablesStore,\r\n                property,\r\n                value\r\n            );\r\n            if (modifier) {\r\n                return {\r\n                    property: property,\r\n                    value: modifier,\r\n                    important: getPriority(rule.style, property),\r\n                    sourceValue: value\r\n                };\r\n            }\r\n        } else if (property === \"color-scheme\") {\r\n            return null;\r\n        } else if (\r\n            (property.includes(\"color\") &&\r\n                property !== \"-webkit-print-color-adjust\") ||\r\n            property === \"fill\" ||\r\n            property === \"stroke\" ||\r\n            property === \"stop-color\"\r\n        ) {\r\n            var modifier = getColorModifier(property, value, rule);\r\n            if (modifier) {\r\n                return {\r\n                    property: property,\r\n                    value: modifier,\r\n                    important: getPriority(rule.style, property),\r\n                    sourceValue: value\r\n                };\r\n            }\r\n        } else if (\r\n            property === \"background-image\" ||\r\n            property === \"list-style-image\"\r\n        ) {\r\n            var modifier = getBgImageModifier(\r\n                value,\r\n                rule,\r\n                ignoreImageSelectors,\r\n                isCancelled\r\n            );\r\n            if (modifier) {\r\n                return {\r\n                    property: property,\r\n                    value: modifier,\r\n                    important: getPriority(rule.style, property),\r\n                    sourceValue: value\r\n                };\r\n            }\r\n        } else if (property.includes(\"shadow\")) {\r\n            var modifier = getShadowModifier(value);\r\n            if (modifier) {\r\n                return {\r\n                    property: property,\r\n                    value: modifier,\r\n                    important: getPriority(rule.style, property),\r\n                    sourceValue: value\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function joinSelectors() {\r\n        var selectors = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selectors[_i] = arguments[_i];\r\n        }\r\n        return selectors.filter(Boolean).join(\", \");\r\n    }\r\n    function getModifiedUserAgentStyle(theme, isIFrame, styleSystemControls) {\r\n        var lines = [];\r\n        if (!isIFrame) {\r\n            lines.push(\"html {\");\r\n            lines.push(\r\n                \"    background-color: \".concat(\r\n                    modifyBackgroundColor({r: 255, g: 255, b: 255}, theme),\r\n                    \" !important;\"\r\n                )\r\n            );\r\n            lines.push(\"}\");\r\n        }\r\n        if (isCSSColorSchemePropSupported) {\r\n            lines.push(\"html {\");\r\n            lines.push(\r\n                \"    color-scheme: \".concat(\r\n                    theme.mode === 1 ? \"dark\" : \"dark light\",\r\n                    \" !important;\"\r\n                )\r\n            );\r\n            lines.push(\"}\");\r\n        }\r\n        var bgSelectors = joinSelectors(\r\n            isIFrame ? \"\" : \"html, body\",\r\n            styleSystemControls ? \"input, textarea, select, button, dialog\" : \"\"\r\n        );\r\n        if (bgSelectors) {\r\n            lines.push(\"\".concat(bgSelectors, \" {\"));\r\n            lines.push(\r\n                \"    background-color: \".concat(\r\n                    modifyBackgroundColor({r: 255, g: 255, b: 255}, theme),\r\n                    \";\"\r\n                )\r\n            );\r\n            lines.push(\"}\");\r\n        }\r\n        lines.push(\r\n            \"\".concat(\r\n                joinSelectors(\r\n                    \"html, body\",\r\n                    styleSystemControls ? \"input, textarea, select, button\" : \"\"\r\n                ),\r\n                \" {\"\r\n            )\r\n        );\r\n        lines.push(\r\n            \"    border-color: \".concat(\r\n                modifyBorderColor({r: 76, g: 76, b: 76}, theme),\r\n                \";\"\r\n            )\r\n        );\r\n        lines.push(\r\n            \"    color: \".concat(\r\n                modifyForegroundColor({r: 0, g: 0, b: 0}, theme),\r\n                \";\"\r\n            )\r\n        );\r\n        lines.push(\"}\");\r\n        lines.push(\"a {\");\r\n        lines.push(\r\n            \"    color: \".concat(\r\n                modifyForegroundColor({r: 0, g: 64, b: 255}, theme),\r\n                \";\"\r\n            )\r\n        );\r\n        lines.push(\"}\");\r\n        lines.push(\"table {\");\r\n        lines.push(\r\n            \"    border-color: \".concat(\r\n                modifyBorderColor({r: 128, g: 128, b: 128}, theme),\r\n                \";\"\r\n            )\r\n        );\r\n        lines.push(\"}\");\r\n        lines.push(\"::placeholder {\");\r\n        lines.push(\r\n            \"    color: \".concat(\r\n                modifyForegroundColor({r: 169, g: 169, b: 169}, theme),\r\n                \";\"\r\n            )\r\n        );\r\n        lines.push(\"}\");\r\n        lines.push(\"input:-webkit-autofill,\");\r\n        lines.push(\"textarea:-webkit-autofill,\");\r\n        lines.push(\"select:-webkit-autofill {\");\r\n        lines.push(\r\n            \"    background-color: \".concat(\r\n                modifyBackgroundColor({r: 250, g: 255, b: 189}, theme),\r\n                \" !important;\"\r\n            )\r\n        );\r\n        lines.push(\r\n            \"    color: \".concat(\r\n                modifyForegroundColor({r: 0, g: 0, b: 0}, theme),\r\n                \" !important;\"\r\n            )\r\n        );\r\n        lines.push(\"}\");\r\n        if (theme.scrollbarColor) {\r\n            lines.push(getModifiedScrollbarStyle(theme));\r\n        }\r\n        if (theme.selectionColor) {\r\n            lines.push(getModifiedSelectionStyle(theme));\r\n        }\r\n        return lines.join(\"\\n\");\r\n    }\r\n    function getSelectionColor(theme) {\r\n        var backgroundColorSelection;\r\n        var foregroundColorSelection;\r\n        if (theme.selectionColor === \"auto\") {\r\n            backgroundColorSelection = modifyBackgroundColor(\r\n                {r: 0, g: 96, b: 212},\r\n                __assign(__assign({}, theme), {grayscale: 0})\r\n            );\r\n            foregroundColorSelection = modifyForegroundColor(\r\n                {r: 255, g: 255, b: 255},\r\n                __assign(__assign({}, theme), {grayscale: 0})\r\n            );\r\n        } else {\r\n            var rgb = parseColorWithCache(theme.selectionColor);\r\n            var hsl = rgbToHSL(rgb);\r\n            backgroundColorSelection = theme.selectionColor;\r\n            if (hsl.l < 0.5) {\r\n                foregroundColorSelection = \"#FFF\";\r\n            } else {\r\n                foregroundColorSelection = \"#000\";\r\n            }\r\n        }\r\n        return {\r\n            backgroundColorSelection: backgroundColorSelection,\r\n            foregroundColorSelection: foregroundColorSelection\r\n        };\r\n    }\r\n    function getModifiedSelectionStyle(theme) {\r\n        var lines = [];\r\n        var modifiedSelectionColor = getSelectionColor(theme);\r\n        var backgroundColorSelection =\r\n            modifiedSelectionColor.backgroundColorSelection;\r\n        var foregroundColorSelection =\r\n            modifiedSelectionColor.foregroundColorSelection;\r\n        [\"::selection\", \"::-moz-selection\"].forEach(function (selection) {\r\n            lines.push(\"\".concat(selection, \" {\"));\r\n            lines.push(\r\n                \"    background-color: \".concat(\r\n                    backgroundColorSelection,\r\n                    \" !important;\"\r\n                )\r\n            );\r\n            lines.push(\r\n                \"    color: \".concat(foregroundColorSelection, \" !important;\")\r\n            );\r\n            lines.push(\"}\");\r\n        });\r\n        return lines.join(\"\\n\");\r\n    }\r\n    function getModifiedScrollbarStyle(theme) {\r\n        var lines = [];\r\n        var colorTrack;\r\n        var colorIcons;\r\n        var colorThumb;\r\n        var colorThumbHover;\r\n        var colorThumbActive;\r\n        var colorCorner;\r\n        if (theme.scrollbarColor === \"auto\") {\r\n            colorTrack = modifyBackgroundColor({r: 241, g: 241, b: 241}, theme);\r\n            colorIcons = modifyForegroundColor({r: 96, g: 96, b: 96}, theme);\r\n            colorThumb = modifyBackgroundColor({r: 176, g: 176, b: 176}, theme);\r\n            colorThumbHover = modifyBackgroundColor(\r\n                {r: 144, g: 144, b: 144},\r\n                theme\r\n            );\r\n            colorThumbActive = modifyBackgroundColor(\r\n                {r: 96, g: 96, b: 96},\r\n                theme\r\n            );\r\n            colorCorner = modifyBackgroundColor(\r\n                {r: 255, g: 255, b: 255},\r\n                theme\r\n            );\r\n        } else {\r\n            var rgb = parseColorWithCache(theme.scrollbarColor);\r\n            var hsl_1 = rgbToHSL(rgb);\r\n            var isLight = hsl_1.l > 0.5;\r\n            var lighten = function (lighter) {\r\n                return __assign(__assign({}, hsl_1), {\r\n                    l: clamp(hsl_1.l + lighter, 0, 1)\r\n                });\r\n            };\r\n            var darken = function (darker) {\r\n                return __assign(__assign({}, hsl_1), {\r\n                    l: clamp(hsl_1.l - darker, 0, 1)\r\n                });\r\n            };\r\n            colorTrack = hslToString(darken(0.4));\r\n            colorIcons = hslToString(isLight ? darken(0.4) : lighten(0.4));\r\n            colorThumb = hslToString(hsl_1);\r\n            colorThumbHover = hslToString(lighten(0.1));\r\n            colorThumbActive = hslToString(lighten(0.2));\r\n            colorCorner = hslToString(darken(0.5));\r\n        }\r\n        lines.push(\"::-webkit-scrollbar {\");\r\n        lines.push(\"    background-color: \".concat(colorTrack, \";\"));\r\n        lines.push(\"    color: \".concat(colorIcons, \";\"));\r\n        lines.push(\"}\");\r\n        lines.push(\"::-webkit-scrollbar-thumb {\");\r\n        lines.push(\"    background-color: \".concat(colorThumb, \";\"));\r\n        lines.push(\"}\");\r\n        lines.push(\"::-webkit-scrollbar-thumb:hover {\");\r\n        lines.push(\"    background-color: \".concat(colorThumbHover, \";\"));\r\n        lines.push(\"}\");\r\n        lines.push(\"::-webkit-scrollbar-thumb:active {\");\r\n        lines.push(\"    background-color: \".concat(colorThumbActive, \";\"));\r\n        lines.push(\"}\");\r\n        lines.push(\"::-webkit-scrollbar-corner {\");\r\n        lines.push(\"    background-color: \".concat(colorCorner, \";\"));\r\n        lines.push(\"}\");\r\n        if (isFirefox) {\r\n            lines.push(\"* {\");\r\n            lines.push(\r\n                \"    scrollbar-color: \"\r\n                    .concat(colorThumb, \" \")\r\n                    .concat(colorTrack, \";\")\r\n            );\r\n            lines.push(\"}\");\r\n        }\r\n        return lines.join(\"\\n\");\r\n    }\r\n    function getModifiedFallbackStyle(filter, _a) {\r\n        var strict = _a.strict;\r\n        var factory = defaultFallbackFactory;\r\n        return factory(filter, {strict: strict});\r\n    }\r\n    function defaultFallbackFactory(filter, _a) {\r\n        var strict = _a.strict;\r\n        var lines = [];\r\n        var isMicrosoft = [\"microsoft.com\", \"docs.microsoft.com\"].includes(\r\n            location.hostname\r\n        );\r\n        lines.push(\r\n            \"html, body, \".concat(\r\n                strict\r\n                    ? \"body :not(iframe)\".concat(\r\n                          isMicrosoft\r\n                              ? ':not(div[style^=\"position:absolute;top:0;left:-\"]'\r\n                              : \"\"\r\n                      )\r\n                    : \"body > :not(iframe)\",\r\n                \" {\"\r\n            )\r\n        );\r\n        lines.push(\r\n            \"    background-color: \".concat(\r\n                modifyBackgroundColor({r: 255, g: 255, b: 255}, filter),\r\n                \" !important;\"\r\n            )\r\n        );\r\n        lines.push(\r\n            \"    border-color: \".concat(\r\n                modifyBorderColor({r: 64, g: 64, b: 64}, filter),\r\n                \" !important;\"\r\n            )\r\n        );\r\n        lines.push(\r\n            \"    color: \".concat(\r\n                modifyForegroundColor({r: 0, g: 0, b: 0}, filter),\r\n                \" !important;\"\r\n            )\r\n        );\r\n        lines.push(\"}\");\r\n        return lines.join(\"\\n\");\r\n    }\r\n    var unparsableColors = new Set([\r\n        \"inherit\",\r\n        \"transparent\",\r\n        \"initial\",\r\n        \"currentcolor\",\r\n        \"none\",\r\n        \"unset\"\r\n    ]);\r\n    function getColorModifier(prop, value, rule) {\r\n        if (unparsableColors.has(value.toLowerCase())) {\r\n            return value;\r\n        }\r\n        var rgb = parseColorWithCache(value);\r\n        if (!rgb) {\r\n            return null;\r\n        }\r\n        if (prop.includes(\"background\")) {\r\n            if (\r\n                (rule.style.webkitMaskImage &&\r\n                    rule.style.webkitMaskImage !== \"none\") ||\r\n                (rule.style.webkitMask &&\r\n                    !rule.style.webkitMask.startsWith(\"none\")) ||\r\n                (rule.style.mask && rule.style.mask !== \"none\") ||\r\n                (rule.style.getPropertyValue(\"mask-image\") &&\r\n                    rule.style.getPropertyValue(\"mask-image\") !== \"none\")\r\n            ) {\r\n                return function (filter) {\r\n                    return modifyForegroundColor(rgb, filter);\r\n                };\r\n            }\r\n            return function (filter) {\r\n                return modifyBackgroundColor(rgb, filter);\r\n            };\r\n        }\r\n        if (prop.includes(\"border\") || prop.includes(\"outline\")) {\r\n            return function (filter) {\r\n                return modifyBorderColor(rgb, filter);\r\n            };\r\n        }\r\n        return function (filter) {\r\n            return modifyForegroundColor(rgb, filter);\r\n        };\r\n    }\r\n    var imageDetailsCache = new Map();\r\n    var awaitingForImageLoading = new Map();\r\n    function shouldIgnoreImage(selectorText, selectors) {\r\n        if (!selectorText || selectors.length === 0) {\r\n            return false;\r\n        }\r\n        if (\r\n            selectors.some(function (s) {\r\n                return s === \"*\";\r\n            })\r\n        ) {\r\n            return true;\r\n        }\r\n        var ruleSelectors = selectorText.split(/,\\s*/g);\r\n        var _loop_1 = function (i) {\r\n            var ignoredSelector = selectors[i];\r\n            if (\r\n                ruleSelectors.some(function (s) {\r\n                    return s === ignoredSelector;\r\n                })\r\n            ) {\r\n                return {value: true};\r\n            }\r\n        };\r\n        for (var i = 0; i < selectors.length; i++) {\r\n            var state_1 = _loop_1(i);\r\n            if (typeof state_1 === \"object\") return state_1.value;\r\n        }\r\n        return false;\r\n    }\r\n    function getBgImageModifier(\r\n        value,\r\n        rule,\r\n        ignoreImageSelectors,\r\n        isCancelled\r\n    ) {\r\n        var _this = this;\r\n        try {\r\n            var gradients = parseGradient(value);\r\n            var urls = getMatches(cssURLRegex, value);\r\n            if (urls.length === 0 && gradients.length === 0) {\r\n                return value;\r\n            }\r\n            var getIndices = function (matches) {\r\n                var index = 0;\r\n                return matches.map(function (match) {\r\n                    var valueIndex = value.indexOf(match, index);\r\n                    index = valueIndex + match.length;\r\n                    return {match: match, index: valueIndex};\r\n                });\r\n            };\r\n            var matches_1 = gradients\r\n                .map(function (i) {\r\n                    return __assign({type: \"gradient\"}, i);\r\n                })\r\n                .concat(\r\n                    getIndices(urls).map(function (i) {\r\n                        return __assign({type: \"url\", offset: 0}, i);\r\n                    })\r\n                )\r\n                .sort(function (a, b) {\r\n                    return a.index > b.index ? 1 : -1;\r\n                });\r\n            var getGradientModifier_1 = function (gradient) {\r\n                var typeGradient = gradient.typeGradient,\r\n                    match = gradient.match,\r\n                    hasComma = gradient.hasComma;\r\n                var partsRegex =\r\n                    /([^\\(\\),]+(\\([^\\(\\)]*(\\([^\\(\\)]*\\)*[^\\(\\)]*)?\\))?([^\\(\\), ]|( (?!calc)))*),?/g;\r\n                var colorStopRegex =\r\n                    /^(from|color-stop|to)\\(([^\\(\\)]*?,\\s*)?(.*?)\\)$/;\r\n                var parts = getMatches(partsRegex, match, 1).map(\r\n                    function (part) {\r\n                        part = part.trim();\r\n                        var rgb = parseColorWithCache(part);\r\n                        if (rgb) {\r\n                            return function (filter) {\r\n                                return modifyGradientColor(rgb, filter);\r\n                            };\r\n                        }\r\n                        var space = part.lastIndexOf(\" \");\r\n                        rgb = parseColorWithCache(part.substring(0, space));\r\n                        if (rgb) {\r\n                            return function (filter) {\r\n                                return \"\"\r\n                                    .concat(\r\n                                        modifyGradientColor(rgb, filter),\r\n                                        \" \"\r\n                                    )\r\n                                    .concat(part.substring(space + 1));\r\n                            };\r\n                        }\r\n                        var colorStopMatch = part.match(colorStopRegex);\r\n                        if (colorStopMatch) {\r\n                            rgb = parseColorWithCache(colorStopMatch[3]);\r\n                            if (rgb) {\r\n                                return function (filter) {\r\n                                    return \"\"\r\n                                        .concat(colorStopMatch[1], \"(\")\r\n                                        .concat(\r\n                                            colorStopMatch[2]\r\n                                                ? \"\".concat(\r\n                                                      colorStopMatch[2],\r\n                                                      \", \"\r\n                                                  )\r\n                                                : \"\"\r\n                                        )\r\n                                        .concat(\r\n                                            modifyGradientColor(rgb, filter),\r\n                                            \")\"\r\n                                        );\r\n                                };\r\n                            }\r\n                        }\r\n                        return function () {\r\n                            return part;\r\n                        };\r\n                    }\r\n                );\r\n                return function (filter) {\r\n                    return \"\"\r\n                        .concat(typeGradient, \"(\")\r\n                        .concat(\r\n                            parts\r\n                                .map(function (modify) {\r\n                                    return modify(filter);\r\n                                })\r\n                                .join(\", \"),\r\n                            \")\"\r\n                        )\r\n                        .concat(hasComma ? \", \" : \"\");\r\n                };\r\n            };\r\n            var getURLModifier_1 = function (urlValue) {\r\n                var _a;\r\n                if (\r\n                    shouldIgnoreImage(rule.selectorText, ignoreImageSelectors)\r\n                ) {\r\n                    return null;\r\n                }\r\n                var url = getCSSURLValue(urlValue);\r\n                var isURLEmpty = url.length === 0;\r\n                var parentStyleSheet = rule.parentStyleSheet;\r\n                var baseURL =\r\n                    parentStyleSheet && parentStyleSheet.href\r\n                        ? getCSSBaseBath(parentStyleSheet.href)\r\n                        : ((_a = parentStyleSheet.ownerNode) === null ||\r\n                          _a === void 0\r\n                              ? void 0\r\n                              : _a.baseURI) || location.origin;\r\n                url = getAbsoluteURL(baseURL, url);\r\n                return function (filter) {\r\n                    return __awaiter(_this, void 0, void 0, function () {\r\n                        var imageDetails,\r\n                            awaiters_1,\r\n                            err_1,\r\n                            bgImageValue,\r\n                            blobURL;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    if (isURLEmpty) {\r\n                                        return [2, \"url('')\"];\r\n                                    }\r\n                                    imageDetails = null;\r\n                                    if (!imageDetailsCache.has(url))\r\n                                        return [3, 1];\r\n                                    imageDetails = imageDetailsCache.get(url);\r\n                                    return [3, 9];\r\n                                case 1:\r\n                                    _a.trys.push([1, 8, , 9]);\r\n                                    if (!!isBlobURLCheckResultReady())\r\n                                        return [3, 3];\r\n                                    return [4, requestBlobURLCheck()];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    _a.label = 3;\r\n                                case 3:\r\n                                    if (!awaitingForImageLoading.has(url))\r\n                                        return [3, 5];\r\n                                    awaiters_1 =\r\n                                        awaitingForImageLoading.get(url);\r\n                                    return [\r\n                                        4,\r\n                                        new Promise(function (resolve) {\r\n                                            return awaiters_1.push(resolve);\r\n                                        })\r\n                                    ];\r\n                                case 4:\r\n                                    imageDetails = _a.sent();\r\n                                    if (!imageDetails) {\r\n                                        return [2, null];\r\n                                    }\r\n                                    return [3, 7];\r\n                                case 5:\r\n                                    awaitingForImageLoading.set(url, []);\r\n                                    return [4, getImageDetails(url)];\r\n                                case 6:\r\n                                    imageDetails = _a.sent();\r\n                                    imageDetailsCache.set(url, imageDetails);\r\n                                    awaitingForImageLoading\r\n                                        .get(url)\r\n                                        .forEach(function (resolve) {\r\n                                            return resolve(imageDetails);\r\n                                        });\r\n                                    awaitingForImageLoading.delete(url);\r\n                                    _a.label = 7;\r\n                                case 7:\r\n                                    if (isCancelled()) {\r\n                                        return [2, null];\r\n                                    }\r\n                                    return [3, 9];\r\n                                case 8:\r\n                                    err_1 = _a.sent();\r\n                                    logWarn(err_1);\r\n                                    if (awaitingForImageLoading.has(url)) {\r\n                                        awaitingForImageLoading\r\n                                            .get(url)\r\n                                            .forEach(function (resolve) {\r\n                                                return resolve(null);\r\n                                            });\r\n                                        awaitingForImageLoading.delete(url);\r\n                                    }\r\n                                    return [3, 9];\r\n                                case 9:\r\n                                    if (imageDetails) {\r\n                                        bgImageValue = getBgImageValue_1(\r\n                                            imageDetails,\r\n                                            filter\r\n                                        );\r\n                                        if (bgImageValue) {\r\n                                            return [2, bgImageValue];\r\n                                        }\r\n                                    }\r\n                                    if (!url.startsWith(\"data:\"))\r\n                                        return [3, 11];\r\n                                    return [4, tryConvertDataURLToBlobURL(url)];\r\n                                case 10:\r\n                                    blobURL = _a.sent();\r\n                                    if (blobURL) {\r\n                                        return [\r\n                                            2,\r\n                                            'url(\"'.concat(blobURL, '\")')\r\n                                        ];\r\n                                    }\r\n                                    _a.label = 11;\r\n                                case 11:\r\n                                    return [2, 'url(\"'.concat(url, '\")')];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n            };\r\n            var getBgImageValue_1 = function (imageDetails, filter) {\r\n                var isDark = imageDetails.isDark,\r\n                    isLight = imageDetails.isLight,\r\n                    isTransparent = imageDetails.isTransparent,\r\n                    isLarge = imageDetails.isLarge,\r\n                    width = imageDetails.width;\r\n                var result;\r\n                var logSrc = imageDetails.src.startsWith(\"data:\")\r\n                    ? \"data:\"\r\n                    : imageDetails.src;\r\n                if (isLarge) {\r\n                    logInfo(\"Not modifying too large image \".concat(logSrc));\r\n                    result = null;\r\n                } else if (\r\n                    isDark &&\r\n                    isTransparent &&\r\n                    filter.mode === 1 &&\r\n                    width > 2\r\n                ) {\r\n                    logInfo(\"Inverting dark image \".concat(logSrc));\r\n                    var inverted = getFilteredImageURL(\r\n                        imageDetails,\r\n                        __assign(__assign({}, filter), {\r\n                            sepia: clamp(filter.sepia + 10, 0, 100)\r\n                        })\r\n                    );\r\n                    result = 'url(\"'.concat(inverted, '\")');\r\n                } else if (isLight && !isTransparent && filter.mode === 1) {\r\n                    logInfo(\"Dimming light image \".concat(logSrc));\r\n                    var dimmed = getFilteredImageURL(imageDetails, filter);\r\n                    result = 'url(\"'.concat(dimmed, '\")');\r\n                } else if (filter.mode === 0 && isLight) {\r\n                    logInfo(\"Applying filter to image \".concat(logSrc));\r\n                    var filtered = getFilteredImageURL(\r\n                        imageDetails,\r\n                        __assign(__assign({}, filter), {\r\n                            brightness: clamp(filter.brightness - 10, 5, 200),\r\n                            sepia: clamp(filter.sepia + 10, 0, 100)\r\n                        })\r\n                    );\r\n                    result = 'url(\"'.concat(filtered, '\")');\r\n                } else {\r\n                    logInfo(\"Not modifying the image \".concat(logSrc));\r\n                    result = null;\r\n                }\r\n                return result;\r\n            };\r\n            var modifiers_1 = [];\r\n            var matchIndex_1 = 0;\r\n            var prevHasComma_1 = false;\r\n            matches_1.forEach(function (_a, i) {\r\n                var type = _a.type,\r\n                    match = _a.match,\r\n                    index = _a.index,\r\n                    typeGradient = _a.typeGradient,\r\n                    hasComma = _a.hasComma,\r\n                    offset = _a.offset;\r\n                var matchStart = index;\r\n                var prefixStart = matchIndex_1;\r\n                var matchEnd = matchStart + match.length + offset;\r\n                matchIndex_1 = matchEnd;\r\n                if (prefixStart !== matchStart) {\r\n                    if (prevHasComma_1) {\r\n                        modifiers_1.push(function () {\r\n                            var betweenValue = value.substring(\r\n                                prefixStart,\r\n                                matchStart\r\n                            );\r\n                            if (betweenValue[0] === \",\") {\r\n                                betweenValue = betweenValue.substring(1);\r\n                            }\r\n                            return betweenValue;\r\n                        });\r\n                    } else {\r\n                        modifiers_1.push(function () {\r\n                            return value.substring(prefixStart, matchStart);\r\n                        });\r\n                    }\r\n                }\r\n                prevHasComma_1 = hasComma || false;\r\n                if (type === \"url\") {\r\n                    modifiers_1.push(getURLModifier_1(match));\r\n                } else if (type === \"gradient\") {\r\n                    modifiers_1.push(\r\n                        getGradientModifier_1({\r\n                            match: match,\r\n                            index: index,\r\n                            typeGradient: typeGradient,\r\n                            hasComma: hasComma || false,\r\n                            offset: offset\r\n                        })\r\n                    );\r\n                }\r\n                if (i === matches_1.length - 1) {\r\n                    modifiers_1.push(function () {\r\n                        return value.substring(matchEnd);\r\n                    });\r\n                }\r\n            });\r\n            return function (filter) {\r\n                var results = modifiers_1\r\n                    .filter(Boolean)\r\n                    .map(function (modify) {\r\n                        return modify(filter);\r\n                    });\r\n                if (\r\n                    results.some(function (r) {\r\n                        return r instanceof Promise;\r\n                    })\r\n                ) {\r\n                    return Promise.all(results).then(function (asyncResults) {\r\n                        return asyncResults.filter(Boolean).join(\"\");\r\n                    });\r\n                }\r\n                var combinedResult = results.join(\"\");\r\n                if (combinedResult.endsWith(\", initial\")) {\r\n                    return combinedResult.slice(0, -9);\r\n                }\r\n                return combinedResult;\r\n            };\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n    function getShadowModifierWithInfo(value) {\r\n        try {\r\n            var index_1 = 0;\r\n            var colorMatches_1 = getMatches(\r\n                /(^|\\s)(?!calc)([a-z]+\\(.+?\\)|#[0-9a-f]+|[a-z]+)(.*?(inset|outset)?($|,))/gi,\r\n                value,\r\n                2\r\n            );\r\n            var notParsed_1 = 0;\r\n            var modifiers_2 = colorMatches_1.map(function (match, i) {\r\n                var prefixIndex = index_1;\r\n                var matchIndex = value.indexOf(match, index_1);\r\n                var matchEnd = matchIndex + match.length;\r\n                index_1 = matchEnd;\r\n                var rgb = parseColorWithCache(match);\r\n                if (!rgb) {\r\n                    notParsed_1++;\r\n                    return function () {\r\n                        return value.substring(prefixIndex, matchEnd);\r\n                    };\r\n                }\r\n                return function (filter) {\r\n                    return \"\"\r\n                        .concat(value.substring(prefixIndex, matchIndex))\r\n                        .concat(modifyShadowColor(rgb, filter))\r\n                        .concat(\r\n                            i === colorMatches_1.length - 1\r\n                                ? value.substring(matchEnd)\r\n                                : \"\"\r\n                        );\r\n                };\r\n            });\r\n            return function (filter) {\r\n                var modified = modifiers_2\r\n                    .map(function (modify) {\r\n                        return modify(filter);\r\n                    })\r\n                    .join(\"\");\r\n                return {\r\n                    matchesLength: colorMatches_1.length,\r\n                    unparseableMatchesLength: notParsed_1,\r\n                    result: modified\r\n                };\r\n            };\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n    function getShadowModifier(value) {\r\n        var shadowModifier = getShadowModifierWithInfo(value);\r\n        if (!shadowModifier) {\r\n            return null;\r\n        }\r\n        return function (theme) {\r\n            return shadowModifier(theme).result;\r\n        };\r\n    }\r\n    function getVariableModifier(\r\n        variablesStore,\r\n        prop,\r\n        value,\r\n        rule,\r\n        ignoredImgSelectors,\r\n        isCancelled\r\n    ) {\r\n        return variablesStore.getModifierForVariable({\r\n            varName: prop,\r\n            sourceValue: value,\r\n            rule: rule,\r\n            ignoredImgSelectors: ignoredImgSelectors,\r\n            isCancelled: isCancelled\r\n        });\r\n    }\r\n    function getVariableDependantModifier(variablesStore, prop, value) {\r\n        return variablesStore.getModifierForVarDependant(prop, value);\r\n    }\r\n    function cleanModificationCache() {\r\n        clearColorModificationCache();\r\n        imageDetailsCache.clear();\r\n        cleanImageProcessingCache();\r\n        awaitingForImageLoading.clear();\r\n    }\r\n\r\n    var VAR_TYPE_BGCOLOR = 1 << 0;\r\n    var VAR_TYPE_TEXTCOLOR = 1 << 1;\r\n    var VAR_TYPE_BORDERCOLOR = 1 << 2;\r\n    var VAR_TYPE_BGIMG = 1 << 3;\r\n    var VariablesStore = (function () {\r\n        function VariablesStore() {\r\n            this.varTypes = new Map();\r\n            this.rulesQueue = [];\r\n            this.inlineStyleQueue = [];\r\n            this.definedVars = new Set();\r\n            this.varRefs = new Map();\r\n            this.unknownColorVars = new Set();\r\n            this.unknownBgVars = new Set();\r\n            this.undefinedVars = new Set();\r\n            this.initialVarTypes = new Map();\r\n            this.changedTypeVars = new Set();\r\n            this.typeChangeSubscriptions = new Map();\r\n            this.unstableVarValues = new Map();\r\n        }\r\n        VariablesStore.prototype.clear = function () {\r\n            this.varTypes.clear();\r\n            this.rulesQueue.splice(0);\r\n            this.inlineStyleQueue.splice(0);\r\n            this.definedVars.clear();\r\n            this.varRefs.clear();\r\n            this.unknownColorVars.clear();\r\n            this.unknownBgVars.clear();\r\n            this.undefinedVars.clear();\r\n            this.initialVarTypes.clear();\r\n            this.changedTypeVars.clear();\r\n            this.typeChangeSubscriptions.clear();\r\n            this.unstableVarValues.clear();\r\n        };\r\n        VariablesStore.prototype.isVarType = function (varName, typeNum) {\r\n            return (\r\n                this.varTypes.has(varName) &&\r\n                (this.varTypes.get(varName) & typeNum) > 0\r\n            );\r\n        };\r\n        VariablesStore.prototype.addRulesForMatching = function (rules) {\r\n            this.rulesQueue.push(rules);\r\n        };\r\n        VariablesStore.prototype.addInlineStyleForMatching = function (style) {\r\n            this.inlineStyleQueue.push(style);\r\n        };\r\n        VariablesStore.prototype.matchVariablesAndDependents = function () {\r\n            var _this = this;\r\n            if (\r\n                this.rulesQueue.length === 0 &&\r\n                this.inlineStyleQueue.length === 0\r\n            ) {\r\n                return;\r\n            }\r\n            this.changedTypeVars.clear();\r\n            this.initialVarTypes = new Map(this.varTypes);\r\n            this.collectRootVariables();\r\n            this.collectVariablesAndVarDep();\r\n            this.collectRootVarDependents();\r\n            this.varRefs.forEach(function (refs, v) {\r\n                refs.forEach(function (r) {\r\n                    if (_this.varTypes.has(v)) {\r\n                        _this.resolveVariableType(r, _this.varTypes.get(v));\r\n                    }\r\n                });\r\n            });\r\n            this.unknownColorVars.forEach(function (v) {\r\n                if (_this.unknownBgVars.has(v)) {\r\n                    _this.unknownColorVars.delete(v);\r\n                    _this.unknownBgVars.delete(v);\r\n                    _this.resolveVariableType(v, VAR_TYPE_BGCOLOR);\r\n                } else if (\r\n                    _this.isVarType(\r\n                        v,\r\n                        VAR_TYPE_BGCOLOR |\r\n                            VAR_TYPE_TEXTCOLOR |\r\n                            VAR_TYPE_BORDERCOLOR\r\n                    )\r\n                ) {\r\n                    _this.unknownColorVars.delete(v);\r\n                } else {\r\n                    _this.undefinedVars.add(v);\r\n                }\r\n            });\r\n            this.unknownBgVars.forEach(function (v) {\r\n                var hasColor =\r\n                    _this.findVarRef(v, function (ref) {\r\n                        return (\r\n                            _this.unknownColorVars.has(ref) ||\r\n                            _this.isVarType(\r\n                                ref,\r\n                                VAR_TYPE_TEXTCOLOR | VAR_TYPE_BORDERCOLOR\r\n                            )\r\n                        );\r\n                    }) != null;\r\n                if (hasColor) {\r\n                    _this.iterateVarRefs(v, function (ref) {\r\n                        _this.resolveVariableType(ref, VAR_TYPE_BGCOLOR);\r\n                    });\r\n                } else if (\r\n                    _this.isVarType(v, VAR_TYPE_BGCOLOR | VAR_TYPE_BGIMG)\r\n                ) {\r\n                    _this.unknownBgVars.delete(v);\r\n                } else {\r\n                    _this.undefinedVars.add(v);\r\n                }\r\n            });\r\n            this.changedTypeVars.forEach(function (varName) {\r\n                if (_this.typeChangeSubscriptions.has(varName)) {\r\n                    _this.typeChangeSubscriptions\r\n                        .get(varName)\r\n                        .forEach(function (callback) {\r\n                            callback();\r\n                        });\r\n                }\r\n            });\r\n            this.changedTypeVars.clear();\r\n        };\r\n        VariablesStore.prototype.getModifierForVariable = function (options) {\r\n            var _this = this;\r\n            return function (theme) {\r\n                var varName = options.varName,\r\n                    sourceValue = options.sourceValue,\r\n                    rule = options.rule,\r\n                    ignoredImgSelectors = options.ignoredImgSelectors,\r\n                    isCancelled = options.isCancelled;\r\n                var getDeclarations = function () {\r\n                    var declarations = [];\r\n                    var addModifiedValue = function (\r\n                        typeNum,\r\n                        varNameWrapper,\r\n                        colorModifier\r\n                    ) {\r\n                        if (!_this.isVarType(varName, typeNum)) {\r\n                            return;\r\n                        }\r\n                        var property = varNameWrapper(varName);\r\n                        var modifiedValue;\r\n                        if (isVarDependant(sourceValue)) {\r\n                            if (isConstructedColorVar(sourceValue)) {\r\n                                var value = insertVarValues(\r\n                                    sourceValue,\r\n                                    _this.unstableVarValues\r\n                                );\r\n                                if (!value) {\r\n                                    value =\r\n                                        typeNum === VAR_TYPE_BGCOLOR\r\n                                            ? \"#ffffff\"\r\n                                            : \"#000000\";\r\n                                }\r\n                                modifiedValue = colorModifier(value, theme);\r\n                            } else {\r\n                                modifiedValue = replaceCSSVariablesNames(\r\n                                    sourceValue,\r\n                                    function (v) {\r\n                                        return varNameWrapper(v);\r\n                                    },\r\n                                    function (fallback) {\r\n                                        return colorModifier(fallback, theme);\r\n                                    }\r\n                                );\r\n                            }\r\n                        } else {\r\n                            modifiedValue = colorModifier(sourceValue, theme);\r\n                        }\r\n                        declarations.push({\r\n                            property: property,\r\n                            value: modifiedValue\r\n                        });\r\n                    };\r\n                    addModifiedValue(\r\n                        VAR_TYPE_BGCOLOR,\r\n                        wrapBgColorVariableName,\r\n                        tryModifyBgColor\r\n                    );\r\n                    addModifiedValue(\r\n                        VAR_TYPE_TEXTCOLOR,\r\n                        wrapTextColorVariableName,\r\n                        tryModifyTextColor\r\n                    );\r\n                    addModifiedValue(\r\n                        VAR_TYPE_BORDERCOLOR,\r\n                        wrapBorderColorVariableName,\r\n                        tryModifyBorderColor\r\n                    );\r\n                    if (_this.isVarType(varName, VAR_TYPE_BGIMG)) {\r\n                        var property = wrapBgImgVariableName(varName);\r\n                        var modifiedValue = sourceValue;\r\n                        if (isVarDependant(sourceValue)) {\r\n                            modifiedValue = replaceCSSVariablesNames(\r\n                                sourceValue,\r\n                                function (v) {\r\n                                    return wrapBgColorVariableName(v);\r\n                                },\r\n                                function (fallback) {\r\n                                    return tryModifyBgColor(fallback, theme);\r\n                                }\r\n                            );\r\n                        }\r\n                        var bgModifier = getBgImageModifier(\r\n                            modifiedValue,\r\n                            rule,\r\n                            ignoredImgSelectors,\r\n                            isCancelled\r\n                        );\r\n                        modifiedValue =\r\n                            typeof bgModifier === \"function\"\r\n                                ? bgModifier(theme)\r\n                                : bgModifier;\r\n                        declarations.push({\r\n                            property: property,\r\n                            value: modifiedValue\r\n                        });\r\n                    }\r\n                    return declarations;\r\n                };\r\n                var callbacks = new Set();\r\n                var addListener = function (onTypeChange) {\r\n                    var callback = function () {\r\n                        var decs = getDeclarations();\r\n                        onTypeChange(decs);\r\n                    };\r\n                    callbacks.add(callback);\r\n                    _this.subscribeForVarTypeChange(varName, callback);\r\n                };\r\n                var removeListeners = function () {\r\n                    callbacks.forEach(function (callback) {\r\n                        _this.unsubscribeFromVariableTypeChanges(\r\n                            varName,\r\n                            callback\r\n                        );\r\n                    });\r\n                };\r\n                return {\r\n                    declarations: getDeclarations(),\r\n                    onTypeChange: {\r\n                        addListener: addListener,\r\n                        removeListeners: removeListeners\r\n                    }\r\n                };\r\n            };\r\n        };\r\n        VariablesStore.prototype.getModifierForVarDependant = function (\r\n            property,\r\n            sourceValue\r\n        ) {\r\n            var _this = this;\r\n            if (sourceValue.match(/^\\s*(rgb|hsl)a?\\(/)) {\r\n                var isBg_1 = property.startsWith(\"background\");\r\n                var isText_1 = isTextColorProperty(property);\r\n                return function (theme) {\r\n                    var value = insertVarValues(\r\n                        sourceValue,\r\n                        _this.unstableVarValues\r\n                    );\r\n                    if (!value) {\r\n                        value = isBg_1 ? \"#ffffff\" : \"#000000\";\r\n                    }\r\n                    var modifier = isBg_1\r\n                        ? tryModifyBgColor\r\n                        : isText_1\r\n                          ? tryModifyTextColor\r\n                          : tryModifyBorderColor;\r\n                    return modifier(value, theme);\r\n                };\r\n            }\r\n            if (property === \"background-color\") {\r\n                return function (theme) {\r\n                    return replaceCSSVariablesNames(\r\n                        sourceValue,\r\n                        function (v) {\r\n                            return wrapBgColorVariableName(v);\r\n                        },\r\n                        function (fallback) {\r\n                            return tryModifyBgColor(fallback, theme);\r\n                        }\r\n                    );\r\n                };\r\n            }\r\n            if (isTextColorProperty(property)) {\r\n                return function (theme) {\r\n                    return replaceCSSVariablesNames(\r\n                        sourceValue,\r\n                        function (v) {\r\n                            return wrapTextColorVariableName(v);\r\n                        },\r\n                        function (fallback) {\r\n                            return tryModifyTextColor(fallback, theme);\r\n                        }\r\n                    );\r\n                };\r\n            }\r\n            if (\r\n                property === \"background\" ||\r\n                property === \"background-image\" ||\r\n                property === \"box-shadow\"\r\n            ) {\r\n                return function (theme) {\r\n                    var unknownVars = new Set();\r\n                    var modify = function () {\r\n                        var variableReplaced = replaceCSSVariablesNames(\r\n                            sourceValue,\r\n                            function (v) {\r\n                                if (_this.isVarType(v, VAR_TYPE_BGCOLOR)) {\r\n                                    return wrapBgColorVariableName(v);\r\n                                }\r\n                                if (_this.isVarType(v, VAR_TYPE_BGIMG)) {\r\n                                    return wrapBgImgVariableName(v);\r\n                                }\r\n                                unknownVars.add(v);\r\n                                return v;\r\n                            },\r\n                            function (fallback) {\r\n                                return tryModifyBgColor(fallback, theme);\r\n                            }\r\n                        );\r\n                        if (property === \"box-shadow\") {\r\n                            var shadowModifier =\r\n                                getShadowModifierWithInfo(variableReplaced);\r\n                            var modifiedShadow = shadowModifier(theme);\r\n                            if (\r\n                                modifiedShadow.unparseableMatchesLength !==\r\n                                modifiedShadow.matchesLength\r\n                            ) {\r\n                                return modifiedShadow.result;\r\n                            }\r\n                        }\r\n                        return variableReplaced;\r\n                    };\r\n                    var modified = modify();\r\n                    if (unknownVars.size > 0) {\r\n                        return new Promise(function (resolve) {\r\n                            var firstUnknownVar = unknownVars\r\n                                .values()\r\n                                .next().value;\r\n                            var callback = function () {\r\n                                _this.unsubscribeFromVariableTypeChanges(\r\n                                    firstUnknownVar,\r\n                                    callback\r\n                                );\r\n                                var newValue = modify();\r\n                                resolve(newValue);\r\n                            };\r\n                            _this.subscribeForVarTypeChange(\r\n                                firstUnknownVar,\r\n                                callback\r\n                            );\r\n                        });\r\n                    }\r\n                    return modified;\r\n                };\r\n            }\r\n            if (\r\n                property.startsWith(\"border\") ||\r\n                property.startsWith(\"outline\")\r\n            ) {\r\n                return function (theme) {\r\n                    return replaceCSSVariablesNames(\r\n                        sourceValue,\r\n                        function (v) {\r\n                            return wrapBorderColorVariableName(v);\r\n                        },\r\n                        function (fallback) {\r\n                            return tryModifyBorderColor(fallback, theme);\r\n                        }\r\n                    );\r\n                };\r\n            }\r\n            return null;\r\n        };\r\n        VariablesStore.prototype.subscribeForVarTypeChange = function (\r\n            varName,\r\n            callback\r\n        ) {\r\n            if (!this.typeChangeSubscriptions.has(varName)) {\r\n                this.typeChangeSubscriptions.set(varName, new Set());\r\n            }\r\n            var rootStore = this.typeChangeSubscriptions.get(varName);\r\n            if (!rootStore.has(callback)) {\r\n                rootStore.add(callback);\r\n            }\r\n        };\r\n        VariablesStore.prototype.unsubscribeFromVariableTypeChanges = function (\r\n            varName,\r\n            callback\r\n        ) {\r\n            if (this.typeChangeSubscriptions.has(varName)) {\r\n                this.typeChangeSubscriptions.get(varName).delete(callback);\r\n            }\r\n        };\r\n        VariablesStore.prototype.collectVariablesAndVarDep = function () {\r\n            var _this = this;\r\n            this.rulesQueue.forEach(function (rules) {\r\n                iterateCSSRules(rules, function (rule) {\r\n                    if (rule.style) {\r\n                        _this.collectVarsFromCSSDeclarations(rule.style);\r\n                    }\r\n                });\r\n            });\r\n            this.inlineStyleQueue.forEach(function (style) {\r\n                _this.collectVarsFromCSSDeclarations(style);\r\n            });\r\n            this.rulesQueue.splice(0);\r\n            this.inlineStyleQueue.splice(0);\r\n        };\r\n        VariablesStore.prototype.collectVarsFromCSSDeclarations = function (\r\n            style\r\n        ) {\r\n            var _this = this;\r\n            iterateCSSDeclarations(style, function (property, value) {\r\n                if (isVariable(property)) {\r\n                    _this.inspectVariable(property, value);\r\n                }\r\n                if (isVarDependant(value)) {\r\n                    _this.inspectVarDependant(property, value);\r\n                }\r\n            });\r\n        };\r\n        VariablesStore.prototype.shouldProcessRootVariables = function () {\r\n            var _a;\r\n            return (\r\n                this.rulesQueue.length > 0 &&\r\n                ((_a = document.documentElement.getAttribute(\"style\")) ===\r\n                    null || _a === void 0\r\n                    ? void 0\r\n                    : _a.includes(\"--\"))\r\n            );\r\n        };\r\n        VariablesStore.prototype.collectRootVariables = function () {\r\n            var _this = this;\r\n            if (!this.shouldProcessRootVariables()) {\r\n                return;\r\n            }\r\n            iterateCSSDeclarations(\r\n                document.documentElement.style,\r\n                function (property, value) {\r\n                    if (isVariable(property)) {\r\n                        _this.inspectVariable(property, value);\r\n                    }\r\n                }\r\n            );\r\n        };\r\n        VariablesStore.prototype.inspectVariable = function (varName, value) {\r\n            this.unstableVarValues.set(varName, value);\r\n            if (isVarDependant(value) && isConstructedColorVar(value)) {\r\n                this.unknownColorVars.add(varName);\r\n                this.definedVars.add(varName);\r\n            }\r\n            if (this.definedVars.has(varName)) {\r\n                return;\r\n            }\r\n            this.definedVars.add(varName);\r\n            var isColor =\r\n                rawValueRegex.test(value) || parseColorWithCache(value);\r\n            if (isColor) {\r\n                this.unknownColorVars.add(varName);\r\n            } else if (\r\n                value.includes(\"url(\") ||\r\n                value.includes(\"linear-gradient(\") ||\r\n                value.includes(\"radial-gradient(\")\r\n            ) {\r\n                this.resolveVariableType(varName, VAR_TYPE_BGIMG);\r\n            }\r\n        };\r\n        VariablesStore.prototype.resolveVariableType = function (\r\n            varName,\r\n            typeNum\r\n        ) {\r\n            var initialType = this.initialVarTypes.get(varName) || 0;\r\n            var currentType = this.varTypes.get(varName) || 0;\r\n            var newType = currentType | typeNum;\r\n            this.varTypes.set(varName, newType);\r\n            if (newType !== initialType || this.undefinedVars.has(varName)) {\r\n                this.changedTypeVars.add(varName);\r\n                this.undefinedVars.delete(varName);\r\n            }\r\n            this.unknownColorVars.delete(varName);\r\n            this.unknownBgVars.delete(varName);\r\n        };\r\n        VariablesStore.prototype.collectRootVarDependents = function () {\r\n            var _this = this;\r\n            if (!this.shouldProcessRootVariables()) {\r\n                return;\r\n            }\r\n            iterateCSSDeclarations(\r\n                document.documentElement.style,\r\n                function (property, value) {\r\n                    if (isVarDependant(value)) {\r\n                        _this.inspectVarDependant(property, value);\r\n                    }\r\n                }\r\n            );\r\n        };\r\n        VariablesStore.prototype.inspectVarDependant = function (\r\n            property,\r\n            value\r\n        ) {\r\n            var _this = this;\r\n            if (isVariable(property)) {\r\n                this.iterateVarDeps(value, function (ref) {\r\n                    if (!_this.varRefs.has(property)) {\r\n                        _this.varRefs.set(property, new Set());\r\n                    }\r\n                    _this.varRefs.get(property).add(ref);\r\n                });\r\n            } else if (\r\n                property === \"background-color\" ||\r\n                property === \"box-shadow\"\r\n            ) {\r\n                this.iterateVarDeps(value, function (v) {\r\n                    return _this.resolveVariableType(v, VAR_TYPE_BGCOLOR);\r\n                });\r\n            } else if (isTextColorProperty(property)) {\r\n                this.iterateVarDeps(value, function (v) {\r\n                    return _this.resolveVariableType(v, VAR_TYPE_TEXTCOLOR);\r\n                });\r\n            } else if (\r\n                property.startsWith(\"border\") ||\r\n                property.startsWith(\"outline\")\r\n            ) {\r\n                this.iterateVarDeps(value, function (v) {\r\n                    return _this.resolveVariableType(v, VAR_TYPE_BORDERCOLOR);\r\n                });\r\n            } else if (\r\n                property === \"background\" ||\r\n                property === \"background-image\"\r\n            ) {\r\n                this.iterateVarDeps(value, function (v) {\r\n                    if (_this.isVarType(v, VAR_TYPE_BGCOLOR | VAR_TYPE_BGIMG)) {\r\n                        return;\r\n                    }\r\n                    var isBgColor =\r\n                        _this.findVarRef(v, function (ref) {\r\n                            return (\r\n                                _this.unknownColorVars.has(ref) ||\r\n                                _this.isVarType(\r\n                                    ref,\r\n                                    VAR_TYPE_TEXTCOLOR | VAR_TYPE_BORDERCOLOR\r\n                                )\r\n                            );\r\n                        }) != null;\r\n                    _this.iterateVarRefs(v, function (ref) {\r\n                        if (isBgColor) {\r\n                            _this.resolveVariableType(ref, VAR_TYPE_BGCOLOR);\r\n                        } else {\r\n                            _this.unknownBgVars.add(ref);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        };\r\n        VariablesStore.prototype.iterateVarDeps = function (value, iterator) {\r\n            var varDeps = new Set();\r\n            iterateVarDependencies(value, function (v) {\r\n                return varDeps.add(v);\r\n            });\r\n            varDeps.forEach(function (v) {\r\n                return iterator(v);\r\n            });\r\n        };\r\n        VariablesStore.prototype.findVarRef = function (\r\n            varName,\r\n            iterator,\r\n            stack\r\n        ) {\r\n            var e_1, _a;\r\n            if (stack === void 0) {\r\n                stack = new Set();\r\n            }\r\n            if (stack.has(varName)) {\r\n                return null;\r\n            }\r\n            stack.add(varName);\r\n            var result = iterator(varName);\r\n            if (result) {\r\n                return varName;\r\n            }\r\n            var refs = this.varRefs.get(varName);\r\n            if (!refs || refs.size === 0) {\r\n                return null;\r\n            }\r\n            try {\r\n                for (\r\n                    var refs_1 = __values(refs), refs_1_1 = refs_1.next();\r\n                    !refs_1_1.done;\r\n                    refs_1_1 = refs_1.next()\r\n                ) {\r\n                    var ref = refs_1_1.value;\r\n                    var found = this.findVarRef(ref, iterator, stack);\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n            } catch (e_1_1) {\r\n                e_1 = {error: e_1_1};\r\n            } finally {\r\n                try {\r\n                    if (refs_1_1 && !refs_1_1.done && (_a = refs_1.return))\r\n                        _a.call(refs_1);\r\n                } finally {\r\n                    if (e_1) throw e_1.error;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        VariablesStore.prototype.iterateVarRefs = function (varName, iterator) {\r\n            this.findVarRef(varName, function (ref) {\r\n                iterator(ref);\r\n                return false;\r\n            });\r\n        };\r\n        VariablesStore.prototype.setOnRootVariableChange = function (callback) {\r\n            this.onRootVariableDefined = callback;\r\n        };\r\n        VariablesStore.prototype.putRootVars = function (styleElement, theme) {\r\n            var e_2, _a;\r\n            var _this = this;\r\n            var sheet = styleElement.sheet;\r\n            if (sheet.cssRules.length > 0) {\r\n                sheet.deleteRule(0);\r\n            }\r\n            var declarations = new Map();\r\n            iterateCSSDeclarations(\r\n                document.documentElement.style,\r\n                function (property, value) {\r\n                    if (isVariable(property)) {\r\n                        if (_this.isVarType(property, VAR_TYPE_BGCOLOR)) {\r\n                            declarations.set(\r\n                                wrapBgColorVariableName(property),\r\n                                tryModifyBgColor(value, theme)\r\n                            );\r\n                        }\r\n                        if (_this.isVarType(property, VAR_TYPE_TEXTCOLOR)) {\r\n                            declarations.set(\r\n                                wrapTextColorVariableName(property),\r\n                                tryModifyTextColor(value, theme)\r\n                            );\r\n                        }\r\n                        if (_this.isVarType(property, VAR_TYPE_BORDERCOLOR)) {\r\n                            declarations.set(\r\n                                wrapBorderColorVariableName(property),\r\n                                tryModifyBorderColor(value, theme)\r\n                            );\r\n                        }\r\n                        _this.subscribeForVarTypeChange(\r\n                            property,\r\n                            _this.onRootVariableDefined\r\n                        );\r\n                    }\r\n                }\r\n            );\r\n            var cssLines = [];\r\n            cssLines.push(\":root {\");\r\n            try {\r\n                for (\r\n                    var declarations_1 = __values(declarations),\r\n                        declarations_1_1 = declarations_1.next();\r\n                    !declarations_1_1.done;\r\n                    declarations_1_1 = declarations_1.next()\r\n                ) {\r\n                    var _b = __read(declarations_1_1.value, 2),\r\n                        property = _b[0],\r\n                        value = _b[1];\r\n                    cssLines.push(\r\n                        \"    \".concat(property, \": \").concat(value, \";\")\r\n                    );\r\n                }\r\n            } catch (e_2_1) {\r\n                e_2 = {error: e_2_1};\r\n            } finally {\r\n                try {\r\n                    if (\r\n                        declarations_1_1 &&\r\n                        !declarations_1_1.done &&\r\n                        (_a = declarations_1.return)\r\n                    )\r\n                        _a.call(declarations_1);\r\n                } finally {\r\n                    if (e_2) throw e_2.error;\r\n                }\r\n            }\r\n            cssLines.push(\"}\");\r\n            var cssText = cssLines.join(\"\\n\");\r\n            sheet.insertRule(cssText);\r\n        };\r\n        return VariablesStore;\r\n    })();\r\n    var variablesStore = new VariablesStore();\r\n    function getVariableRange(input, searchStart) {\r\n        if (searchStart === void 0) {\r\n            searchStart = 0;\r\n        }\r\n        var start = input.indexOf(\"var(\", searchStart);\r\n        if (start >= 0) {\r\n            var range = getParenthesesRange(input, start + 3);\r\n            if (range) {\r\n                return {start: start, end: range.end};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function getVariablesMatches(input) {\r\n        var ranges = [];\r\n        var i = 0;\r\n        var range;\r\n        while ((range = getVariableRange(input, i))) {\r\n            var start = range.start,\r\n                end = range.end;\r\n            ranges.push({\r\n                start: start,\r\n                end: end,\r\n                value: input.substring(start, end)\r\n            });\r\n            i = range.end + 1;\r\n        }\r\n        return ranges;\r\n    }\r\n    function replaceVariablesMatches(input, replacer) {\r\n        var matches = getVariablesMatches(input);\r\n        var matchesCount = matches.length;\r\n        if (matchesCount === 0) {\r\n            return input;\r\n        }\r\n        var inputLength = input.length;\r\n        var replacements = matches.map(function (m) {\r\n            return replacer(m.value);\r\n        });\r\n        var parts = [];\r\n        parts.push(input.substring(0, matches[0].start));\r\n        for (var i = 0; i < matchesCount; i++) {\r\n            parts.push(replacements[i]);\r\n            var start = matches[i].end;\r\n            var end = i < matchesCount - 1 ? matches[i + 1].start : inputLength;\r\n            parts.push(input.substring(start, end));\r\n        }\r\n        return parts.join(\"\");\r\n    }\r\n    function getVariableNameAndFallback(match) {\r\n        var commaIndex = match.indexOf(\",\");\r\n        var name;\r\n        var fallback;\r\n        if (commaIndex >= 0) {\r\n            name = match.substring(4, commaIndex).trim();\r\n            fallback = match.substring(commaIndex + 1, match.length - 1).trim();\r\n        } else {\r\n            name = match.substring(4, match.length - 1).trim();\r\n            fallback = \"\";\r\n        }\r\n        return {name: name, fallback: fallback};\r\n    }\r\n    function replaceCSSVariablesNames(value, nameReplacer, fallbackReplacer) {\r\n        var matchReplacer = function (match) {\r\n            var _a = getVariableNameAndFallback(match),\r\n                name = _a.name,\r\n                fallback = _a.fallback;\r\n            var newName = nameReplacer(name);\r\n            if (!fallback) {\r\n                return \"var(\".concat(newName, \")\");\r\n            }\r\n            var newFallback;\r\n            if (isVarDependant(fallback)) {\r\n                newFallback = replaceCSSVariablesNames(\r\n                    fallback,\r\n                    nameReplacer,\r\n                    fallbackReplacer\r\n                );\r\n            } else if (fallbackReplacer) {\r\n                newFallback = fallbackReplacer(fallback);\r\n            } else {\r\n                newFallback = fallback;\r\n            }\r\n            return \"var(\".concat(newName, \", \").concat(newFallback, \")\");\r\n        };\r\n        return replaceVariablesMatches(value, matchReplacer);\r\n    }\r\n    function iterateVarDependencies(value, iterator) {\r\n        replaceCSSVariablesNames(value, function (varName) {\r\n            iterator(varName);\r\n            return varName;\r\n        });\r\n    }\r\n    function wrapBgColorVariableName(name) {\r\n        return \"--darkreader-bg\".concat(name);\r\n    }\r\n    function wrapTextColorVariableName(name) {\r\n        return \"--darkreader-text\".concat(name);\r\n    }\r\n    function wrapBorderColorVariableName(name) {\r\n        return \"--darkreader-border\".concat(name);\r\n    }\r\n    function wrapBgImgVariableName(name) {\r\n        return \"--darkreader-bgimg\".concat(name);\r\n    }\r\n    function isVariable(property) {\r\n        return property.startsWith(\"--\");\r\n    }\r\n    function isVarDependant(value) {\r\n        return value.includes(\"var(\");\r\n    }\r\n    function isConstructedColorVar(value) {\r\n        return value.match(/^\\s*(rgb|hsl)a?\\(/);\r\n    }\r\n    function isTextColorProperty(property) {\r\n        return (\r\n            property === \"color\" ||\r\n            property === \"caret-color\" ||\r\n            property === \"-webkit-text-fill-color\"\r\n        );\r\n    }\r\n    var rawValueRegex = /^\\d{1,3}, ?\\d{1,3}, ?\\d{1,3}$/;\r\n    function parseRawValue(color) {\r\n        if (rawValueRegex.test(color)) {\r\n            var splitted = color.split(\",\");\r\n            var resultInRGB_1 = \"rgb(\";\r\n            splitted.forEach(function (number) {\r\n                resultInRGB_1 += \"\".concat(number.trim(), \", \");\r\n            });\r\n            resultInRGB_1 = resultInRGB_1.substring(\r\n                0,\r\n                resultInRGB_1.length - 2\r\n            );\r\n            resultInRGB_1 += \")\";\r\n            return {isRaw: true, color: resultInRGB_1};\r\n        }\r\n        return {isRaw: false, color: color};\r\n    }\r\n    function handleRawValue(color, theme, modifyFunction) {\r\n        var _a = parseRawValue(color),\r\n            isRaw = _a.isRaw,\r\n            newColor = _a.color;\r\n        var rgb = parseColorWithCache(newColor);\r\n        if (rgb) {\r\n            var outputColor = modifyFunction(rgb, theme);\r\n            if (isRaw) {\r\n                var outputInRGB = parseColorWithCache(outputColor);\r\n                return outputInRGB\r\n                    ? \"\"\r\n                          .concat(outputInRGB.r, \", \")\r\n                          .concat(outputInRGB.g, \", \")\r\n                          .concat(outputInRGB.b)\r\n                    : outputColor;\r\n            }\r\n            return outputColor;\r\n        }\r\n        return newColor;\r\n    }\r\n    function tryModifyBgColor(color, theme) {\r\n        return handleRawValue(color, theme, modifyBackgroundColor);\r\n    }\r\n    function tryModifyTextColor(color, theme) {\r\n        return handleRawValue(color, theme, modifyForegroundColor);\r\n    }\r\n    function tryModifyBorderColor(color, theme) {\r\n        return handleRawValue(color, theme, modifyBorderColor);\r\n    }\r\n    function insertVarValues(source, varValues, stack) {\r\n        if (stack === void 0) {\r\n            stack = new Set();\r\n        }\r\n        var containsUnresolvedVar = false;\r\n        var matchReplacer = function (match) {\r\n            var _a = getVariableNameAndFallback(match),\r\n                name = _a.name,\r\n                fallback = _a.fallback;\r\n            if (stack.has(name)) {\r\n                containsUnresolvedVar = true;\r\n                return null;\r\n            }\r\n            stack.add(name);\r\n            var varValue = varValues.get(name) || fallback;\r\n            var inserted = null;\r\n            if (varValue) {\r\n                if (isVarDependant(varValue)) {\r\n                    inserted = insertVarValues(varValue, varValues, stack);\r\n                } else {\r\n                    inserted = varValue;\r\n                }\r\n            }\r\n            if (!inserted) {\r\n                containsUnresolvedVar = true;\r\n                return null;\r\n            }\r\n            return inserted;\r\n        };\r\n        var replaced = replaceVariablesMatches(source, matchReplacer);\r\n        if (containsUnresolvedVar) {\r\n            return null;\r\n        }\r\n        return replaced;\r\n    }\r\n\r\n    var overrides$1 = {\r\n        \"background-color\": {\r\n            customProp: \"--darkreader-inline-bgcolor\",\r\n            cssProp: \"background-color\",\r\n            dataAttr: \"data-darkreader-inline-bgcolor\"\r\n        },\r\n        \"background-image\": {\r\n            customProp: \"--darkreader-inline-bgimage\",\r\n            cssProp: \"background-image\",\r\n            dataAttr: \"data-darkreader-inline-bgimage\"\r\n        },\r\n        \"border-color\": {\r\n            customProp: \"--darkreader-inline-border\",\r\n            cssProp: \"border-color\",\r\n            dataAttr: \"data-darkreader-inline-border\"\r\n        },\r\n        \"border-bottom-color\": {\r\n            customProp: \"--darkreader-inline-border-bottom\",\r\n            cssProp: \"border-bottom-color\",\r\n            dataAttr: \"data-darkreader-inline-border-bottom\"\r\n        },\r\n        \"border-left-color\": {\r\n            customProp: \"--darkreader-inline-border-left\",\r\n            cssProp: \"border-left-color\",\r\n            dataAttr: \"data-darkreader-inline-border-left\"\r\n        },\r\n        \"border-right-color\": {\r\n            customProp: \"--darkreader-inline-border-right\",\r\n            cssProp: \"border-right-color\",\r\n            dataAttr: \"data-darkreader-inline-border-right\"\r\n        },\r\n        \"border-top-color\": {\r\n            customProp: \"--darkreader-inline-border-top\",\r\n            cssProp: \"border-top-color\",\r\n            dataAttr: \"data-darkreader-inline-border-top\"\r\n        },\r\n        \"box-shadow\": {\r\n            customProp: \"--darkreader-inline-boxshadow\",\r\n            cssProp: \"box-shadow\",\r\n            dataAttr: \"data-darkreader-inline-boxshadow\"\r\n        },\r\n        \"color\": {\r\n            customProp: \"--darkreader-inline-color\",\r\n            cssProp: \"color\",\r\n            dataAttr: \"data-darkreader-inline-color\"\r\n        },\r\n        \"fill\": {\r\n            customProp: \"--darkreader-inline-fill\",\r\n            cssProp: \"fill\",\r\n            dataAttr: \"data-darkreader-inline-fill\"\r\n        },\r\n        \"stroke\": {\r\n            customProp: \"--darkreader-inline-stroke\",\r\n            cssProp: \"stroke\",\r\n            dataAttr: \"data-darkreader-inline-stroke\"\r\n        },\r\n        \"outline-color\": {\r\n            customProp: \"--darkreader-inline-outline\",\r\n            cssProp: \"outline-color\",\r\n            dataAttr: \"data-darkreader-inline-outline\"\r\n        },\r\n        \"stop-color\": {\r\n            customProp: \"--darkreader-inline-stopcolor\",\r\n            cssProp: \"stop-color\",\r\n            dataAttr: \"data-darkreader-inline-stopcolor\"\r\n        }\r\n    };\r\n    var shorthandOverrides = {\r\n        background: {\r\n            customProp: \"--darkreader-inline-bg\",\r\n            cssProp: \"background\",\r\n            dataAttr: \"data-darkreader-inline-bg\"\r\n        }\r\n    };\r\n    var overridesList = Object.values(overrides$1);\r\n    var normalizedPropList = {};\r\n    overridesList.forEach(function (_a) {\r\n        var cssProp = _a.cssProp,\r\n            customProp = _a.customProp;\r\n        return (normalizedPropList[customProp] = cssProp);\r\n    });\r\n    var INLINE_STYLE_ATTRS = [\r\n        \"style\",\r\n        \"fill\",\r\n        \"stop-color\",\r\n        \"stroke\",\r\n        \"bgcolor\",\r\n        \"color\"\r\n    ];\r\n    var INLINE_STYLE_SELECTOR = INLINE_STYLE_ATTRS.map(function (attr) {\r\n        return \"[\".concat(attr, \"]\");\r\n    }).join(\", \");\r\n    function getInlineOverrideStyle() {\r\n        var allOverrides = overridesList.concat(\r\n            Object.values(shorthandOverrides)\r\n        );\r\n        return allOverrides\r\n            .map(function (_a) {\r\n                var dataAttr = _a.dataAttr,\r\n                    customProp = _a.customProp,\r\n                    cssProp = _a.cssProp;\r\n                return [\r\n                    \"[\".concat(dataAttr, \"] {\"),\r\n                    \"  \"\r\n                        .concat(cssProp, \": var(\")\r\n                        .concat(customProp, \") !important;\"),\r\n                    \"}\"\r\n                ].join(\"\\n\");\r\n            })\r\n            .join(\"\\n\");\r\n    }\r\n    function getInlineStyleElements(root) {\r\n        var results = [];\r\n        if (root instanceof Element && root.matches(INLINE_STYLE_SELECTOR)) {\r\n            results.push(root);\r\n        }\r\n        if (\r\n            root instanceof Element ||\r\n            (isShadowDomSupported && root instanceof ShadowRoot) ||\r\n            root instanceof Document\r\n        ) {\r\n            push(results, root.querySelectorAll(INLINE_STYLE_SELECTOR));\r\n        }\r\n        return results;\r\n    }\r\n    var treeObservers = new Map();\r\n    var attrObservers = new Map();\r\n    function watchForInlineStyles(elementStyleDidChange, shadowRootDiscovered) {\r\n        deepWatchForInlineStyles(\r\n            document,\r\n            elementStyleDidChange,\r\n            shadowRootDiscovered\r\n        );\r\n        iterateShadowHosts(document.documentElement, function (host) {\r\n            deepWatchForInlineStyles(\r\n                host.shadowRoot,\r\n                elementStyleDidChange,\r\n                shadowRootDiscovered\r\n            );\r\n        });\r\n    }\r\n    function deepWatchForInlineStyles(\r\n        root,\r\n        elementStyleDidChange,\r\n        shadowRootDiscovered\r\n    ) {\r\n        if (treeObservers.has(root)) {\r\n            treeObservers.get(root).disconnect();\r\n            attrObservers.get(root).disconnect();\r\n        }\r\n        var discoveredNodes = new WeakSet();\r\n        function discoverNodes(node) {\r\n            getInlineStyleElements(node).forEach(function (el) {\r\n                if (discoveredNodes.has(el)) {\r\n                    return;\r\n                }\r\n                discoveredNodes.add(el);\r\n                elementStyleDidChange(el);\r\n            });\r\n            iterateShadowHosts(node, function (n) {\r\n                if (discoveredNodes.has(node)) {\r\n                    return;\r\n                }\r\n                discoveredNodes.add(node);\r\n                shadowRootDiscovered(n.shadowRoot);\r\n                deepWatchForInlineStyles(\r\n                    n.shadowRoot,\r\n                    elementStyleDidChange,\r\n                    shadowRootDiscovered\r\n                );\r\n            });\r\n            variablesStore.matchVariablesAndDependents();\r\n        }\r\n        var treeObserver = createOptimizedTreeObserver(root, {\r\n            onMinorMutations: function (_a) {\r\n                var additions = _a.additions;\r\n                additions.forEach(function (added) {\r\n                    return discoverNodes(added);\r\n                });\r\n            },\r\n            onHugeMutations: function () {\r\n                discoverNodes(root);\r\n            }\r\n        });\r\n        treeObservers.set(root, treeObserver);\r\n        var attemptCount = 0;\r\n        var start = null;\r\n        var ATTEMPTS_INTERVAL = getDuration({seconds: 10});\r\n        var RETRY_TIMEOUT = getDuration({seconds: 2});\r\n        var MAX_ATTEMPTS_COUNT = 50;\r\n        var cache = [];\r\n        var timeoutId = null;\r\n        var handleAttributeMutations = throttle(function (mutations) {\r\n            var handledTargets = new Set();\r\n            mutations.forEach(function (m) {\r\n                var target = m.target;\r\n                if (handledTargets.has(target)) {\r\n                    return;\r\n                }\r\n                if (INLINE_STYLE_ATTRS.includes(m.attributeName)) {\r\n                    handledTargets.add(target);\r\n                    elementStyleDidChange(target);\r\n                }\r\n            });\r\n            variablesStore.matchVariablesAndDependents();\r\n        });\r\n        var attrObserver = new MutationObserver(function (mutations) {\r\n            if (timeoutId) {\r\n                cache.push.apply(\r\n                    cache,\r\n                    __spreadArray([], __read(mutations), false)\r\n                );\r\n                return;\r\n            }\r\n            attemptCount++;\r\n            var now = Date.now();\r\n            if (start == null) {\r\n                start = now;\r\n            } else if (attemptCount >= MAX_ATTEMPTS_COUNT) {\r\n                if (now - start < ATTEMPTS_INTERVAL) {\r\n                    timeoutId = setTimeout(function () {\r\n                        start = null;\r\n                        attemptCount = 0;\r\n                        timeoutId = null;\r\n                        var attributeCache = cache;\r\n                        cache = [];\r\n                        handleAttributeMutations(attributeCache);\r\n                    }, RETRY_TIMEOUT);\r\n                    cache.push.apply(\r\n                        cache,\r\n                        __spreadArray([], __read(mutations), false)\r\n                    );\r\n                    return;\r\n                }\r\n                start = now;\r\n                attemptCount = 1;\r\n            }\r\n            handleAttributeMutations(mutations);\r\n        });\r\n        attrObserver.observe(root, {\r\n            attributes: true,\r\n            attributeFilter: INLINE_STYLE_ATTRS.concat(\r\n                overridesList.map(function (_a) {\r\n                    var dataAttr = _a.dataAttr;\r\n                    return dataAttr;\r\n                })\r\n            ),\r\n            subtree: true\r\n        });\r\n        attrObservers.set(root, attrObserver);\r\n    }\r\n    function stopWatchingForInlineStyles() {\r\n        treeObservers.forEach(function (o) {\r\n            return o.disconnect();\r\n        });\r\n        attrObservers.forEach(function (o) {\r\n            return o.disconnect();\r\n        });\r\n        treeObservers.clear();\r\n        attrObservers.clear();\r\n    }\r\n    var inlineStyleCache = new WeakMap();\r\n    var filterProps = [\"brightness\", \"contrast\", \"grayscale\", \"sepia\", \"mode\"];\r\n    function getInlineStyleCacheKey(el, theme) {\r\n        return INLINE_STYLE_ATTRS.map(function (attr) {\r\n            return \"\".concat(attr, '=\"').concat(el.getAttribute(attr), '\"');\r\n        })\r\n            .concat(\r\n                filterProps.map(function (prop) {\r\n                    return \"\".concat(prop, '=\"').concat(theme[prop], '\"');\r\n                })\r\n            )\r\n            .join(\" \");\r\n    }\r\n    function shouldIgnoreInlineStyle(element, selectors) {\r\n        for (var i = 0, len = selectors.length; i < len; i++) {\r\n            var ingnoredSelector = selectors[i];\r\n            if (element.matches(ingnoredSelector)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    function overrideInlineStyle(\r\n        element,\r\n        theme,\r\n        ignoreInlineSelectors,\r\n        ignoreImageSelectors\r\n    ) {\r\n        var _a;\r\n        var cacheKey = getInlineStyleCacheKey(element, theme);\r\n        if (cacheKey === inlineStyleCache.get(element)) {\r\n            return;\r\n        }\r\n        var unsetProps = new Set(Object.keys(overrides$1));\r\n        function setCustomProp(targetCSSProp, modifierCSSProp, cssVal) {\r\n            var mod = getModifiableCSSDeclaration(\r\n                modifierCSSProp,\r\n                cssVal,\r\n                {style: element.style},\r\n                variablesStore,\r\n                ignoreImageSelectors,\r\n                null\r\n            );\r\n            if (!mod) {\r\n                return;\r\n            }\r\n            function setStaticValue(value) {\r\n                var _a;\r\n                var _b =\r\n                        (_a = overrides$1[targetCSSProp]) !== null &&\r\n                        _a !== void 0\r\n                            ? _a\r\n                            : shorthandOverrides[targetCSSProp],\r\n                    customProp = _b.customProp,\r\n                    dataAttr = _b.dataAttr;\r\n                element.style.setProperty(customProp, value);\r\n                if (!element.hasAttribute(dataAttr)) {\r\n                    element.setAttribute(dataAttr, \"\");\r\n                }\r\n                unsetProps.delete(targetCSSProp);\r\n            }\r\n            function setVarDeclaration(mod) {\r\n                var prevDeclarations = [];\r\n                function setProps(declarations) {\r\n                    prevDeclarations.forEach(function (_a) {\r\n                        var property = _a.property;\r\n                        element.style.removeProperty(property);\r\n                    });\r\n                    declarations.forEach(function (_a) {\r\n                        var property = _a.property,\r\n                            value = _a.value;\r\n                        if (!(value instanceof Promise)) {\r\n                            element.style.setProperty(property, value);\r\n                        }\r\n                    });\r\n                    prevDeclarations = declarations;\r\n                }\r\n                setProps(mod.declarations);\r\n                mod.onTypeChange.addListener(setProps);\r\n            }\r\n            function setAsyncValue(promise) {\r\n                promise.then(function (value) {\r\n                    if (\r\n                        value &&\r\n                        targetCSSProp === \"background\" &&\r\n                        value.startsWith(\"var(--darkreader-bg--\")\r\n                    ) {\r\n                        setStaticValue(value);\r\n                    }\r\n                });\r\n            }\r\n            var value =\r\n                typeof mod.value === \"function\" ? mod.value(theme) : mod.value;\r\n            if (typeof value === \"string\") {\r\n                setStaticValue(value);\r\n            } else if (value instanceof Promise) {\r\n                setAsyncValue(value);\r\n            } else if (typeof value === \"object\") {\r\n                setVarDeclaration(value);\r\n            }\r\n        }\r\n        if (ignoreInlineSelectors.length > 0) {\r\n            if (shouldIgnoreInlineStyle(element, ignoreInlineSelectors)) {\r\n                unsetProps.forEach(function (cssProp) {\r\n                    element.removeAttribute(overrides$1[cssProp].dataAttr);\r\n                });\r\n                return;\r\n            }\r\n        }\r\n        if (element.hasAttribute(\"bgcolor\")) {\r\n            var value = element.getAttribute(\"bgcolor\");\r\n            if (\r\n                value.match(/^[0-9a-f]{3}$/i) ||\r\n                value.match(/^[0-9a-f]{6}$/i)\r\n            ) {\r\n                value = \"#\".concat(value);\r\n            }\r\n            setCustomProp(\"background-color\", \"background-color\", value);\r\n        }\r\n        if (element.hasAttribute(\"color\") && element.rel !== \"mask-icon\") {\r\n            var value = element.getAttribute(\"color\");\r\n            if (\r\n                value.match(/^[0-9a-f]{3}$/i) ||\r\n                value.match(/^[0-9a-f]{6}$/i)\r\n            ) {\r\n                value = \"#\".concat(value);\r\n            }\r\n            setCustomProp(\"color\", \"color\", value);\r\n        }\r\n        if (element instanceof SVGElement) {\r\n            if (element.hasAttribute(\"fill\")) {\r\n                var SMALL_SVG_LIMIT_1 = 32;\r\n                var value_1 = element.getAttribute(\"fill\");\r\n                if (value_1 !== \"none\") {\r\n                    if (!(element instanceof SVGTextElement)) {\r\n                        var handleSVGElement = function () {\r\n                            var _a = element.getBoundingClientRect(),\r\n                                width = _a.width,\r\n                                height = _a.height;\r\n                            var isBg =\r\n                                width > SMALL_SVG_LIMIT_1 ||\r\n                                height > SMALL_SVG_LIMIT_1;\r\n                            setCustomProp(\r\n                                \"fill\",\r\n                                isBg ? \"background-color\" : \"color\",\r\n                                value_1\r\n                            );\r\n                        };\r\n                        if (isReadyStateComplete()) {\r\n                            handleSVGElement();\r\n                        } else {\r\n                            addReadyStateCompleteListener(handleSVGElement);\r\n                        }\r\n                    } else {\r\n                        setCustomProp(\"fill\", \"color\", value_1);\r\n                    }\r\n                }\r\n            }\r\n            if (element.hasAttribute(\"stop-color\")) {\r\n                setCustomProp(\r\n                    \"stop-color\",\r\n                    \"background-color\",\r\n                    element.getAttribute(\"stop-color\")\r\n                );\r\n            }\r\n        }\r\n        if (element.hasAttribute(\"stroke\")) {\r\n            var value = element.getAttribute(\"stroke\");\r\n            setCustomProp(\r\n                \"stroke\",\r\n                element instanceof SVGLineElement ||\r\n                    element instanceof SVGTextElement\r\n                    ? \"border-color\"\r\n                    : \"color\",\r\n                value\r\n            );\r\n        }\r\n        element.style &&\r\n            iterateCSSDeclarations(element.style, function (property, value) {\r\n                if (property === \"background-image\" && value.includes(\"url\")) {\r\n                    return;\r\n                }\r\n                if (\r\n                    overrides$1.hasOwnProperty(property) ||\r\n                    (property.startsWith(\"--\") && !normalizedPropList[property])\r\n                ) {\r\n                    setCustomProp(property, property, value);\r\n                } else if (\r\n                    property === \"background\" &&\r\n                    value.includes(\"var(\")\r\n                ) {\r\n                    setCustomProp(\"background\", \"background\", value);\r\n                } else {\r\n                    var overriddenProp = normalizedPropList[property];\r\n                    if (\r\n                        overriddenProp &&\r\n                        !element.style.getPropertyValue(overriddenProp) &&\r\n                        !element.hasAttribute(overriddenProp)\r\n                    ) {\r\n                        if (\r\n                            overriddenProp === \"background-color\" &&\r\n                            element.hasAttribute(\"bgcolor\")\r\n                        ) {\r\n                            return;\r\n                        }\r\n                        element.style.setProperty(property, \"\");\r\n                    }\r\n                }\r\n            });\r\n        if (\r\n            element.style &&\r\n            element instanceof SVGTextElement &&\r\n            element.style.fill\r\n        ) {\r\n            setCustomProp(\r\n                \"fill\",\r\n                \"color\",\r\n                element.style.getPropertyValue(\"fill\")\r\n            );\r\n        }\r\n        if (\r\n            (_a = element.getAttribute(\"style\")) === null || _a === void 0\r\n                ? void 0\r\n                : _a.includes(\"--\")\r\n        ) {\r\n            variablesStore.addInlineStyleForMatching(element.style);\r\n        }\r\n        forEach(unsetProps, function (cssProp) {\r\n            element.removeAttribute(overrides$1[cssProp].dataAttr);\r\n        });\r\n        inlineStyleCache.set(element, getInlineStyleCacheKey(element, theme));\r\n    }\r\n\r\n    var metaThemeColorName = \"theme-color\";\r\n    var metaThemeColorSelector = 'meta[name=\"'.concat(metaThemeColorName, '\"]');\r\n    var srcMetaThemeColor = null;\r\n    var observer = null;\r\n    function changeMetaThemeColor(meta, theme) {\r\n        srcMetaThemeColor = srcMetaThemeColor || meta.content;\r\n        var color = parseColorWithCache(srcMetaThemeColor);\r\n        if (!color) {\r\n            return;\r\n        }\r\n        meta.content = modifyBackgroundColor(color, theme);\r\n    }\r\n    function changeMetaThemeColorWhenAvailable(theme) {\r\n        var meta = document.querySelector(metaThemeColorSelector);\r\n        if (meta) {\r\n            changeMetaThemeColor(meta, theme);\r\n        } else {\r\n            if (observer) {\r\n                observer.disconnect();\r\n            }\r\n            observer = new MutationObserver(function (mutations) {\r\n                loop: for (var i = 0; i < mutations.length; i++) {\r\n                    var addedNodes = mutations[i].addedNodes;\r\n                    for (var j = 0; j < addedNodes.length; j++) {\r\n                        var node = addedNodes[j];\r\n                        if (\r\n                            node instanceof HTMLMetaElement &&\r\n                            node.name === metaThemeColorName\r\n                        ) {\r\n                            observer.disconnect();\r\n                            observer = null;\r\n                            changeMetaThemeColor(node, theme);\r\n                            break loop;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            observer.observe(document.head, {childList: true});\r\n        }\r\n    }\r\n    function restoreMetaThemeColor() {\r\n        if (observer) {\r\n            observer.disconnect();\r\n            observer = null;\r\n        }\r\n        var meta = document.querySelector(metaThemeColorSelector);\r\n        if (meta && srcMetaThemeColor) {\r\n            meta.content = srcMetaThemeColor;\r\n        }\r\n    }\r\n\r\n    var themeCacheKeys = [\r\n        \"mode\",\r\n        \"brightness\",\r\n        \"contrast\",\r\n        \"grayscale\",\r\n        \"sepia\",\r\n        \"darkSchemeBackgroundColor\",\r\n        \"darkSchemeTextColor\",\r\n        \"lightSchemeBackgroundColor\",\r\n        \"lightSchemeTextColor\"\r\n    ];\r\n    function getThemeKey(theme) {\r\n        var resultKey = \"\";\r\n        themeCacheKeys.forEach(function (key) {\r\n            resultKey += \"\".concat(key, \":\").concat(theme[key], \";\");\r\n        });\r\n        return resultKey;\r\n    }\r\n    var asyncQueue = createAsyncTasksQueue();\r\n    function createStyleSheetModifier() {\r\n        var renderId = 0;\r\n        var rulesTextCache = new Set();\r\n        var rulesModCache = new Map();\r\n        var varTypeChangeCleaners = new Set();\r\n        var prevFilterKey = null;\r\n        var hasNonLoadedLink = false;\r\n        var wasRebuilt = false;\r\n        function shouldRebuildStyle() {\r\n            return hasNonLoadedLink && !wasRebuilt;\r\n        }\r\n        function modifySheet(options) {\r\n            var rules = options.sourceCSSRules;\r\n            var theme = options.theme,\r\n                ignoreImageAnalysis = options.ignoreImageAnalysis,\r\n                force = options.force,\r\n                prepareSheet = options.prepareSheet,\r\n                isAsyncCancelled = options.isAsyncCancelled;\r\n            var rulesChanged = rulesModCache.size === 0;\r\n            var notFoundCacheKeys = new Set(rulesModCache.keys());\r\n            var themeKey = getThemeKey(theme);\r\n            var themeChanged = themeKey !== prevFilterKey;\r\n            if (hasNonLoadedLink) {\r\n                wasRebuilt = true;\r\n            }\r\n            var modRules = [];\r\n            iterateCSSRules(\r\n                rules,\r\n                function (rule) {\r\n                    var cssText = rule.cssText;\r\n                    var textDiffersFromPrev = false;\r\n                    notFoundCacheKeys.delete(cssText);\r\n                    if (rule.parentRule instanceof CSSMediaRule) {\r\n                        cssText += \";\".concat(rule.parentRule.media.mediaText);\r\n                    }\r\n                    if (!rulesTextCache.has(cssText)) {\r\n                        rulesTextCache.add(cssText);\r\n                        textDiffersFromPrev = true;\r\n                    }\r\n                    if (textDiffersFromPrev) {\r\n                        rulesChanged = true;\r\n                    } else {\r\n                        modRules.push(rulesModCache.get(cssText));\r\n                        return;\r\n                    }\r\n                    if (rule.style.all === \"revert\") {\r\n                        return;\r\n                    }\r\n                    var modDecs = [];\r\n                    rule.style &&\r\n                        iterateCSSDeclarations(\r\n                            rule.style,\r\n                            function (property, value) {\r\n                                var mod = getModifiableCSSDeclaration(\r\n                                    property,\r\n                                    value,\r\n                                    rule,\r\n                                    variablesStore,\r\n                                    ignoreImageAnalysis,\r\n                                    isAsyncCancelled\r\n                                );\r\n                                if (mod) {\r\n                                    modDecs.push(mod);\r\n                                }\r\n                            }\r\n                        );\r\n                    var modRule = null;\r\n                    if (modDecs.length > 0) {\r\n                        var parentRule = rule.parentRule;\r\n                        modRule = {\r\n                            selector: rule.selectorText,\r\n                            declarations: modDecs,\r\n                            parentRule: parentRule\r\n                        };\r\n                        modRules.push(modRule);\r\n                    }\r\n                    rulesModCache.set(cssText, modRule);\r\n                },\r\n                function () {\r\n                    hasNonLoadedLink = true;\r\n                }\r\n            );\r\n            notFoundCacheKeys.forEach(function (key) {\r\n                rulesTextCache.delete(key);\r\n                rulesModCache.delete(key);\r\n            });\r\n            prevFilterKey = themeKey;\r\n            if (!force && !rulesChanged && !themeChanged) {\r\n                return;\r\n            }\r\n            renderId++;\r\n            function setRule(target, index, rule) {\r\n                var e_1, _a;\r\n                var selector = rule.selector,\r\n                    declarations = rule.declarations;\r\n                var selectorText = selector;\r\n                if (\r\n                    isChromium &&\r\n                    selector.startsWith(\":is(\") &&\r\n                    (selector.includes(\":is()\") ||\r\n                        selector.includes(\":where()\") ||\r\n                        (selector.includes(\":where(\") &&\r\n                            selector.includes(\":-moz\")))\r\n                ) {\r\n                    selectorText = \".darkreader-unsupported-selector\";\r\n                }\r\n                var ruleText = \"\".concat(selectorText, \" {\");\r\n                try {\r\n                    for (\r\n                        var declarations_1 = __values(declarations),\r\n                            declarations_1_1 = declarations_1.next();\r\n                        !declarations_1_1.done;\r\n                        declarations_1_1 = declarations_1.next()\r\n                    ) {\r\n                        var dec = declarations_1_1.value;\r\n                        var property = dec.property,\r\n                            value = dec.value,\r\n                            important = dec.important;\r\n                        if (value) {\r\n                            ruleText += \" \"\r\n                                .concat(property, \": \")\r\n                                .concat(value)\r\n                                .concat(important ? \" !important\" : \"\", \";\");\r\n                        }\r\n                    }\r\n                } catch (e_1_1) {\r\n                    e_1 = {error: e_1_1};\r\n                } finally {\r\n                    try {\r\n                        if (\r\n                            declarations_1_1 &&\r\n                            !declarations_1_1.done &&\r\n                            (_a = declarations_1.return)\r\n                        )\r\n                            _a.call(declarations_1);\r\n                    } finally {\r\n                        if (e_1) throw e_1.error;\r\n                    }\r\n                }\r\n                ruleText += \" }\";\r\n                target.insertRule(ruleText, index);\r\n            }\r\n            var asyncDeclarations = new Map();\r\n            var varDeclarations = new Map();\r\n            var asyncDeclarationCounter = 0;\r\n            var varDeclarationCounter = 0;\r\n            var rootReadyGroup = {rule: null, rules: [], isGroup: true};\r\n            var groupRefs = new WeakMap();\r\n            function getGroup(rule) {\r\n                if (rule == null) {\r\n                    return rootReadyGroup;\r\n                }\r\n                if (groupRefs.has(rule)) {\r\n                    return groupRefs.get(rule);\r\n                }\r\n                var group = {rule: rule, rules: [], isGroup: true};\r\n                groupRefs.set(rule, group);\r\n                var parentGroup = getGroup(rule.parentRule);\r\n                parentGroup.rules.push(group);\r\n                return group;\r\n            }\r\n            varTypeChangeCleaners.forEach(function (clear) {\r\n                return clear();\r\n            });\r\n            varTypeChangeCleaners.clear();\r\n            modRules\r\n                .filter(function (r) {\r\n                    return r;\r\n                })\r\n                .forEach(function (_a) {\r\n                    var selector = _a.selector,\r\n                        declarations = _a.declarations,\r\n                        parentRule = _a.parentRule;\r\n                    var group = getGroup(parentRule);\r\n                    var readyStyleRule = {\r\n                        selector: selector,\r\n                        declarations: [],\r\n                        isGroup: false\r\n                    };\r\n                    var readyDeclarations = readyStyleRule.declarations;\r\n                    group.rules.push(readyStyleRule);\r\n                    function handleAsyncDeclaration(\r\n                        property,\r\n                        modified,\r\n                        important,\r\n                        sourceValue\r\n                    ) {\r\n                        var asyncKey = ++asyncDeclarationCounter;\r\n                        var asyncDeclaration = {\r\n                            property: property,\r\n                            value: null,\r\n                            important: important,\r\n                            asyncKey: asyncKey,\r\n                            sourceValue: sourceValue\r\n                        };\r\n                        readyDeclarations.push(asyncDeclaration);\r\n                        var currentRenderId = renderId;\r\n                        modified.then(function (asyncValue) {\r\n                            if (\r\n                                !asyncValue ||\r\n                                isAsyncCancelled() ||\r\n                                currentRenderId !== renderId\r\n                            ) {\r\n                                return;\r\n                            }\r\n                            asyncDeclaration.value = asyncValue;\r\n                            asyncQueue.add(function () {\r\n                                if (\r\n                                    isAsyncCancelled() ||\r\n                                    currentRenderId !== renderId\r\n                                ) {\r\n                                    return;\r\n                                }\r\n                                rebuildAsyncRule(asyncKey);\r\n                            });\r\n                        });\r\n                    }\r\n                    function handleVarDeclarations(\r\n                        property,\r\n                        modified,\r\n                        important,\r\n                        sourceValue\r\n                    ) {\r\n                        var varDecs = modified.declarations,\r\n                            onTypeChange = modified.onTypeChange;\r\n                        var varKey = ++varDeclarationCounter;\r\n                        var currentRenderId = renderId;\r\n                        var initialIndex = readyDeclarations.length;\r\n                        var oldDecs = [];\r\n                        if (varDecs.length === 0) {\r\n                            var tempDec = {\r\n                                property: property,\r\n                                value: sourceValue,\r\n                                important: important,\r\n                                sourceValue: sourceValue,\r\n                                varKey: varKey\r\n                            };\r\n                            readyDeclarations.push(tempDec);\r\n                            oldDecs = [tempDec];\r\n                        }\r\n                        varDecs.forEach(function (mod) {\r\n                            if (mod.value instanceof Promise) {\r\n                                handleAsyncDeclaration(\r\n                                    mod.property,\r\n                                    mod.value,\r\n                                    important,\r\n                                    sourceValue\r\n                                );\r\n                            } else {\r\n                                var readyDec = {\r\n                                    property: mod.property,\r\n                                    value: mod.value,\r\n                                    important: important,\r\n                                    sourceValue: sourceValue,\r\n                                    varKey: varKey\r\n                                };\r\n                                readyDeclarations.push(readyDec);\r\n                                oldDecs.push(readyDec);\r\n                            }\r\n                        });\r\n                        onTypeChange.addListener(function (newDecs) {\r\n                            if (\r\n                                isAsyncCancelled() ||\r\n                                currentRenderId !== renderId\r\n                            ) {\r\n                                return;\r\n                            }\r\n                            var readyVarDecs = newDecs.map(function (mod) {\r\n                                return {\r\n                                    property: mod.property,\r\n                                    value: mod.value,\r\n                                    important: important,\r\n                                    sourceValue: sourceValue,\r\n                                    varKey: varKey\r\n                                };\r\n                            });\r\n                            var index = readyDeclarations.indexOf(\r\n                                oldDecs[0],\r\n                                initialIndex\r\n                            );\r\n                            readyDeclarations.splice.apply(\r\n                                readyDeclarations,\r\n                                __spreadArray(\r\n                                    [index, oldDecs.length],\r\n                                    __read(readyVarDecs),\r\n                                    false\r\n                                )\r\n                            );\r\n                            oldDecs = readyVarDecs;\r\n                            rebuildVarRule(varKey);\r\n                        });\r\n                        varTypeChangeCleaners.add(function () {\r\n                            return onTypeChange.removeListeners();\r\n                        });\r\n                    }\r\n                    declarations.forEach(function (_a) {\r\n                        var property = _a.property,\r\n                            value = _a.value,\r\n                            important = _a.important,\r\n                            sourceValue = _a.sourceValue;\r\n                        if (typeof value === \"function\") {\r\n                            var modified = value(theme);\r\n                            if (modified instanceof Promise) {\r\n                                handleAsyncDeclaration(\r\n                                    property,\r\n                                    modified,\r\n                                    important,\r\n                                    sourceValue\r\n                                );\r\n                            } else if (property.startsWith(\"--\")) {\r\n                                handleVarDeclarations(\r\n                                    property,\r\n                                    modified,\r\n                                    important,\r\n                                    sourceValue\r\n                                );\r\n                            } else {\r\n                                readyDeclarations.push({\r\n                                    property: property,\r\n                                    value: modified,\r\n                                    important: important,\r\n                                    sourceValue: sourceValue\r\n                                });\r\n                            }\r\n                        } else {\r\n                            readyDeclarations.push({\r\n                                property: property,\r\n                                value: value,\r\n                                important: important,\r\n                                sourceValue: sourceValue\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n            var sheet = prepareSheet();\r\n            function buildStyleSheet() {\r\n                function createTarget(group, parent) {\r\n                    var rule = group.rule;\r\n                    if (rule instanceof CSSMediaRule) {\r\n                        var media = rule.media;\r\n                        var index = parent.cssRules.length;\r\n                        parent.insertRule(\r\n                            \"@media \".concat(media.mediaText, \" {}\"),\r\n                            index\r\n                        );\r\n                        return parent.cssRules[index];\r\n                    }\r\n                    return parent;\r\n                }\r\n                function iterateReadyRules(group, target, styleIterator) {\r\n                    group.rules.forEach(function (r) {\r\n                        if (r.isGroup) {\r\n                            var t = createTarget(r, target);\r\n                            iterateReadyRules(r, t, styleIterator);\r\n                        } else {\r\n                            styleIterator(r, target);\r\n                        }\r\n                    });\r\n                }\r\n                iterateReadyRules(\r\n                    rootReadyGroup,\r\n                    sheet,\r\n                    function (rule, target) {\r\n                        var index = target.cssRules.length;\r\n                        rule.declarations.forEach(function (_a) {\r\n                            var asyncKey = _a.asyncKey,\r\n                                varKey = _a.varKey;\r\n                            if (asyncKey != null) {\r\n                                asyncDeclarations.set(asyncKey, {\r\n                                    rule: rule,\r\n                                    target: target,\r\n                                    index: index\r\n                                });\r\n                            }\r\n                            if (varKey != null) {\r\n                                varDeclarations.set(varKey, {\r\n                                    rule: rule,\r\n                                    target: target,\r\n                                    index: index\r\n                                });\r\n                            }\r\n                        });\r\n                        setRule(target, index, rule);\r\n                    }\r\n                );\r\n            }\r\n            function rebuildAsyncRule(key) {\r\n                var _a = asyncDeclarations.get(key),\r\n                    rule = _a.rule,\r\n                    target = _a.target,\r\n                    index = _a.index;\r\n                target.deleteRule(index);\r\n                setRule(target, index, rule);\r\n                asyncDeclarations.delete(key);\r\n            }\r\n            function rebuildVarRule(key) {\r\n                var _a = varDeclarations.get(key),\r\n                    rule = _a.rule,\r\n                    target = _a.target,\r\n                    index = _a.index;\r\n                target.deleteRule(index);\r\n                setRule(target, index, rule);\r\n            }\r\n            buildStyleSheet();\r\n        }\r\n        return {\r\n            modifySheet: modifySheet,\r\n            shouldRebuildStyle: shouldRebuildStyle\r\n        };\r\n    }\r\n\r\n    var STYLE_SELECTOR = 'style, link[rel*=\"stylesheet\" i]:not([disabled])';\r\n    function isFontsGoogleApiStyle(element) {\r\n        if (!element.href) {\r\n            return false;\r\n        }\r\n        try {\r\n            var elementURL = new URL(element.href);\r\n            return elementURL.hostname === \"fonts.googleapis.com\";\r\n        } catch (err) {\r\n            logInfo(\"Couldn't construct \".concat(element.href, \" as URL\"));\r\n            return false;\r\n        }\r\n    }\r\n    function shouldManageStyle(element) {\r\n        return (\r\n            (element instanceof HTMLStyleElement ||\r\n                element instanceof SVGStyleElement ||\r\n                (element instanceof HTMLLinkElement &&\r\n                    Boolean(element.rel) &&\r\n                    element.rel.toLowerCase().includes(\"stylesheet\") &&\r\n                    Boolean(element.href) &&\r\n                    !element.disabled &&\r\n                    (isFirefox\r\n                        ? !element.href.startsWith(\"moz-extension://\")\r\n                        : true) &&\r\n                    !isFontsGoogleApiStyle(element))) &&\r\n            !element.classList.contains(\"darkreader\") &&\r\n            element.media.toLowerCase() !== \"print\" &&\r\n            !element.classList.contains(\"stylus\")\r\n        );\r\n    }\r\n    function getManageableStyles(node, results, deep) {\r\n        if (results === void 0) {\r\n            results = [];\r\n        }\r\n        if (deep === void 0) {\r\n            deep = true;\r\n        }\r\n        if (shouldManageStyle(node)) {\r\n            results.push(node);\r\n        } else if (\r\n            node instanceof Element ||\r\n            (isShadowDomSupported && node instanceof ShadowRoot) ||\r\n            node === document\r\n        ) {\r\n            forEach(node.querySelectorAll(STYLE_SELECTOR), function (style) {\r\n                return getManageableStyles(style, results, false);\r\n            });\r\n            if (deep) {\r\n                iterateShadowHosts(node, function (host) {\r\n                    return getManageableStyles(host.shadowRoot, results, false);\r\n                });\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    var syncStyleSet = new WeakSet();\r\n    var corsStyleSet = new WeakSet();\r\n    var canOptimizeUsingProxy$1 = false;\r\n    document.addEventListener(\r\n        \"__darkreader__inlineScriptsAllowed\",\r\n        function () {\r\n            canOptimizeUsingProxy$1 = true;\r\n        },\r\n        {once: true, passive: true}\r\n    );\r\n    var loadingLinkCounter = 0;\r\n    var rejectorsForLoadingLinks = new Map();\r\n    function cleanLoadingLinks() {\r\n        rejectorsForLoadingLinks.clear();\r\n    }\r\n    function manageStyle(element, _a) {\r\n        var update = _a.update,\r\n            loadingStart = _a.loadingStart,\r\n            loadingEnd = _a.loadingEnd;\r\n        var prevStyles = [];\r\n        var next = element;\r\n        while (\r\n            (next = next.nextElementSibling) &&\r\n            next.matches(\".darkreader\")\r\n        ) {\r\n            prevStyles.push(next);\r\n        }\r\n        var corsCopy =\r\n            prevStyles.find(function (el) {\r\n                return el.matches(\".darkreader--cors\") && !corsStyleSet.has(el);\r\n            }) || null;\r\n        var syncStyle =\r\n            prevStyles.find(function (el) {\r\n                return el.matches(\".darkreader--sync\") && !syncStyleSet.has(el);\r\n            }) || null;\r\n        var corsCopyPositionWatcher = null;\r\n        var syncStylePositionWatcher = null;\r\n        var cancelAsyncOperations = false;\r\n        var isOverrideEmpty = true;\r\n        var sheetModifier = createStyleSheetModifier();\r\n        var observer = new MutationObserver(function () {\r\n            update();\r\n        });\r\n        var observerOptions = {\r\n            attributes: true,\r\n            childList: true,\r\n            subtree: true,\r\n            characterData: true\r\n        };\r\n        function containsCSSImport() {\r\n            var _a;\r\n            if (!(element instanceof HTMLStyleElement)) {\r\n                return false;\r\n            }\r\n            var cssText = removeCSSComments(\r\n                (_a = element.textContent) !== null && _a !== void 0 ? _a : \"\"\r\n            ).trim();\r\n            return cssText.match(cssImportRegex);\r\n        }\r\n        function hasImports(cssRules, checkCrossOrigin) {\r\n            var result = false;\r\n            if (cssRules) {\r\n                var rule = void 0;\r\n                cssRulesLoop: for (\r\n                    var i = 0, len = cssRules.length;\r\n                    i < len;\r\n                    i++\r\n                ) {\r\n                    rule = cssRules[i];\r\n                    if (rule.href) {\r\n                        if (checkCrossOrigin) {\r\n                            if (\r\n                                !rule.href.startsWith(\r\n                                    \"https://fonts.googleapis.com/\"\r\n                                ) &&\r\n                                rule.href.startsWith(\"http\") &&\r\n                                !rule.href.startsWith(location.origin)\r\n                            ) {\r\n                                result = true;\r\n                                break cssRulesLoop;\r\n                            }\r\n                        } else {\r\n                            result = true;\r\n                            break cssRulesLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        function getRulesSync() {\r\n            if (corsCopy) {\r\n                return corsCopy.sheet.cssRules;\r\n            }\r\n            if (containsCSSImport()) {\r\n                return null;\r\n            }\r\n            var cssRules = safeGetSheetRules();\r\n            if (\r\n                element instanceof HTMLLinkElement &&\r\n                !isRelativeHrefOnAbsolutePath(element.href) &&\r\n                hasImports(cssRules, false)\r\n            ) {\r\n                return null;\r\n            }\r\n            if (hasImports(cssRules, true)) {\r\n                return null;\r\n            }\r\n            return cssRules;\r\n        }\r\n        function insertStyle() {\r\n            if (corsCopy) {\r\n                if (element.nextSibling !== corsCopy) {\r\n                    element.parentNode.insertBefore(\r\n                        corsCopy,\r\n                        element.nextSibling\r\n                    );\r\n                }\r\n                if (corsCopy.nextSibling !== syncStyle) {\r\n                    element.parentNode.insertBefore(\r\n                        syncStyle,\r\n                        corsCopy.nextSibling\r\n                    );\r\n                }\r\n            } else if (element.nextSibling !== syncStyle) {\r\n                element.parentNode.insertBefore(syncStyle, element.nextSibling);\r\n            }\r\n        }\r\n        function createSyncStyle() {\r\n            syncStyle =\r\n                element instanceof SVGStyleElement\r\n                    ? document.createElementNS(\r\n                          \"http://www.w3.org/2000/svg\",\r\n                          \"style\"\r\n                      )\r\n                    : document.createElement(\"style\");\r\n            syncStyle.classList.add(\"darkreader\");\r\n            syncStyle.classList.add(\"darkreader--sync\");\r\n            syncStyle.media = \"screen\";\r\n            if (element.title) {\r\n                syncStyle.title = element.title;\r\n            }\r\n            syncStyleSet.add(syncStyle);\r\n        }\r\n        var isLoadingRules = false;\r\n        var wasLoadingError = false;\r\n        var loadingLinkId = ++loadingLinkCounter;\r\n        function getRulesAsync() {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var cssText,\r\n                    cssBasePath,\r\n                    _a,\r\n                    cssRules,\r\n                    accessError,\r\n                    fullCSSText;\r\n                var _b;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            if (!(element instanceof HTMLLinkElement))\r\n                                return [3, 7];\r\n                            (_a = __read(getRulesOrError(), 2)),\r\n                                (cssRules = _a[0]),\r\n                                (accessError = _a[1]);\r\n                            if (\r\n                                !(\r\n                                    (isSafari && !element.sheet) ||\r\n                                    (!isSafari && !cssRules && !accessError) ||\r\n                                    isStillLoadingError(accessError)\r\n                                )\r\n                            )\r\n                                return [3, 5];\r\n                            _c.label = 1;\r\n                        case 1:\r\n                            _c.trys.push([1, 3, , 4]);\r\n                            return [4, linkLoading(element, loadingLinkId)];\r\n                        case 2:\r\n                            _c.sent();\r\n                            return [3, 4];\r\n                        case 3:\r\n                            _c.sent();\r\n                            wasLoadingError = true;\r\n                            return [3, 4];\r\n                        case 4:\r\n                            if (cancelAsyncOperations) {\r\n                                return [2, null];\r\n                            }\r\n                            (_b = __read(getRulesOrError(), 2)),\r\n                                (cssRules = _b[0]),\r\n                                (accessError = _b[1]);\r\n                            _c.label = 5;\r\n                        case 5:\r\n                            if (cssRules) {\r\n                                if (!hasImports(cssRules, false)) {\r\n                                    return [2, cssRules];\r\n                                }\r\n                            }\r\n                            return [4, loadText(element.href)];\r\n                        case 6:\r\n                            cssText = _c.sent();\r\n                            cssBasePath = getCSSBaseBath(element.href);\r\n                            if (cancelAsyncOperations) {\r\n                                return [2, null];\r\n                            }\r\n                            return [3, 8];\r\n                        case 7:\r\n                            if (containsCSSImport()) {\r\n                                cssText = element.textContent.trim();\r\n                                cssBasePath = getCSSBaseBath(location.href);\r\n                            } else {\r\n                                return [2, null];\r\n                            }\r\n                            _c.label = 8;\r\n                        case 8:\r\n                            if (!cssText) return [3, 13];\r\n                            _c.label = 9;\r\n                        case 9:\r\n                            _c.trys.push([9, 11, , 12]);\r\n                            return [4, replaceCSSImports(cssText, cssBasePath)];\r\n                        case 10:\r\n                            fullCSSText = _c.sent();\r\n                            corsCopy = createCORSCopy(element, fullCSSText);\r\n                            return [3, 12];\r\n                        case 11:\r\n                            _c.sent();\r\n                            return [3, 12];\r\n                        case 12:\r\n                            if (corsCopy) {\r\n                                corsCopyPositionWatcher = watchForNodePosition(\r\n                                    corsCopy,\r\n                                    \"prev-sibling\"\r\n                                );\r\n                                return [2, corsCopy.sheet.cssRules];\r\n                            }\r\n                            _c.label = 13;\r\n                        case 13:\r\n                            return [2, null];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        function details(options) {\r\n            var rules = getRulesSync();\r\n            if (!rules) {\r\n                if (options.secondRound) {\r\n                    return null;\r\n                }\r\n                if (isLoadingRules || wasLoadingError) {\r\n                    return null;\r\n                }\r\n                isLoadingRules = true;\r\n                loadingStart();\r\n                getRulesAsync()\r\n                    .then(function (results) {\r\n                        isLoadingRules = false;\r\n                        loadingEnd();\r\n                        if (results) {\r\n                            update();\r\n                        }\r\n                    })\r\n                    .catch(function (err) {\r\n                        isLoadingRules = false;\r\n                        loadingEnd();\r\n                    });\r\n                return null;\r\n            }\r\n            return {rules: rules};\r\n        }\r\n        var forceRenderStyle = false;\r\n        function render(theme, ignoreImageAnalysis) {\r\n            var rules = getRulesSync();\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            cancelAsyncOperations = false;\r\n            function removeCSSRulesFromSheet(sheet) {\r\n                if (!sheet) {\r\n                    return;\r\n                }\r\n                for (var i = sheet.cssRules.length - 1; i >= 0; i--) {\r\n                    sheet.deleteRule(i);\r\n                }\r\n            }\r\n            function prepareOverridesSheet() {\r\n                if (!syncStyle) {\r\n                    createSyncStyle();\r\n                }\r\n                syncStylePositionWatcher && syncStylePositionWatcher.stop();\r\n                insertStyle();\r\n                if (syncStyle.sheet == null) {\r\n                    syncStyle.textContent = \"\";\r\n                }\r\n                var sheet = syncStyle.sheet;\r\n                removeCSSRulesFromSheet(sheet);\r\n                if (syncStylePositionWatcher) {\r\n                    syncStylePositionWatcher.run();\r\n                } else {\r\n                    syncStylePositionWatcher = watchForNodePosition(\r\n                        syncStyle,\r\n                        \"prev-sibling\",\r\n                        function () {\r\n                            forceRenderStyle = true;\r\n                            buildOverrides();\r\n                        }\r\n                    );\r\n                }\r\n                return syncStyle.sheet;\r\n            }\r\n            function buildOverrides() {\r\n                var force = forceRenderStyle;\r\n                forceRenderStyle = false;\r\n                sheetModifier.modifySheet({\r\n                    prepareSheet: prepareOverridesSheet,\r\n                    sourceCSSRules: rules,\r\n                    theme: theme,\r\n                    ignoreImageAnalysis: ignoreImageAnalysis,\r\n                    force: force,\r\n                    isAsyncCancelled: function () {\r\n                        return cancelAsyncOperations;\r\n                    }\r\n                });\r\n                isOverrideEmpty = syncStyle.sheet.cssRules.length === 0;\r\n                if (sheetModifier.shouldRebuildStyle()) {\r\n                    addReadyStateCompleteListener(function () {\r\n                        return update();\r\n                    });\r\n                }\r\n            }\r\n            buildOverrides();\r\n        }\r\n        function getRulesOrError() {\r\n            try {\r\n                if (element.sheet == null) {\r\n                    return [null, null];\r\n                }\r\n                return [element.sheet.cssRules, null];\r\n            } catch (err) {\r\n                return [null, err];\r\n            }\r\n        }\r\n        function isStillLoadingError(error) {\r\n            return error && error.message && error.message.includes(\"loading\");\r\n        }\r\n        function safeGetSheetRules() {\r\n            var _a = __read(getRulesOrError(), 2),\r\n                cssRules = _a[0],\r\n                err = _a[1];\r\n            if (err) {\r\n                return null;\r\n            }\r\n            return cssRules;\r\n        }\r\n        function watchForSheetChanges() {\r\n            watchForSheetChangesUsingProxy();\r\n            if (!(canOptimizeUsingProxy$1 && element.sheet)) {\r\n                watchForSheetChangesUsingRAF();\r\n            }\r\n        }\r\n        var rulesChangeKey = null;\r\n        var rulesCheckFrameId = null;\r\n        function getRulesChangeKey() {\r\n            var rules = safeGetSheetRules();\r\n            return rules ? rules.length : null;\r\n        }\r\n        function didRulesKeyChange() {\r\n            return getRulesChangeKey() !== rulesChangeKey;\r\n        }\r\n        function watchForSheetChangesUsingRAF() {\r\n            rulesChangeKey = getRulesChangeKey();\r\n            stopWatchingForSheetChangesUsingRAF();\r\n            var checkForUpdate = function () {\r\n                if (didRulesKeyChange()) {\r\n                    rulesChangeKey = getRulesChangeKey();\r\n                    update();\r\n                }\r\n                if (canOptimizeUsingProxy$1 && element.sheet) {\r\n                    stopWatchingForSheetChangesUsingRAF();\r\n                    return;\r\n                }\r\n                rulesCheckFrameId = requestAnimationFrame(checkForUpdate);\r\n            };\r\n            checkForUpdate();\r\n        }\r\n        function stopWatchingForSheetChangesUsingRAF() {\r\n            cancelAnimationFrame(rulesCheckFrameId);\r\n        }\r\n        var areSheetChangesPending = false;\r\n        function onSheetChange() {\r\n            canOptimizeUsingProxy$1 = true;\r\n            stopWatchingForSheetChangesUsingRAF();\r\n            if (areSheetChangesPending) {\r\n                return;\r\n            }\r\n            function handleSheetChanges() {\r\n                areSheetChangesPending = false;\r\n                if (cancelAsyncOperations) {\r\n                    return;\r\n                }\r\n                update();\r\n            }\r\n            areSheetChangesPending = true;\r\n            if (typeof queueMicrotask === \"function\") {\r\n                queueMicrotask(handleSheetChanges);\r\n            } else {\r\n                requestAnimationFrame(handleSheetChanges);\r\n            }\r\n        }\r\n        function watchForSheetChangesUsingProxy() {\r\n            element.addEventListener(\r\n                \"__darkreader__updateSheet\",\r\n                onSheetChange,\r\n                {passive: true}\r\n            );\r\n        }\r\n        function stopWatchingForSheetChangesUsingProxy() {\r\n            element.removeEventListener(\r\n                \"__darkreader__updateSheet\",\r\n                onSheetChange\r\n            );\r\n        }\r\n        function stopWatchingForSheetChanges() {\r\n            stopWatchingForSheetChangesUsingProxy();\r\n            stopWatchingForSheetChangesUsingRAF();\r\n        }\r\n        function pause() {\r\n            observer.disconnect();\r\n            cancelAsyncOperations = true;\r\n            corsCopyPositionWatcher && corsCopyPositionWatcher.stop();\r\n            syncStylePositionWatcher && syncStylePositionWatcher.stop();\r\n            stopWatchingForSheetChanges();\r\n        }\r\n        function destroy() {\r\n            pause();\r\n            removeNode(corsCopy);\r\n            removeNode(syncStyle);\r\n            loadingEnd();\r\n            if (rejectorsForLoadingLinks.has(loadingLinkId)) {\r\n                var reject = rejectorsForLoadingLinks.get(loadingLinkId);\r\n                rejectorsForLoadingLinks.delete(loadingLinkId);\r\n                reject && reject();\r\n            }\r\n        }\r\n        function watch() {\r\n            observer.observe(element, observerOptions);\r\n            if (element instanceof HTMLStyleElement) {\r\n                watchForSheetChanges();\r\n            }\r\n        }\r\n        var maxMoveCount = 10;\r\n        var moveCount = 0;\r\n        function restore() {\r\n            if (!syncStyle) {\r\n                return;\r\n            }\r\n            moveCount++;\r\n            if (moveCount > maxMoveCount) {\r\n                return;\r\n            }\r\n            insertStyle();\r\n            corsCopyPositionWatcher && corsCopyPositionWatcher.skip();\r\n            syncStylePositionWatcher && syncStylePositionWatcher.skip();\r\n            if (!isOverrideEmpty) {\r\n                forceRenderStyle = true;\r\n                update();\r\n            }\r\n        }\r\n        return {\r\n            details: details,\r\n            render: render,\r\n            pause: pause,\r\n            destroy: destroy,\r\n            watch: watch,\r\n            restore: restore\r\n        };\r\n    }\r\n    function linkLoading(link, loadingId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [\r\n                    2,\r\n                    new Promise(function (resolve, reject) {\r\n                        var cleanUp = function () {\r\n                            link.removeEventListener(\"load\", onLoad);\r\n                            link.removeEventListener(\"error\", onError);\r\n                            rejectorsForLoadingLinks.delete(loadingId);\r\n                        };\r\n                        var onLoad = function () {\r\n                            cleanUp();\r\n                            resolve();\r\n                        };\r\n                        var onError = function () {\r\n                            cleanUp();\r\n                            reject(\r\n                                \"Linkelement \"\r\n                                    .concat(loadingId, \" couldn't be loaded. \")\r\n                                    .concat(link.href)\r\n                            );\r\n                        };\r\n                        rejectorsForLoadingLinks.set(loadingId, function () {\r\n                            cleanUp();\r\n                            reject();\r\n                        });\r\n                        link.addEventListener(\"load\", onLoad, {passive: true});\r\n                        link.addEventListener(\"error\", onError, {\r\n                            passive: true\r\n                        });\r\n                        if (!link.href) {\r\n                            onError();\r\n                        }\r\n                    })\r\n                ];\r\n            });\r\n        });\r\n    }\r\n    function getCSSImportURL(importDeclaration) {\r\n        return getCSSURLValue(\r\n            importDeclaration\r\n                .substring(7)\r\n                .trim()\r\n                .replace(/;$/, \"\")\r\n                .replace(/screen$/, \"\")\r\n        );\r\n    }\r\n    function loadText(url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!url.startsWith(\"data:\")) return [3, 3];\r\n                        return [4, fetch(url)];\r\n                    case 1:\r\n                        return [4, _a.sent().text()];\r\n                    case 2:\r\n                        return [2, _a.sent()];\r\n                    case 3:\r\n                        return [\r\n                            4,\r\n                            bgFetch({\r\n                                url: url,\r\n                                responseType: \"text\",\r\n                                mimeType: \"text/css\",\r\n                                origin: window.location.origin\r\n                            })\r\n                        ];\r\n                    case 4:\r\n                        return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function replaceCSSImports(cssText, basePath, cache) {\r\n        if (cache === void 0) {\r\n            cache = new Map();\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var importMatches,\r\n                importMatches_1,\r\n                importMatches_1_1,\r\n                match,\r\n                importURL,\r\n                absoluteURL,\r\n                importedCSS,\r\n                e_1_1;\r\n            var e_1, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        cssText = removeCSSComments(cssText);\r\n                        cssText = replaceCSSFontFace(cssText);\r\n                        cssText = replaceCSSRelativeURLsWithAbsolute(\r\n                            cssText,\r\n                            basePath\r\n                        );\r\n                        importMatches = getMatches(cssImportRegex, cssText);\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 10, 11, 12]);\r\n                        (importMatches_1 = __values(importMatches)),\r\n                            (importMatches_1_1 = importMatches_1.next());\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        if (!!importMatches_1_1.done) return [3, 9];\r\n                        match = importMatches_1_1.value;\r\n                        importURL = getCSSImportURL(match);\r\n                        absoluteURL = getAbsoluteURL(basePath, importURL);\r\n                        importedCSS = void 0;\r\n                        if (!cache.has(absoluteURL)) return [3, 3];\r\n                        importedCSS = cache.get(absoluteURL);\r\n                        return [3, 7];\r\n                    case 3:\r\n                        _b.trys.push([3, 6, , 7]);\r\n                        return [4, loadText(absoluteURL)];\r\n                    case 4:\r\n                        importedCSS = _b.sent();\r\n                        cache.set(absoluteURL, importedCSS);\r\n                        return [\r\n                            4,\r\n                            replaceCSSImports(\r\n                                importedCSS,\r\n                                getCSSBaseBath(absoluteURL),\r\n                                cache\r\n                            )\r\n                        ];\r\n                    case 5:\r\n                        importedCSS = _b.sent();\r\n                        return [3, 7];\r\n                    case 6:\r\n                        _b.sent();\r\n                        importedCSS = \"\";\r\n                        return [3, 7];\r\n                    case 7:\r\n                        cssText = cssText.split(match).join(importedCSS);\r\n                        _b.label = 8;\r\n                    case 8:\r\n                        importMatches_1_1 = importMatches_1.next();\r\n                        return [3, 2];\r\n                    case 9:\r\n                        return [3, 12];\r\n                    case 10:\r\n                        e_1_1 = _b.sent();\r\n                        e_1 = {error: e_1_1};\r\n                        return [3, 12];\r\n                    case 11:\r\n                        try {\r\n                            if (\r\n                                importMatches_1_1 &&\r\n                                !importMatches_1_1.done &&\r\n                                (_a = importMatches_1.return)\r\n                            )\r\n                                _a.call(importMatches_1);\r\n                        } finally {\r\n                            if (e_1) throw e_1.error;\r\n                        }\r\n                        return [7];\r\n                    case 12:\r\n                        cssText = cssText.trim();\r\n                        return [2, cssText];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    function createCORSCopy(srcElement, cssText) {\r\n        if (!cssText) {\r\n            return null;\r\n        }\r\n        var cors = document.createElement(\"style\");\r\n        cors.classList.add(\"darkreader\");\r\n        cors.classList.add(\"darkreader--cors\");\r\n        cors.media = \"screen\";\r\n        cors.textContent = cssText;\r\n        srcElement.parentNode.insertBefore(cors, srcElement.nextSibling);\r\n        cors.sheet.disabled = true;\r\n        corsStyleSet.add(cors);\r\n        return cors;\r\n    }\r\n\r\n    var observers = [];\r\n    var observedRoots;\r\n    var definedCustomElements = new Set();\r\n    var undefinedGroups = new Map();\r\n    var elementsDefinitionCallback;\r\n    function isCustomElement(element) {\r\n        if (element.tagName.includes(\"-\") || element.getAttribute(\"is\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function recordUndefinedElement(element) {\r\n        var tag = element.tagName.toLowerCase();\r\n        if (!tag.includes(\"-\")) {\r\n            var extendedTag = element.getAttribute(\"is\");\r\n            if (extendedTag) {\r\n                tag = extendedTag;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (!undefinedGroups.has(tag)) {\r\n            undefinedGroups.set(tag, new Set());\r\n            customElementsWhenDefined(tag).then(function () {\r\n                if (elementsDefinitionCallback) {\r\n                    var elements = undefinedGroups.get(tag);\r\n                    undefinedGroups.delete(tag);\r\n                    elementsDefinitionCallback(Array.from(elements));\r\n                }\r\n            });\r\n        }\r\n        undefinedGroups.get(tag).add(element);\r\n    }\r\n    function collectUndefinedElements(root) {\r\n        if (!isDefinedSelectorSupported) {\r\n            return;\r\n        }\r\n        forEach(\r\n            root.querySelectorAll(\":not(:defined)\"),\r\n            recordUndefinedElement\r\n        );\r\n    }\r\n    var canOptimizeUsingProxy = false;\r\n    document.addEventListener(\r\n        \"__darkreader__inlineScriptsAllowed\",\r\n        function () {\r\n            canOptimizeUsingProxy = true;\r\n        },\r\n        {once: true, passive: true}\r\n    );\r\n    var resolvers = new Map();\r\n    function handleIsDefined(e) {\r\n        canOptimizeUsingProxy = true;\r\n        var tag = e.detail.tag;\r\n        definedCustomElements.add(tag);\r\n        if (resolvers.has(tag)) {\r\n            var r = resolvers.get(tag);\r\n            resolvers.delete(tag);\r\n            r.forEach(function (r) {\r\n                return r();\r\n            });\r\n        }\r\n    }\r\n    function customElementsWhenDefined(tag) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (definedCustomElements.has(tag)) {\r\n                    return [2];\r\n                }\r\n                return [\r\n                    2,\r\n                    new Promise(function (resolve) {\r\n                        if (\r\n                            window.customElements &&\r\n                            typeof customElements.whenDefined === \"function\"\r\n                        ) {\r\n                            customElements.whenDefined(tag).then(function () {\r\n                                return resolve();\r\n                            });\r\n                        } else if (canOptimizeUsingProxy) {\r\n                            if (resolvers.has(tag)) {\r\n                                resolvers.get(tag).push(resolve);\r\n                            } else {\r\n                                resolvers.set(tag, [resolve]);\r\n                            }\r\n                            document.dispatchEvent(\r\n                                new CustomEvent(\r\n                                    \"__darkreader__addUndefinedResolver\",\r\n                                    {detail: {tag: tag}}\r\n                                )\r\n                            );\r\n                        } else {\r\n                            var checkIfDefined_1 = function () {\r\n                                var elements = undefinedGroups.get(tag);\r\n                                if (elements && elements.size > 0) {\r\n                                    if (\r\n                                        elements\r\n                                            .values()\r\n                                            .next()\r\n                                            .value.matches(\":defined\")\r\n                                    ) {\r\n                                        resolve();\r\n                                    } else {\r\n                                        requestAnimationFrame(checkIfDefined_1);\r\n                                    }\r\n                                }\r\n                            };\r\n                            requestAnimationFrame(checkIfDefined_1);\r\n                        }\r\n                    })\r\n                ];\r\n            });\r\n        });\r\n    }\r\n    function watchWhenCustomElementsDefined(callback) {\r\n        elementsDefinitionCallback = callback;\r\n    }\r\n    function unsubscribeFromDefineCustomElements() {\r\n        elementsDefinitionCallback = null;\r\n        undefinedGroups.clear();\r\n        document.removeEventListener(\r\n            \"__darkreader__isDefined\",\r\n            handleIsDefined\r\n        );\r\n    }\r\n    function watchForStyleChanges(currentStyles, update, shadowRootDiscovered) {\r\n        stopWatchingForStyleChanges();\r\n        var prevStyles = new Set(currentStyles);\r\n        var prevStyleSiblings = new WeakMap();\r\n        var nextStyleSiblings = new WeakMap();\r\n        function saveStylePosition(style) {\r\n            prevStyleSiblings.set(style, style.previousElementSibling);\r\n            nextStyleSiblings.set(style, style.nextElementSibling);\r\n        }\r\n        function forgetStylePosition(style) {\r\n            prevStyleSiblings.delete(style);\r\n            nextStyleSiblings.delete(style);\r\n        }\r\n        function didStylePositionChange(style) {\r\n            return (\r\n                style.previousElementSibling !== prevStyleSiblings.get(style) ||\r\n                style.nextElementSibling !== nextStyleSiblings.get(style)\r\n            );\r\n        }\r\n        currentStyles.forEach(saveStylePosition);\r\n        function handleStyleOperations(operations) {\r\n            var createdStyles = operations.createdStyles,\r\n                removedStyles = operations.removedStyles,\r\n                movedStyles = operations.movedStyles;\r\n            createdStyles.forEach(function (s) {\r\n                return saveStylePosition(s);\r\n            });\r\n            movedStyles.forEach(function (s) {\r\n                return saveStylePosition(s);\r\n            });\r\n            removedStyles.forEach(function (s) {\r\n                return forgetStylePosition(s);\r\n            });\r\n            createdStyles.forEach(function (s) {\r\n                return prevStyles.add(s);\r\n            });\r\n            removedStyles.forEach(function (s) {\r\n                return prevStyles.delete(s);\r\n            });\r\n            if (\r\n                createdStyles.size + removedStyles.size + movedStyles.size >\r\n                0\r\n            ) {\r\n                update({\r\n                    created: Array.from(createdStyles),\r\n                    removed: Array.from(removedStyles),\r\n                    moved: Array.from(movedStyles),\r\n                    updated: []\r\n                });\r\n            }\r\n        }\r\n        function handleMinorTreeMutations(_a) {\r\n            var additions = _a.additions,\r\n                moves = _a.moves,\r\n                deletions = _a.deletions;\r\n            var createdStyles = new Set();\r\n            var removedStyles = new Set();\r\n            var movedStyles = new Set();\r\n            additions.forEach(function (node) {\r\n                return getManageableStyles(node).forEach(function (style) {\r\n                    return createdStyles.add(style);\r\n                });\r\n            });\r\n            deletions.forEach(function (node) {\r\n                return getManageableStyles(node).forEach(function (style) {\r\n                    return removedStyles.add(style);\r\n                });\r\n            });\r\n            moves.forEach(function (node) {\r\n                return getManageableStyles(node).forEach(function (style) {\r\n                    return movedStyles.add(style);\r\n                });\r\n            });\r\n            handleStyleOperations({\r\n                createdStyles: createdStyles,\r\n                removedStyles: removedStyles,\r\n                movedStyles: movedStyles\r\n            });\r\n            additions.forEach(function (n) {\r\n                extendedIterateShadowHosts(n);\r\n                collectUndefinedElements(n);\r\n            });\r\n            additions.forEach(function (node) {\r\n                return isCustomElement(node) && recordUndefinedElement(node);\r\n            });\r\n        }\r\n        function handleHugeTreeMutations(root) {\r\n            var styles = new Set(getManageableStyles(root));\r\n            var createdStyles = new Set();\r\n            var removedStyles = new Set();\r\n            var movedStyles = new Set();\r\n            styles.forEach(function (s) {\r\n                if (!prevStyles.has(s)) {\r\n                    createdStyles.add(s);\r\n                }\r\n            });\r\n            prevStyles.forEach(function (s) {\r\n                if (!styles.has(s)) {\r\n                    removedStyles.add(s);\r\n                }\r\n            });\r\n            styles.forEach(function (s) {\r\n                if (\r\n                    !createdStyles.has(s) &&\r\n                    !removedStyles.has(s) &&\r\n                    didStylePositionChange(s)\r\n                ) {\r\n                    movedStyles.add(s);\r\n                }\r\n            });\r\n            handleStyleOperations({\r\n                createdStyles: createdStyles,\r\n                removedStyles: removedStyles,\r\n                movedStyles: movedStyles\r\n            });\r\n            extendedIterateShadowHosts(root);\r\n            collectUndefinedElements(root);\r\n        }\r\n        function handleAttributeMutations(mutations) {\r\n            var updatedStyles = new Set();\r\n            var removedStyles = new Set();\r\n            mutations.forEach(function (m) {\r\n                var target = m.target;\r\n                if (target.isConnected) {\r\n                    if (shouldManageStyle(target)) {\r\n                        updatedStyles.add(target);\r\n                    } else if (\r\n                        target instanceof HTMLLinkElement &&\r\n                        target.disabled\r\n                    ) {\r\n                        removedStyles.add(target);\r\n                    }\r\n                }\r\n            });\r\n            if (updatedStyles.size + removedStyles.size > 0) {\r\n                update({\r\n                    updated: Array.from(updatedStyles),\r\n                    created: [],\r\n                    removed: Array.from(removedStyles),\r\n                    moved: []\r\n                });\r\n            }\r\n        }\r\n        function observe(root) {\r\n            if (observedRoots.has(root)) {\r\n                return;\r\n            }\r\n            var treeObserver = createOptimizedTreeObserver(root, {\r\n                onMinorMutations: handleMinorTreeMutations,\r\n                onHugeMutations: handleHugeTreeMutations\r\n            });\r\n            var attrObserver = new MutationObserver(handleAttributeMutations);\r\n            attrObserver.observe(root, {\r\n                attributeFilter: [\"rel\", \"disabled\", \"media\", \"href\"],\r\n                subtree: true\r\n            });\r\n            observers.push(treeObserver, attrObserver);\r\n            observedRoots.add(root);\r\n        }\r\n        function subscribeForShadowRootChanges(node) {\r\n            var shadowRoot = node.shadowRoot;\r\n            if (shadowRoot == null || observedRoots.has(shadowRoot)) {\r\n                return;\r\n            }\r\n            observe(shadowRoot);\r\n            shadowRootDiscovered(shadowRoot);\r\n        }\r\n        function extendedIterateShadowHosts(node) {\r\n            iterateShadowHosts(node, subscribeForShadowRootChanges);\r\n        }\r\n        observe(document);\r\n        extendedIterateShadowHosts(document.documentElement);\r\n        watchWhenCustomElementsDefined(function (hosts) {\r\n            var newStyles = [];\r\n            hosts.forEach(function (host) {\r\n                return push(newStyles, getManageableStyles(host.shadowRoot));\r\n            });\r\n            update({created: newStyles, updated: [], removed: [], moved: []});\r\n            hosts.forEach(function (host) {\r\n                var shadowRoot = host.shadowRoot;\r\n                if (shadowRoot == null) {\r\n                    return;\r\n                }\r\n                subscribeForShadowRootChanges(host);\r\n                extendedIterateShadowHosts(shadowRoot);\r\n                collectUndefinedElements(shadowRoot);\r\n            });\r\n        });\r\n        document.addEventListener(\"__darkreader__isDefined\", handleIsDefined, {\r\n            passive: true\r\n        });\r\n        collectUndefinedElements(document);\r\n    }\r\n    function resetObservers() {\r\n        observers.forEach(function (o) {\r\n            return o.disconnect();\r\n        });\r\n        observers.splice(0, observers.length);\r\n        observedRoots = new WeakSet();\r\n    }\r\n    function stopWatchingForStyleChanges() {\r\n        resetObservers();\r\n        unsubscribeFromDefineCustomElements();\r\n    }\r\n\r\n    var overrides = new WeakSet();\r\n    function hasAdoptedStyleSheets(node) {\r\n        return (\r\n            Array.isArray(node.adoptedStyleSheets) &&\r\n            node.adoptedStyleSheets.length > 0\r\n        );\r\n    }\r\n    function createAdoptedStyleSheetOverride(node) {\r\n        var cancelAsyncOperations = false;\r\n        function iterateSourceSheets(iterator) {\r\n            node.adoptedStyleSheets.forEach(function (sheet) {\r\n                if (!overrides.has(sheet)) {\r\n                    iterator(sheet);\r\n                }\r\n            });\r\n        }\r\n        function injectSheet(sheet, override) {\r\n            var newSheets = __spreadArray(\r\n                [],\r\n                __read(node.adoptedStyleSheets),\r\n                false\r\n            );\r\n            var sheetIndex = newSheets.indexOf(sheet);\r\n            var overrideIndex = newSheets.indexOf(override);\r\n            if (overrideIndex >= 0) {\r\n                newSheets.splice(overrideIndex, 1);\r\n            }\r\n            newSheets.splice(sheetIndex + 1, 0, override);\r\n            node.adoptedStyleSheets = newSheets;\r\n        }\r\n        function clear() {\r\n            var newSheets = __spreadArray(\r\n                [],\r\n                __read(node.adoptedStyleSheets),\r\n                false\r\n            );\r\n            for (var i = newSheets.length - 1; i >= 0; i--) {\r\n                var sheet = newSheets[i];\r\n                if (overrides.has(sheet)) {\r\n                    newSheets.splice(i, 1);\r\n                    overrides.delete(sheet);\r\n                }\r\n            }\r\n            if (node.adoptedStyleSheets.length !== newSheets.length) {\r\n                node.adoptedStyleSheets = newSheets;\r\n            }\r\n        }\r\n        function destroy() {\r\n            cancelAsyncOperations = true;\r\n            clear();\r\n            if (frameId) {\r\n                cancelAnimationFrame(frameId);\r\n                frameId = null;\r\n            }\r\n        }\r\n        var rulesChangeKey = 0;\r\n        function getRulesChangeKey() {\r\n            var count = 0;\r\n            iterateSourceSheets(function (sheet) {\r\n                count += sheet.cssRules.length;\r\n            });\r\n            if (count === 1) {\r\n                var rule = node.adoptedStyleSheets[0].cssRules[0];\r\n                return rule instanceof CSSStyleRule ? rule.style.length : count;\r\n            }\r\n            return count;\r\n        }\r\n        function render(theme, ignoreImageAnalysis) {\r\n            clear();\r\n            var _loop_1 = function (i) {\r\n                var sheet = node.adoptedStyleSheets[i];\r\n                if (overrides.has(sheet)) {\r\n                    return \"continue\";\r\n                }\r\n                var rules = sheet.cssRules;\r\n                var override = new CSSStyleSheet();\r\n                var prepareSheet = function () {\r\n                    for (\r\n                        var i_1 = override.cssRules.length - 1;\r\n                        i_1 >= 0;\r\n                        i_1--\r\n                    ) {\r\n                        override.deleteRule(i_1);\r\n                    }\r\n                    injectSheet(sheet, override);\r\n                    overrides.add(override);\r\n                    return override;\r\n                };\r\n                var sheetModifier = createStyleSheetModifier();\r\n                sheetModifier.modifySheet({\r\n                    prepareSheet: prepareSheet,\r\n                    sourceCSSRules: rules,\r\n                    theme: theme,\r\n                    ignoreImageAnalysis: ignoreImageAnalysis,\r\n                    force: false,\r\n                    isAsyncCancelled: function () {\r\n                        return cancelAsyncOperations;\r\n                    }\r\n                });\r\n            };\r\n            for (var i = node.adoptedStyleSheets.length - 1; i >= 0; i--) {\r\n                _loop_1(i);\r\n            }\r\n            rulesChangeKey = getRulesChangeKey();\r\n        }\r\n        function checkForUpdates() {\r\n            return getRulesChangeKey() !== rulesChangeKey;\r\n        }\r\n        var frameId = null;\r\n        function watch(callback) {\r\n            frameId = requestAnimationFrame(function () {\r\n                if (checkForUpdates()) {\r\n                    var sheets = node.adoptedStyleSheets.filter(function (s) {\r\n                        return !overrides.has(s);\r\n                    });\r\n                    callback(sheets);\r\n                }\r\n                watch(callback);\r\n            });\r\n        }\r\n        return {\r\n            render: render,\r\n            destroy: destroy,\r\n            watch: watch\r\n        };\r\n    }\r\n    var StyleSheetCommandBuilder = (function () {\r\n        function StyleSheetCommandBuilder(onChange) {\r\n            this.cssRules = [];\r\n            this.commands = [];\r\n            this.onChange = onChange;\r\n        }\r\n        StyleSheetCommandBuilder.prototype.insertRule = function (\r\n            cssText,\r\n            index\r\n        ) {\r\n            if (index === void 0) {\r\n                index = 0;\r\n            }\r\n            this.commands.push({\r\n                type: \"insert\",\r\n                index: index,\r\n                cssText: cssText\r\n            });\r\n            this.cssRules.splice(\r\n                index,\r\n                0,\r\n                new StyleSheetCommandBuilder(this.onChange)\r\n            );\r\n            this.onChange();\r\n            return index;\r\n        };\r\n        StyleSheetCommandBuilder.prototype.deleteRule = function (index) {\r\n            this.commands.push({type: \"delete\", index: index});\r\n            this.cssRules.splice(index, 1);\r\n            this.onChange();\r\n        };\r\n        StyleSheetCommandBuilder.prototype.replaceSync = function (cssText) {\r\n            this.commands.splice(0);\r\n            this.commands.push({type: \"replace\", cssText: cssText});\r\n            if (cssText === \"\") {\r\n                this.cssRules.splice(0);\r\n            } else {\r\n                throw new Error(\r\n                    \"StyleSheetCommandBuilder.replaceSync() is not fully supported\"\r\n                );\r\n            }\r\n            this.onChange();\r\n        };\r\n        StyleSheetCommandBuilder.prototype.getDeepCSSCommands = function () {\r\n            var deep = [];\r\n            this.commands.forEach(function (command) {\r\n                deep.push({\r\n                    type: command.type,\r\n                    cssText: command.type !== \"delete\" ? command.cssText : \"\",\r\n                    path: command.type === \"replace\" ? [] : [command.index]\r\n                });\r\n            });\r\n            this.cssRules.forEach(function (rule, i) {\r\n                var childCommands = rule.getDeepCSSCommands();\r\n                childCommands.forEach(function (c) {\r\n                    return c.path.unshift(i);\r\n                });\r\n            });\r\n            return deep;\r\n        };\r\n        StyleSheetCommandBuilder.prototype.clearDeepCSSCommands = function () {\r\n            this.commands.splice(0);\r\n            this.cssRules.forEach(function (rule) {\r\n                return rule.clearDeepCSSCommands();\r\n            });\r\n        };\r\n        return StyleSheetCommandBuilder;\r\n    })();\r\n    function createAdoptedStyleSheetFallback(onChange) {\r\n        var cancelAsyncOperations = false;\r\n        var sourceCSSRules = [];\r\n        var lastTheme;\r\n        var lastIgnoreImageAnalysis;\r\n        function updateCSS(cssRules) {\r\n            sourceCSSRules = cssRules;\r\n            if (lastTheme && lastIgnoreImageAnalysis) {\r\n                render(lastTheme, lastIgnoreImageAnalysis);\r\n            }\r\n        }\r\n        var builder = new StyleSheetCommandBuilder(onChange);\r\n        function render(theme, ignoreImageAnalysis) {\r\n            lastTheme = theme;\r\n            lastIgnoreImageAnalysis = ignoreImageAnalysis;\r\n            var prepareSheet = function () {\r\n                builder.replaceSync(\"\");\r\n                return builder;\r\n            };\r\n            var sheetModifier = createStyleSheetModifier();\r\n            sheetModifier.modifySheet({\r\n                prepareSheet: prepareSheet,\r\n                sourceCSSRules: sourceCSSRules,\r\n                theme: theme,\r\n                ignoreImageAnalysis: ignoreImageAnalysis,\r\n                force: false,\r\n                isAsyncCancelled: function () {\r\n                    return cancelAsyncOperations;\r\n                }\r\n            });\r\n        }\r\n        function commands() {\r\n            var commands = builder.getDeepCSSCommands();\r\n            builder.clearDeepCSSCommands();\r\n            return commands;\r\n        }\r\n        function destroy() {\r\n            cancelAsyncOperations = true;\r\n        }\r\n        return {\r\n            render: render,\r\n            destroy: destroy,\r\n            updateCSS: updateCSS,\r\n            commands: commands\r\n        };\r\n    }\r\n\r\n    function injectProxy(\r\n        enableStyleSheetsProxy,\r\n        enableCustomElementRegistryProxy\r\n    ) {\r\n        document.dispatchEvent(\r\n            new CustomEvent(\"__darkreader__inlineScriptsAllowed\")\r\n        );\r\n        var addRuleDescriptor = Object.getOwnPropertyDescriptor(\r\n            CSSStyleSheet.prototype,\r\n            \"addRule\"\r\n        );\r\n        var insertRuleDescriptor = Object.getOwnPropertyDescriptor(\r\n            CSSStyleSheet.prototype,\r\n            \"insertRule\"\r\n        );\r\n        var deleteRuleDescriptor = Object.getOwnPropertyDescriptor(\r\n            CSSStyleSheet.prototype,\r\n            \"deleteRule\"\r\n        );\r\n        var removeRuleDescriptor = Object.getOwnPropertyDescriptor(\r\n            CSSStyleSheet.prototype,\r\n            \"removeRule\"\r\n        );\r\n        var replaceDescriptor = Object.getOwnPropertyDescriptor(\r\n            CSSStyleSheet.prototype,\r\n            \"replace\"\r\n        );\r\n        var replaceSyncDescriptor = Object.getOwnPropertyDescriptor(\r\n            CSSStyleSheet.prototype,\r\n            \"replaceSync\"\r\n        );\r\n        var documentStyleSheetsDescriptor = enableStyleSheetsProxy\r\n            ? Object.getOwnPropertyDescriptor(Document.prototype, \"styleSheets\")\r\n            : null;\r\n        var customElementRegistryDefineDescriptor =\r\n            enableCustomElementRegistryProxy\r\n                ? Object.getOwnPropertyDescriptor(\r\n                      CustomElementRegistry.prototype,\r\n                      \"define\"\r\n                  )\r\n                : null;\r\n        var shouldWrapHTMLElement = [\r\n            \"baidu.com\",\r\n            \"baike.baidu.com\",\r\n            \"ditu.baidu.com\",\r\n            \"map.baidu.com\",\r\n            \"maps.baidu.com\",\r\n            \"haokan.baidu.com\",\r\n            \"pan.baidu.com\",\r\n            \"passport.baidu.com\",\r\n            \"tieba.baidu.com\",\r\n            \"www.baidu.com\"\r\n        ].includes(location.hostname);\r\n        var getElementsByTagNameDescriptor = shouldWrapHTMLElement\r\n            ? Object.getOwnPropertyDescriptor(\r\n                  Element.prototype,\r\n                  \"getElementsByTagName\"\r\n              )\r\n            : null;\r\n        var shouldProxyChildNodes = location.hostname === \"www.vy.no\";\r\n        var childNodesDescriptor = shouldProxyChildNodes\r\n            ? Object.getOwnPropertyDescriptor(Node.prototype, \"childNodes\")\r\n            : null;\r\n        var cleaners = [];\r\n        var cleanUp = function () {\r\n            Object.defineProperty(\r\n                CSSStyleSheet.prototype,\r\n                \"addRule\",\r\n                addRuleDescriptor\r\n            );\r\n            Object.defineProperty(\r\n                CSSStyleSheet.prototype,\r\n                \"insertRule\",\r\n                insertRuleDescriptor\r\n            );\r\n            Object.defineProperty(\r\n                CSSStyleSheet.prototype,\r\n                \"deleteRule\",\r\n                deleteRuleDescriptor\r\n            );\r\n            Object.defineProperty(\r\n                CSSStyleSheet.prototype,\r\n                \"removeRule\",\r\n                removeRuleDescriptor\r\n            );\r\n            Object.defineProperty(\r\n                CSSStyleSheet.prototype,\r\n                \"replace\",\r\n                replaceDescriptor\r\n            );\r\n            Object.defineProperty(\r\n                CSSStyleSheet.prototype,\r\n                \"replaceSync\",\r\n                replaceSyncDescriptor\r\n            );\r\n            document.removeEventListener(\"__darkreader__cleanUp\", cleanUp);\r\n            document.removeEventListener(\r\n                \"__darkreader__addUndefinedResolver\",\r\n                addUndefinedResolver\r\n            );\r\n            document.removeEventListener(\r\n                \"__darkreader__blobURLCheckRequest\",\r\n                checkBlobURLSupport\r\n            );\r\n            if (enableStyleSheetsProxy) {\r\n                Object.defineProperty(\r\n                    Document.prototype,\r\n                    \"styleSheets\",\r\n                    documentStyleSheetsDescriptor\r\n                );\r\n            }\r\n            if (enableCustomElementRegistryProxy) {\r\n                Object.defineProperty(\r\n                    CustomElementRegistry.prototype,\r\n                    \"define\",\r\n                    customElementRegistryDefineDescriptor\r\n                );\r\n            }\r\n            if (shouldWrapHTMLElement) {\r\n                Object.defineProperty(\r\n                    Element.prototype,\r\n                    \"getElementsByTagName\",\r\n                    getElementsByTagNameDescriptor\r\n                );\r\n            }\r\n            if (shouldProxyChildNodes) {\r\n                Object.defineProperty(\r\n                    Node.prototype,\r\n                    \"childNodes\",\r\n                    childNodesDescriptor\r\n                );\r\n            }\r\n            cleaners.forEach(function (clean) {\r\n                return clean();\r\n            });\r\n            cleaners.splice(0);\r\n        };\r\n        var addUndefinedResolverInner = function (tag) {\r\n            customElements.whenDefined(tag).then(function () {\r\n                document.dispatchEvent(\r\n                    new CustomEvent(\"__darkreader__isDefined\", {\r\n                        detail: {tag: tag}\r\n                    })\r\n                );\r\n            });\r\n        };\r\n        var addUndefinedResolver = function (e) {\r\n            return addUndefinedResolverInner(e.detail.tag);\r\n        };\r\n        document.addEventListener(\"__darkreader__cleanUp\", cleanUp, {\r\n            passive: true\r\n        });\r\n        document.addEventListener(\r\n            \"__darkreader__addUndefinedResolver\",\r\n            addUndefinedResolver,\r\n            {passive: true}\r\n        );\r\n        document.addEventListener(\r\n            \"__darkreader__blobURLCheckRequest\",\r\n            checkBlobURLSupport,\r\n            {once: true}\r\n        );\r\n        var updateSheetEvent = new Event(\"__darkreader__updateSheet\");\r\n        function proxyAddRule(selector, style, index) {\r\n            addRuleDescriptor.value.call(this, selector, style, index);\r\n            if (\r\n                this.ownerNode &&\r\n                !(\r\n                    this.ownerNode.classList &&\r\n                    this.ownerNode.classList.contains(\"darkreader\")\r\n                )\r\n            ) {\r\n                this.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            return -1;\r\n        }\r\n        function proxyInsertRule(rule, index) {\r\n            var returnValue = insertRuleDescriptor.value.call(\r\n                this,\r\n                rule,\r\n                index\r\n            );\r\n            if (\r\n                this.ownerNode &&\r\n                !(\r\n                    this.ownerNode.classList &&\r\n                    this.ownerNode.classList.contains(\"darkreader\")\r\n                )\r\n            ) {\r\n                this.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n            return returnValue;\r\n        }\r\n        function proxyDeleteRule(index) {\r\n            deleteRuleDescriptor.value.call(this, index);\r\n            if (\r\n                this.ownerNode &&\r\n                !(\r\n                    this.ownerNode.classList &&\r\n                    this.ownerNode.classList.contains(\"darkreader\")\r\n                )\r\n            ) {\r\n                this.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n        }\r\n        function proxyRemoveRule(index) {\r\n            removeRuleDescriptor.value.call(this, index);\r\n            if (\r\n                this.ownerNode &&\r\n                !(\r\n                    this.ownerNode.classList &&\r\n                    this.ownerNode.classList.contains(\"darkreader\")\r\n                )\r\n            ) {\r\n                this.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n        }\r\n        function proxyReplace(cssText) {\r\n            var _this = this;\r\n            var returnValue = replaceDescriptor.value.call(this, cssText);\r\n            if (\r\n                this.ownerNode &&\r\n                !(\r\n                    this.ownerNode.classList &&\r\n                    this.ownerNode.classList.contains(\"darkreader\")\r\n                ) &&\r\n                returnValue &&\r\n                returnValue instanceof Promise\r\n            ) {\r\n                returnValue.then(function () {\r\n                    return _this.ownerNode.dispatchEvent(updateSheetEvent);\r\n                });\r\n            }\r\n            return returnValue;\r\n        }\r\n        function proxyReplaceSync(cssText) {\r\n            replaceSyncDescriptor.value.call(this, cssText);\r\n            if (\r\n                this.ownerNode &&\r\n                !(\r\n                    this.ownerNode.classList &&\r\n                    this.ownerNode.classList.contains(\"darkreader\")\r\n                )\r\n            ) {\r\n                this.ownerNode.dispatchEvent(updateSheetEvent);\r\n            }\r\n        }\r\n        function proxyDocumentStyleSheets() {\r\n            var _this = this;\r\n            var getCurrentValue = function () {\r\n                var docSheets = documentStyleSheetsDescriptor.get.call(_this);\r\n                var filteredSheets = __spreadArray(\r\n                    [],\r\n                    __read(docSheets),\r\n                    false\r\n                ).filter(function (styleSheet) {\r\n                    return (\r\n                        styleSheet.ownerNode &&\r\n                        !(\r\n                            styleSheet.ownerNode.classList &&\r\n                            styleSheet.ownerNode.classList.contains(\r\n                                \"darkreader\"\r\n                            )\r\n                        )\r\n                    );\r\n                });\r\n                filteredSheets.item = function (item) {\r\n                    return filteredSheets[item];\r\n                };\r\n                return Object.setPrototypeOf(\r\n                    filteredSheets,\r\n                    StyleSheetList.prototype\r\n                );\r\n            };\r\n            var elements = getCurrentValue();\r\n            var styleSheetListBehavior = {\r\n                get: function (_, property) {\r\n                    return getCurrentValue()[property];\r\n                }\r\n            };\r\n            elements = new Proxy(elements, styleSheetListBehavior);\r\n            return elements;\r\n        }\r\n        function proxyCustomElementRegistryDefine(name, constructor, options) {\r\n            addUndefinedResolverInner(name);\r\n            customElementRegistryDefineDescriptor.value.call(\r\n                this,\r\n                name,\r\n                constructor,\r\n                options\r\n            );\r\n        }\r\n        function proxyGetElementsByTagName(tagName) {\r\n            var _this = this;\r\n            if (tagName !== \"style\") {\r\n                return getElementsByTagNameDescriptor.value.call(this, tagName);\r\n            }\r\n            var getCurrentElementValue = function () {\r\n                var elements = getElementsByTagNameDescriptor.value.call(\r\n                    _this,\r\n                    tagName\r\n                );\r\n                return Object.setPrototypeOf(\r\n                    __spreadArray([], __read(elements), false).filter(\r\n                        function (element) {\r\n                            return (\r\n                                element &&\r\n                                !(\r\n                                    element.classList &&\r\n                                    element.classList.contains(\"darkreader\")\r\n                                )\r\n                            );\r\n                        }\r\n                    ),\r\n                    NodeList.prototype\r\n                );\r\n            };\r\n            var elements = getCurrentElementValue();\r\n            var nodeListBehavior = {\r\n                get: function (_, property) {\r\n                    return getCurrentElementValue()[\r\n                        Number(property) || property\r\n                    ];\r\n                }\r\n            };\r\n            elements = new Proxy(elements, nodeListBehavior);\r\n            return elements;\r\n        }\r\n        function proxyChildNodes() {\r\n            var childNodes = childNodesDescriptor.get.call(this);\r\n            return Object.setPrototypeOf(\r\n                __spreadArray([], __read(childNodes), false).filter(\r\n                    function (element) {\r\n                        return (\r\n                            !element.classList ||\r\n                            !element.classList.contains(\"darkreader\")\r\n                        );\r\n                    }\r\n                ),\r\n                NodeList.prototype\r\n            );\r\n        }\r\n        function checkBlobURLSupport() {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var svg, bytes, i, blob, objectURL, blobURLAllowed, image_1;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            svg =\r\n                                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>';\r\n                            bytes = new Uint8Array(svg.length);\r\n                            for (i = 0; i < svg.length; i++) {\r\n                                bytes[i] = svg.charCodeAt(i);\r\n                            }\r\n                            blob = new Blob([bytes], {type: \"image/svg+xml\"});\r\n                            objectURL = URL.createObjectURL(blob);\r\n                            _a.label = 1;\r\n                        case 1:\r\n                            _a.trys.push([1, 3, , 4]);\r\n                            image_1 = new Image();\r\n                            return [\r\n                                4,\r\n                                new Promise(function (resolve, reject) {\r\n                                    image_1.onload = function () {\r\n                                        return resolve();\r\n                                    };\r\n                                    image_1.onerror = function () {\r\n                                        return reject();\r\n                                    };\r\n                                    image_1.src = objectURL;\r\n                                })\r\n                            ];\r\n                        case 2:\r\n                            _a.sent();\r\n                            blobURLAllowed = true;\r\n                            return [3, 4];\r\n                        case 3:\r\n                            _a.sent();\r\n                            blobURLAllowed = false;\r\n                            return [3, 4];\r\n                        case 4:\r\n                            document.dispatchEvent(\r\n                                new CustomEvent(\r\n                                    \"__darkreader__blobURLCheckResponse\",\r\n                                    {detail: {blobURLAllowed: blobURLAllowed}}\r\n                                )\r\n                            );\r\n                            return [2];\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        Object.defineProperty(\r\n            CSSStyleSheet.prototype,\r\n            \"addRule\",\r\n            __assign(__assign({}, addRuleDescriptor), {value: proxyAddRule})\r\n        );\r\n        Object.defineProperty(\r\n            CSSStyleSheet.prototype,\r\n            \"insertRule\",\r\n            __assign(__assign({}, insertRuleDescriptor), {\r\n                value: proxyInsertRule\r\n            })\r\n        );\r\n        Object.defineProperty(\r\n            CSSStyleSheet.prototype,\r\n            \"deleteRule\",\r\n            __assign(__assign({}, deleteRuleDescriptor), {\r\n                value: proxyDeleteRule\r\n            })\r\n        );\r\n        Object.defineProperty(\r\n            CSSStyleSheet.prototype,\r\n            \"removeRule\",\r\n            __assign(__assign({}, removeRuleDescriptor), {\r\n                value: proxyRemoveRule\r\n            })\r\n        );\r\n        Object.defineProperty(\r\n            CSSStyleSheet.prototype,\r\n            \"replace\",\r\n            __assign(__assign({}, replaceDescriptor), {value: proxyReplace})\r\n        );\r\n        Object.defineProperty(\r\n            CSSStyleSheet.prototype,\r\n            \"replaceSync\",\r\n            __assign(__assign({}, replaceSyncDescriptor), {\r\n                value: proxyReplaceSync\r\n            })\r\n        );\r\n        if (enableStyleSheetsProxy) {\r\n            Object.defineProperty(\r\n                Document.prototype,\r\n                \"styleSheets\",\r\n                __assign(__assign({}, documentStyleSheetsDescriptor), {\r\n                    get: proxyDocumentStyleSheets\r\n                })\r\n            );\r\n        }\r\n        if (enableCustomElementRegistryProxy) {\r\n            Object.defineProperty(\r\n                CustomElementRegistry.prototype,\r\n                \"define\",\r\n                __assign(__assign({}, customElementRegistryDefineDescriptor), {\r\n                    value: proxyCustomElementRegistryDefine\r\n                })\r\n            );\r\n        }\r\n        if (shouldWrapHTMLElement) {\r\n            Object.defineProperty(\r\n                Element.prototype,\r\n                \"getElementsByTagName\",\r\n                __assign(__assign({}, getElementsByTagNameDescriptor), {\r\n                    value: proxyGetElementsByTagName\r\n                })\r\n            );\r\n        }\r\n        if (shouldProxyChildNodes) {\r\n            Object.defineProperty(\r\n                Node.prototype,\r\n                \"childNodes\",\r\n                __assign(__assign({}, childNodesDescriptor), {\r\n                    get: proxyChildNodes\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    var documentVisibilityListener = null;\r\n    var documentIsVisible_ = !document.hidden;\r\n    var listenerOptions = {\r\n        capture: true,\r\n        passive: true\r\n    };\r\n    function watchForDocumentVisibility() {\r\n        document.addEventListener(\r\n            \"visibilitychange\",\r\n            documentVisibilityListener,\r\n            listenerOptions\r\n        );\r\n        window.addEventListener(\r\n            \"pageshow\",\r\n            documentVisibilityListener,\r\n            listenerOptions\r\n        );\r\n        window.addEventListener(\r\n            \"focus\",\r\n            documentVisibilityListener,\r\n            listenerOptions\r\n        );\r\n    }\r\n    function stopWatchingForDocumentVisibility() {\r\n        document.removeEventListener(\r\n            \"visibilitychange\",\r\n            documentVisibilityListener,\r\n            listenerOptions\r\n        );\r\n        window.removeEventListener(\r\n            \"pageshow\",\r\n            documentVisibilityListener,\r\n            listenerOptions\r\n        );\r\n        window.removeEventListener(\r\n            \"focus\",\r\n            documentVisibilityListener,\r\n            listenerOptions\r\n        );\r\n    }\r\n    function setDocumentVisibilityListener(callback) {\r\n        var alreadyWatching = Boolean(documentVisibilityListener);\r\n        documentVisibilityListener = function () {\r\n            if (!document.hidden) {\r\n                removeDocumentVisibilityListener();\r\n                callback();\r\n                documentIsVisible_ = true;\r\n            }\r\n        };\r\n        if (!alreadyWatching) {\r\n            watchForDocumentVisibility();\r\n        }\r\n    }\r\n    function removeDocumentVisibilityListener() {\r\n        stopWatchingForDocumentVisibility();\r\n        documentVisibilityListener = null;\r\n    }\r\n    function documentIsVisible() {\r\n        return documentIsVisible_;\r\n    }\r\n\r\n    var INSTANCE_ID = generateUID();\r\n    var styleManagers = new Map();\r\n    var adoptedStyleManagers = [];\r\n    var adoptedStyleFallbacks = new Map();\r\n    var adoptedStyleNodeIds = new WeakMap();\r\n    var adoptedStyleChangeTokens = new WeakMap();\r\n    var filter = null;\r\n    var fixes = null;\r\n    var isIFrame$1 = null;\r\n    var ignoredImageAnalysisSelectors = [];\r\n    var ignoredInlineSelectors = [];\r\n    function createOrUpdateStyle(className, root) {\r\n        if (root === void 0) {\r\n            root = document.head || document;\r\n        }\r\n        var element = root.querySelector(\".\".concat(className));\r\n        if (!element) {\r\n            element = document.createElement(\"style\");\r\n            element.classList.add(\"darkreader\");\r\n            element.classList.add(className);\r\n            element.media = \"screen\";\r\n            element.textContent = \"\";\r\n        }\r\n        return element;\r\n    }\r\n    function createOrUpdateScript(className, root) {\r\n        if (root === void 0) {\r\n            root = document.head || document;\r\n        }\r\n        var element = root.querySelector(\".\".concat(className));\r\n        if (!element) {\r\n            element = document.createElement(\"script\");\r\n            element.classList.add(\"darkreader\");\r\n            element.classList.add(className);\r\n        }\r\n        return element;\r\n    }\r\n    var nodePositionWatchers = new Map();\r\n    function setupNodePositionWatcher(node, alias) {\r\n        nodePositionWatchers.has(alias) &&\r\n            nodePositionWatchers.get(alias).stop();\r\n        nodePositionWatchers.set(alias, watchForNodePosition(node, \"head\"));\r\n    }\r\n    function stopStylePositionWatchers() {\r\n        forEach(nodePositionWatchers.values(), function (watcher) {\r\n            return watcher.stop();\r\n        });\r\n        nodePositionWatchers.clear();\r\n    }\r\n    function createStaticStyleOverrides() {\r\n        var fallbackStyle = createOrUpdateStyle(\r\n            \"darkreader--fallback\",\r\n            document\r\n        );\r\n        fallbackStyle.textContent = getModifiedFallbackStyle(filter, {\r\n            strict: true\r\n        });\r\n        document.head.insertBefore(fallbackStyle, document.head.firstChild);\r\n        setupNodePositionWatcher(fallbackStyle, \"fallback\");\r\n        var userAgentStyle = createOrUpdateStyle(\"darkreader--user-agent\");\r\n        userAgentStyle.textContent = getModifiedUserAgentStyle(\r\n            filter,\r\n            isIFrame$1,\r\n            filter.styleSystemControls\r\n        );\r\n        document.head.insertBefore(userAgentStyle, fallbackStyle.nextSibling);\r\n        setupNodePositionWatcher(userAgentStyle, \"user-agent\");\r\n        var textStyle = createOrUpdateStyle(\"darkreader--text\");\r\n        if (filter.useFont || filter.textStroke > 0) {\r\n            textStyle.textContent = createTextStyle(filter);\r\n        } else {\r\n            textStyle.textContent = \"\";\r\n        }\r\n        document.head.insertBefore(textStyle, fallbackStyle.nextSibling);\r\n        setupNodePositionWatcher(textStyle, \"text\");\r\n        var invertStyle = createOrUpdateStyle(\"darkreader--invert\");\r\n        if (fixes && Array.isArray(fixes.invert) && fixes.invert.length > 0) {\r\n            invertStyle.textContent = [\r\n                \"\".concat(fixes.invert.join(\", \"), \" {\"),\r\n                \"    filter: \".concat(\r\n                    getCSSFilterValue(\r\n                        __assign(__assign({}, filter), {\r\n                            contrast:\r\n                                filter.mode === 0\r\n                                    ? filter.contrast\r\n                                    : clamp(filter.contrast - 10, 0, 100)\r\n                        })\r\n                    ),\r\n                    \" !important;\"\r\n                ),\r\n                \"}\"\r\n            ].join(\"\\n\");\r\n        } else {\r\n            invertStyle.textContent = \"\";\r\n        }\r\n        document.head.insertBefore(invertStyle, textStyle.nextSibling);\r\n        setupNodePositionWatcher(invertStyle, \"invert\");\r\n        var inlineStyle = createOrUpdateStyle(\"darkreader--inline\");\r\n        inlineStyle.textContent = getInlineOverrideStyle();\r\n        document.head.insertBefore(inlineStyle, invertStyle.nextSibling);\r\n        setupNodePositionWatcher(inlineStyle, \"inline\");\r\n        var overrideStyle = createOrUpdateStyle(\"darkreader--override\");\r\n        overrideStyle.textContent =\r\n            fixes && fixes.css ? replaceCSSTemplates(fixes.css) : \"\";\r\n        document.head.appendChild(overrideStyle);\r\n        setupNodePositionWatcher(overrideStyle, \"override\");\r\n        var variableStyle = createOrUpdateStyle(\"darkreader--variables\");\r\n        var selectionColors = getSelectionColor(filter);\r\n        var _a = filter,\r\n            darkSchemeBackgroundColor = _a.darkSchemeBackgroundColor,\r\n            darkSchemeTextColor = _a.darkSchemeTextColor,\r\n            lightSchemeBackgroundColor = _a.lightSchemeBackgroundColor,\r\n            lightSchemeTextColor = _a.lightSchemeTextColor,\r\n            mode = _a.mode;\r\n        var schemeBackgroundColor =\r\n            mode === 0 ? lightSchemeBackgroundColor : darkSchemeBackgroundColor;\r\n        var schemeTextColor =\r\n            mode === 0 ? lightSchemeTextColor : darkSchemeTextColor;\r\n        schemeBackgroundColor = modifyBackgroundColor(\r\n            parseColorWithCache(schemeBackgroundColor),\r\n            filter\r\n        );\r\n        schemeTextColor = modifyForegroundColor(\r\n            parseColorWithCache(schemeTextColor),\r\n            filter\r\n        );\r\n        variableStyle.textContent = [\r\n            \":root {\",\r\n            \"   --darkreader-neutral-background: \".concat(\r\n                schemeBackgroundColor,\r\n                \";\"\r\n            ),\r\n            \"   --darkreader-neutral-text: \".concat(schemeTextColor, \";\"),\r\n            \"   --darkreader-selection-background: \".concat(\r\n                selectionColors.backgroundColorSelection,\r\n                \";\"\r\n            ),\r\n            \"   --darkreader-selection-text: \".concat(\r\n                selectionColors.foregroundColorSelection,\r\n                \";\"\r\n            ),\r\n            \"}\"\r\n        ].join(\"\\n\");\r\n        document.head.insertBefore(variableStyle, inlineStyle.nextSibling);\r\n        setupNodePositionWatcher(variableStyle, \"variables\");\r\n        var rootVarsStyle = createOrUpdateStyle(\"darkreader--root-vars\");\r\n        document.head.insertBefore(rootVarsStyle, variableStyle.nextSibling);\r\n        var enableStyleSheetsProxy = !(fixes && fixes.disableStyleSheetsProxy);\r\n        var enableCustomElementRegistryProxy = !(\r\n            fixes && fixes.disableCustomElementRegistryProxy\r\n        );\r\n        {\r\n            var proxyScript = createOrUpdateScript(\"darkreader--proxy\");\r\n            proxyScript.append(\r\n                \"(\"\r\n                    .concat(injectProxy, \")(\")\r\n                    .concat(enableStyleSheetsProxy, \", \")\r\n                    .concat(enableCustomElementRegistryProxy, \")\")\r\n            );\r\n            document.head.insertBefore(proxyScript, rootVarsStyle.nextSibling);\r\n            proxyScript.remove();\r\n        }\r\n    }\r\n    var shadowRootsWithOverrides = new Set();\r\n    function createShadowStaticStyleOverridesInner(root) {\r\n        var inlineStyle = createOrUpdateStyle(\"darkreader--inline\", root);\r\n        inlineStyle.textContent = getInlineOverrideStyle();\r\n        root.insertBefore(inlineStyle, root.firstChild);\r\n        var overrideStyle = createOrUpdateStyle(\"darkreader--override\", root);\r\n        overrideStyle.textContent =\r\n            fixes && fixes.css ? replaceCSSTemplates(fixes.css) : \"\";\r\n        root.insertBefore(overrideStyle, inlineStyle.nextSibling);\r\n        var invertStyle = createOrUpdateStyle(\"darkreader--invert\", root);\r\n        if (fixes && Array.isArray(fixes.invert) && fixes.invert.length > 0) {\r\n            invertStyle.textContent = [\r\n                \"\".concat(fixes.invert.join(\", \"), \" {\"),\r\n                \"    filter: \".concat(\r\n                    getCSSFilterValue(\r\n                        __assign(__assign({}, filter), {\r\n                            contrast:\r\n                                filter.mode === 0\r\n                                    ? filter.contrast\r\n                                    : clamp(filter.contrast - 10, 0, 100)\r\n                        })\r\n                    ),\r\n                    \" !important;\"\r\n                ),\r\n                \"}\"\r\n            ].join(\"\\n\");\r\n        } else {\r\n            invertStyle.textContent = \"\";\r\n        }\r\n        root.insertBefore(invertStyle, overrideStyle.nextSibling);\r\n        shadowRootsWithOverrides.add(root);\r\n    }\r\n    function delayedCreateShadowStaticStyleOverrides(root) {\r\n        var observer = new MutationObserver(function (mutations, observer) {\r\n            var e_1, _a, e_2, _b;\r\n            observer.disconnect();\r\n            try {\r\n                for (\r\n                    var mutations_1 = __values(mutations),\r\n                        mutations_1_1 = mutations_1.next();\r\n                    !mutations_1_1.done;\r\n                    mutations_1_1 = mutations_1.next()\r\n                ) {\r\n                    var _c = mutations_1_1.value,\r\n                        type = _c.type,\r\n                        removedNodes = _c.removedNodes;\r\n                    if (type === \"childList\") {\r\n                        try {\r\n                            for (\r\n                                var _d =\r\n                                        ((e_2 = void 0),\r\n                                        __values(removedNodes)),\r\n                                    _e = _d.next();\r\n                                !_e.done;\r\n                                _e = _d.next()\r\n                            ) {\r\n                                var _f = _e.value,\r\n                                    nodeName = _f.nodeName,\r\n                                    className = _f.className;\r\n                                if (\r\n                                    nodeName === \"STYLE\" &&\r\n                                    [\r\n                                        \"darkreader darkreader--inline\",\r\n                                        \"darkreader darkreader--override\",\r\n                                        \"darkreader darkreader--invert\"\r\n                                    ].includes(className)\r\n                                ) {\r\n                                    createShadowStaticStyleOverridesInner(root);\r\n                                    return;\r\n                                }\r\n                            }\r\n                        } catch (e_2_1) {\r\n                            e_2 = {error: e_2_1};\r\n                        } finally {\r\n                            try {\r\n                                if (_e && !_e.done && (_b = _d.return))\r\n                                    _b.call(_d);\r\n                            } finally {\r\n                                if (e_2) throw e_2.error;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (e_1_1) {\r\n                e_1 = {error: e_1_1};\r\n            } finally {\r\n                try {\r\n                    if (\r\n                        mutations_1_1 &&\r\n                        !mutations_1_1.done &&\r\n                        (_a = mutations_1.return)\r\n                    )\r\n                        _a.call(mutations_1);\r\n                } finally {\r\n                    if (e_1) throw e_1.error;\r\n                }\r\n            }\r\n        });\r\n        observer.observe(root, {childList: true});\r\n    }\r\n    function createShadowStaticStyleOverrides(root) {\r\n        var uninit = root.firstChild === null;\r\n        createShadowStaticStyleOverridesInner(root);\r\n        if (uninit) {\r\n            delayedCreateShadowStaticStyleOverrides(root);\r\n        }\r\n    }\r\n    function replaceCSSTemplates($cssText) {\r\n        return $cssText.replace(/\\${(.+?)}/g, function (_, $color) {\r\n            var color = parseColorWithCache($color);\r\n            if (color) {\r\n                return modifyColor(color, filter);\r\n            }\r\n            return $color;\r\n        });\r\n    }\r\n    function cleanFallbackStyle() {\r\n        var fallback = document.querySelector(\".darkreader--fallback\");\r\n        if (fallback) {\r\n            fallback.textContent = \"\";\r\n        }\r\n    }\r\n    function createDynamicStyleOverrides() {\r\n        cancelRendering();\r\n        var allStyles = getManageableStyles(document);\r\n        var newManagers = allStyles\r\n            .filter(function (style) {\r\n                return !styleManagers.has(style);\r\n            })\r\n            .map(function (style) {\r\n                return createManager(style);\r\n            });\r\n        newManagers\r\n            .map(function (manager) {\r\n                return manager.details({secondRound: false});\r\n            })\r\n            .filter(function (detail) {\r\n                return detail && detail.rules.length > 0;\r\n            })\r\n            .forEach(function (detail) {\r\n                variablesStore.addRulesForMatching(detail.rules);\r\n            });\r\n        variablesStore.matchVariablesAndDependents();\r\n        variablesStore.setOnRootVariableChange(function () {\r\n            var rootVarsStyle = createOrUpdateStyle(\"darkreader--root-vars\");\r\n            variablesStore.putRootVars(rootVarsStyle, filter);\r\n        });\r\n        var rootVarsStyle = createOrUpdateStyle(\"darkreader--root-vars\");\r\n        variablesStore.putRootVars(rootVarsStyle, filter);\r\n        styleManagers.forEach(function (manager) {\r\n            return manager.render(filter, ignoredImageAnalysisSelectors);\r\n        });\r\n        if (loadingStyles.size === 0) {\r\n            cleanFallbackStyle();\r\n        }\r\n        newManagers.forEach(function (manager) {\r\n            return manager.watch();\r\n        });\r\n        var inlineStyleElements = toArray(\r\n            document.querySelectorAll(INLINE_STYLE_SELECTOR)\r\n        );\r\n        iterateShadowHosts(document.documentElement, function (host) {\r\n            createShadowStaticStyleOverrides(host.shadowRoot);\r\n            var elements = host.shadowRoot.querySelectorAll(\r\n                INLINE_STYLE_SELECTOR\r\n            );\r\n            if (elements.length > 0) {\r\n                push(inlineStyleElements, elements);\r\n            }\r\n        });\r\n        inlineStyleElements.forEach(function (el) {\r\n            return overrideInlineStyle(\r\n                el,\r\n                filter,\r\n                ignoredInlineSelectors,\r\n                ignoredImageAnalysisSelectors\r\n            );\r\n        });\r\n        handleAdoptedStyleSheets(document);\r\n        variablesStore.matchVariablesAndDependents();\r\n        if (isFirefox) {\r\n            var MATCH_VAR_1 = Symbol();\r\n            var onAdoptedCSSChange_1 = function (e) {\r\n                var _a = e.detail,\r\n                    node = _a.node,\r\n                    id = _a.id,\r\n                    cssRules = _a.cssRules,\r\n                    entries = _a.entries;\r\n                if (Array.isArray(entries)) {\r\n                    entries.forEach(function (e) {\r\n                        var cssRules = e[2];\r\n                        variablesStore.addRulesForMatching(cssRules);\r\n                    });\r\n                    variablesStore.matchVariablesAndDependents();\r\n                } else if (cssRules) {\r\n                    variablesStore.addRulesForMatching(cssRules);\r\n                    requestAnimationFrameOnce(MATCH_VAR_1, function () {\r\n                        return variablesStore.matchVariablesAndDependents();\r\n                    });\r\n                }\r\n                var tuples = Array.isArray(entries)\r\n                    ? entries\r\n                    : node && cssRules\r\n                      ? [[node, id, cssRules]]\r\n                      : [];\r\n                tuples.forEach(function (_a) {\r\n                    var _b = __read(_a, 3),\r\n                        node = _b[0],\r\n                        id = _b[1],\r\n                        cssRules = _b[2];\r\n                    adoptedStyleNodeIds.set(node, id);\r\n                    var fallback = getAdoptedStyleSheetFallback(node);\r\n                    fallback.updateCSS(cssRules);\r\n                });\r\n            };\r\n            document.addEventListener(\r\n                \"__darkreader__adoptedStyleSheetsChange\",\r\n                onAdoptedCSSChange_1\r\n            );\r\n            cleaners.push(function () {\r\n                return document.removeEventListener(\r\n                    \"__darkreader__adoptedStyleSheetsChange\",\r\n                    onAdoptedCSSChange_1\r\n                );\r\n            });\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__startAdoptedStyleSheetsWatcher\")\r\n            );\r\n        }\r\n    }\r\n    var loadingStylesCounter = 0;\r\n    var loadingStyles = new Set();\r\n    function createManager(element) {\r\n        var loadingStyleId = ++loadingStylesCounter;\r\n        function loadingStart() {\r\n            if (!isDOMReady() || !documentIsVisible()) {\r\n                loadingStyles.add(loadingStyleId);\r\n                logInfo(\r\n                    \"Current amount of styles loading: \".concat(\r\n                        loadingStyles.size\r\n                    )\r\n                );\r\n                var fallbackStyle = document.querySelector(\r\n                    \".darkreader--fallback\"\r\n                );\r\n                if (!fallbackStyle.textContent) {\r\n                    fallbackStyle.textContent = getModifiedFallbackStyle(\r\n                        filter,\r\n                        {strict: false}\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        function loadingEnd() {\r\n            loadingStyles.delete(loadingStyleId);\r\n            logInfo(\r\n                \"Removed loadingStyle \"\r\n                    .concat(loadingStyleId, \", now awaiting: \")\r\n                    .concat(loadingStyles.size)\r\n            );\r\n            if (loadingStyles.size === 0 && isDOMReady()) {\r\n                cleanFallbackStyle();\r\n            }\r\n        }\r\n        function update() {\r\n            var details = manager.details({secondRound: true});\r\n            if (!details) {\r\n                return;\r\n            }\r\n            variablesStore.addRulesForMatching(details.rules);\r\n            variablesStore.matchVariablesAndDependents();\r\n            manager.render(filter, ignoredImageAnalysisSelectors);\r\n        }\r\n        var manager = manageStyle(element, {\r\n            update: update,\r\n            loadingStart: loadingStart,\r\n            loadingEnd: loadingEnd\r\n        });\r\n        styleManagers.set(element, manager);\r\n        return manager;\r\n    }\r\n    function removeManager(element) {\r\n        var manager = styleManagers.get(element);\r\n        if (manager) {\r\n            manager.destroy();\r\n            styleManagers.delete(element);\r\n        }\r\n    }\r\n    var throttledRenderAllStyles = throttle(function (callback) {\r\n        styleManagers.forEach(function (manager) {\r\n            return manager.render(filter, ignoredImageAnalysisSelectors);\r\n        });\r\n        adoptedStyleManagers.forEach(function (manager) {\r\n            return manager.render(filter, ignoredImageAnalysisSelectors);\r\n        });\r\n        callback && callback();\r\n    });\r\n    var cancelRendering = function () {\r\n        throttledRenderAllStyles.cancel();\r\n    };\r\n    function onDOMReady() {\r\n        if (loadingStyles.size === 0) {\r\n            cleanFallbackStyle();\r\n            return;\r\n        }\r\n    }\r\n    function runDynamicStyle() {\r\n        createDynamicStyleOverrides();\r\n        watchForUpdates();\r\n    }\r\n    function createThemeAndWatchForUpdates() {\r\n        createStaticStyleOverrides();\r\n        if (!documentIsVisible() && !filter.immediateModify) {\r\n            setDocumentVisibilityListener(runDynamicStyle);\r\n        } else {\r\n            runDynamicStyle();\r\n        }\r\n        changeMetaThemeColorWhenAvailable(filter);\r\n    }\r\n    var pendingAdoptedVarMatch = false;\r\n    function handleAdoptedStyleSheets(node) {\r\n        var theme = filter;\r\n        if (isFirefox) {\r\n            var fallback = getAdoptedStyleSheetFallback(node);\r\n            fallback.render(theme, ignoredImageAnalysisSelectors);\r\n            return;\r\n        }\r\n        if (hasAdoptedStyleSheets(node)) {\r\n            node.adoptedStyleSheets.forEach(function (s) {\r\n                variablesStore.addRulesForMatching(s.cssRules);\r\n            });\r\n            var newManger_1 = createAdoptedStyleSheetOverride(node);\r\n            adoptedStyleManagers.push(newManger_1);\r\n            newManger_1.render(theme, ignoredImageAnalysisSelectors);\r\n            newManger_1.watch(function (sheets) {\r\n                sheets.forEach(function (s) {\r\n                    variablesStore.addRulesForMatching(s.cssRules);\r\n                });\r\n                newManger_1.render(theme, ignoredImageAnalysisSelectors);\r\n                pendingAdoptedVarMatch = true;\r\n            });\r\n            potentialAdoptedStyleNodes.delete(node);\r\n        } else if (!potentialAdoptedStyleNodes.has(node)) {\r\n            potentialAdoptedStyleNodes.add(node);\r\n        }\r\n    }\r\n    var potentialAdoptedStyleNodes = new Set();\r\n    var potentialAdoptedStyleFrameId = null;\r\n    function watchPotentialAdoptedStyleNodes() {\r\n        potentialAdoptedStyleFrameId = requestAnimationFrame(function () {\r\n            var changed = false;\r\n            potentialAdoptedStyleNodes.forEach(function (node) {\r\n                if (node.isConnected) {\r\n                    handleAdoptedStyleSheets(node);\r\n                    changed = true;\r\n                } else {\r\n                    potentialAdoptedStyleNodes.delete(node);\r\n                }\r\n            });\r\n            if (changed || pendingAdoptedVarMatch) {\r\n                variablesStore.matchVariablesAndDependents();\r\n                pendingAdoptedVarMatch = false;\r\n            }\r\n            watchPotentialAdoptedStyleNodes();\r\n        });\r\n    }\r\n    function stopWatchingPotentialAdoptedStyleNodes() {\r\n        potentialAdoptedStyleFrameId &&\r\n            cancelAnimationFrame(potentialAdoptedStyleFrameId);\r\n        potentialAdoptedStyleNodes.clear();\r\n        if (isFirefox) {\r\n            document.dispatchEvent(\r\n                new CustomEvent(\"__darkreader__stopAdoptedStyleSheetsWatcher\")\r\n            );\r\n        }\r\n    }\r\n    function getAdoptedStyleChangeToken(node) {\r\n        if (adoptedStyleChangeTokens.has(node)) {\r\n            return adoptedStyleChangeTokens.get(node);\r\n        }\r\n        var token = Symbol();\r\n        adoptedStyleChangeTokens.set(node, token);\r\n        return token;\r\n    }\r\n    function getAdoptedStyleSheetFallback(node) {\r\n        var fallback = adoptedStyleFallbacks.get(node);\r\n        if (!fallback) {\r\n            fallback = createAdoptedStyleSheetFallback(function () {\r\n                var token = getAdoptedStyleChangeToken(node);\r\n                requestAnimationFrameOnce(token, function () {\r\n                    var id = adoptedStyleNodeIds.get(node);\r\n                    var commands =\r\n                        fallback === null || fallback === void 0\r\n                            ? void 0\r\n                            : fallback.commands();\r\n                    var data = {id: id, commands: commands};\r\n                    document.dispatchEvent(\r\n                        new CustomEvent(\r\n                            \"__darkreader__adoptedStyleSheetCommands\",\r\n                            {detail: JSON.stringify(data)}\r\n                        )\r\n                    );\r\n                });\r\n            });\r\n            adoptedStyleFallbacks.set(node, fallback);\r\n        }\r\n        return fallback;\r\n    }\r\n    function watchForUpdates() {\r\n        var managedStyles = Array.from(styleManagers.keys());\r\n        watchForStyleChanges(\r\n            managedStyles,\r\n            function (_a) {\r\n                var created = _a.created,\r\n                    updated = _a.updated,\r\n                    removed = _a.removed,\r\n                    moved = _a.moved;\r\n                var stylesToRemove = removed;\r\n                var stylesToManage = created\r\n                    .concat(updated)\r\n                    .concat(moved)\r\n                    .filter(function (style) {\r\n                        return !styleManagers.has(style);\r\n                    });\r\n                var stylesToRestore = moved.filter(function (style) {\r\n                    return styleManagers.has(style);\r\n                });\r\n                stylesToRemove.forEach(function (style) {\r\n                    return removeManager(style);\r\n                });\r\n                var newManagers = stylesToManage.map(function (style) {\r\n                    return createManager(style);\r\n                });\r\n                newManagers\r\n                    .map(function (manager) {\r\n                        return manager.details({secondRound: false});\r\n                    })\r\n                    .filter(function (detail) {\r\n                        return detail && detail.rules.length > 0;\r\n                    })\r\n                    .forEach(function (detail) {\r\n                        variablesStore.addRulesForMatching(detail.rules);\r\n                    });\r\n                variablesStore.matchVariablesAndDependents();\r\n                newManagers.forEach(function (manager) {\r\n                    return manager.render(\r\n                        filter,\r\n                        ignoredImageAnalysisSelectors\r\n                    );\r\n                });\r\n                newManagers.forEach(function (manager) {\r\n                    return manager.watch();\r\n                });\r\n                stylesToRestore.forEach(function (style) {\r\n                    return styleManagers.get(style).restore();\r\n                });\r\n            },\r\n            function (shadowRoot) {\r\n                createShadowStaticStyleOverrides(shadowRoot);\r\n                handleAdoptedStyleSheets(shadowRoot);\r\n            }\r\n        );\r\n        watchPotentialAdoptedStyleNodes();\r\n        watchForInlineStyles(\r\n            function (element) {\r\n                overrideInlineStyle(\r\n                    element,\r\n                    filter,\r\n                    ignoredInlineSelectors,\r\n                    ignoredImageAnalysisSelectors\r\n                );\r\n                if (element === document.documentElement) {\r\n                    var styleAttr = element.getAttribute(\"style\") || \"\";\r\n                    if (styleAttr.includes(\"--\")) {\r\n                        variablesStore.matchVariablesAndDependents();\r\n                        var rootVarsStyle = createOrUpdateStyle(\r\n                            \"darkreader--root-vars\"\r\n                        );\r\n                        variablesStore.putRootVars(rootVarsStyle, filter);\r\n                    }\r\n                }\r\n            },\r\n            function (root) {\r\n                createShadowStaticStyleOverrides(root);\r\n                var inlineStyleElements = root.querySelectorAll(\r\n                    INLINE_STYLE_SELECTOR\r\n                );\r\n                if (inlineStyleElements.length > 0) {\r\n                    forEach(inlineStyleElements, function (el) {\r\n                        return overrideInlineStyle(\r\n                            el,\r\n                            filter,\r\n                            ignoredInlineSelectors,\r\n                            ignoredImageAnalysisSelectors\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        );\r\n        addDOMReadyListener(onDOMReady);\r\n    }\r\n    function stopWatchingForUpdates() {\r\n        styleManagers.forEach(function (manager) {\r\n            return manager.pause();\r\n        });\r\n        stopStylePositionWatchers();\r\n        stopWatchingForStyleChanges();\r\n        stopWatchingForInlineStyles();\r\n        removeDOMReadyListener(onDOMReady);\r\n        cleanReadyStateCompleteListeners();\r\n    }\r\n    var metaObserver;\r\n    function addMetaListener() {\r\n        metaObserver = new MutationObserver(function () {\r\n            if (document.querySelector('meta[name=\"darkreader-lock\"]')) {\r\n                metaObserver.disconnect();\r\n                removeDynamicTheme();\r\n            }\r\n        });\r\n        metaObserver.observe(document.head, {childList: true, subtree: true});\r\n    }\r\n    function createDarkReaderInstanceMarker() {\r\n        var metaElement = document.createElement(\"meta\");\r\n        metaElement.name = \"darkreader\";\r\n        metaElement.content = INSTANCE_ID;\r\n        document.head.appendChild(metaElement);\r\n    }\r\n    function isAnotherDarkReaderInstanceActive() {\r\n        if (document.querySelector('meta[name=\"darkreader-lock\"]')) {\r\n            return true;\r\n        }\r\n        var meta = document.querySelector('meta[name=\"darkreader\"]');\r\n        if (meta) {\r\n            if (meta.content !== INSTANCE_ID) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        createDarkReaderInstanceMarker();\r\n        addMetaListener();\r\n        return false;\r\n    }\r\n    function createOrUpdateDynamicThemeInternal(\r\n        filterConfig,\r\n        dynamicThemeFixes,\r\n        iframe\r\n    ) {\r\n        filter = filterConfig;\r\n        fixes = dynamicThemeFixes;\r\n        if (fixes) {\r\n            ignoredImageAnalysisSelectors = Array.isArray(\r\n                fixes.ignoreImageAnalysis\r\n            )\r\n                ? fixes.ignoreImageAnalysis\r\n                : [];\r\n            ignoredInlineSelectors = Array.isArray(fixes.ignoreInlineStyle)\r\n                ? fixes.ignoreInlineStyle\r\n                : [];\r\n        } else {\r\n            ignoredImageAnalysisSelectors = [];\r\n            ignoredInlineSelectors = [];\r\n        }\r\n        if (filter.immediateModify) {\r\n            setIsDOMReady(function () {\r\n                return true;\r\n            });\r\n        }\r\n        isIFrame$1 = iframe;\r\n        if (document.head) {\r\n            if (isAnotherDarkReaderInstanceActive()) {\r\n                removeDynamicTheme();\r\n                return;\r\n            }\r\n            document.documentElement.setAttribute(\r\n                \"data-darkreader-mode\",\r\n                \"dynamic\"\r\n            );\r\n            document.documentElement.setAttribute(\r\n                \"data-darkreader-scheme\",\r\n                filter.mode ? \"dark\" : \"dimmed\"\r\n            );\r\n            createThemeAndWatchForUpdates();\r\n        } else {\r\n            if (!isFirefox) {\r\n                var fallbackStyle = createOrUpdateStyle(\"darkreader--fallback\");\r\n                document.documentElement.appendChild(fallbackStyle);\r\n                fallbackStyle.textContent = getModifiedFallbackStyle(filter, {\r\n                    strict: true\r\n                });\r\n            }\r\n            var headObserver_1 = new MutationObserver(function () {\r\n                if (document.head) {\r\n                    headObserver_1.disconnect();\r\n                    if (isAnotherDarkReaderInstanceActive()) {\r\n                        removeDynamicTheme();\r\n                        return;\r\n                    }\r\n                    createThemeAndWatchForUpdates();\r\n                }\r\n            });\r\n            headObserver_1.observe(document, {childList: true, subtree: true});\r\n        }\r\n    }\r\n    function removeProxy() {\r\n        document.dispatchEvent(new CustomEvent(\"__darkreader__cleanUp\"));\r\n        removeNode(document.head.querySelector(\".darkreader--proxy\"));\r\n    }\r\n    var cleaners = [];\r\n    function removeDynamicTheme() {\r\n        document.documentElement.removeAttribute(\"data-darkreader-mode\");\r\n        document.documentElement.removeAttribute(\"data-darkreader-scheme\");\r\n        cleanDynamicThemeCache();\r\n        removeNode(document.querySelector(\".darkreader--fallback\"));\r\n        if (document.head) {\r\n            restoreMetaThemeColor();\r\n            removeNode(document.head.querySelector(\".darkreader--user-agent\"));\r\n            removeNode(document.head.querySelector(\".darkreader--text\"));\r\n            removeNode(document.head.querySelector(\".darkreader--invert\"));\r\n            removeNode(document.head.querySelector(\".darkreader--inline\"));\r\n            removeNode(document.head.querySelector(\".darkreader--override\"));\r\n            removeNode(document.head.querySelector(\".darkreader--variables\"));\r\n            removeNode(document.head.querySelector(\".darkreader--root-vars\"));\r\n            removeNode(document.head.querySelector('meta[name=\"darkreader\"]'));\r\n            removeProxy();\r\n        }\r\n        shadowRootsWithOverrides.forEach(function (root) {\r\n            removeNode(root.querySelector(\".darkreader--inline\"));\r\n            removeNode(root.querySelector(\".darkreader--override\"));\r\n        });\r\n        shadowRootsWithOverrides.clear();\r\n        forEach(styleManagers.keys(), function (el) {\r\n            return removeManager(el);\r\n        });\r\n        loadingStyles.clear();\r\n        cleanLoadingLinks();\r\n        forEach(document.querySelectorAll(\".darkreader\"), removeNode);\r\n        adoptedStyleManagers.forEach(function (manager) {\r\n            return manager.destroy();\r\n        });\r\n        adoptedStyleManagers.splice(0);\r\n        adoptedStyleFallbacks.forEach(function (fallback) {\r\n            return fallback.destroy();\r\n        });\r\n        adoptedStyleFallbacks.clear();\r\n        stopWatchingPotentialAdoptedStyleNodes();\r\n        metaObserver && metaObserver.disconnect();\r\n        cleaners.forEach(function (clean) {\r\n            return clean();\r\n        });\r\n        cleaners.splice(0);\r\n    }\r\n    function cleanDynamicThemeCache() {\r\n        variablesStore.clear();\r\n        parsedURLCache.clear();\r\n        removeDocumentVisibilityListener();\r\n        cancelRendering();\r\n        stopWatchingForUpdates();\r\n        cleanModificationCache();\r\n        clearColorCache();\r\n    }\r\n\r\n    var blobRegex = /url\\(\\\"(blob\\:.*?)\\\"\\)/g;\r\n    function replaceBlobs(text) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promises = [];\r\n                        getMatches(blobRegex, text, 1).forEach(function (url) {\r\n                            var promise = loadAsDataURL(url);\r\n                            promises.push(promise);\r\n                        });\r\n                        return [4, Promise.all(promises)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        return [\r\n                            2,\r\n                            text.replace(blobRegex, function () {\r\n                                return 'url(\"'.concat(data.shift(), '\")');\r\n                            })\r\n                        ];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    var banner =\r\n        '/*\\n                        _______\\n                       /       \\\\\\n                      .==.    .==.\\n                     ((  ))==((  ))\\n                    / \"==\"    \"==\"\\\\\\n                   /____|| || ||___\\\\\\n       ________     ____    ________  ___    ___\\n       |  ___  \\\\   /    \\\\   |  ___  \\\\ |  |  /  /\\n       |  |  \\\\  \\\\ /  /\\\\  \\\\  |  |  \\\\  \\\\|  |_/  /\\n       |  |   )  /  /__\\\\  \\\\ |  |__/  /|  ___  \\\\\\n       |  |__/  /  ______  \\\\|  ____  \\\\|  |  \\\\  \\\\\\n_______|_______/__/ ____ \\\\__\\\\__|___\\\\__\\\\__|___\\\\__\\\\____\\n|  ___  \\\\ |  ____/ /    \\\\   |  ___  \\\\ |  ____|  ___  \\\\\\n|  |  \\\\  \\\\|  |___ /  /\\\\  \\\\  |  |  \\\\  \\\\|  |___|  |  \\\\  \\\\\\n|  |__/  /|  ____/  /__\\\\  \\\\ |  |   )  |  ____|  |__/  /\\n|  ____  \\\\|  |__/  ______  \\\\|  |__/  /|  |___|  ____  \\\\\\n|__|   \\\\__\\\\____/__/      \\\\__\\\\_______/ |______|__|   \\\\__\\\\\\n                https://darkreader.org\\n*/\\n\\n/*! Dark reader generated CSS | Licensed under MIT https://github.com/darkreader/darkreader/blob/main/LICENSE */\\n';\r\n    function collectCSS() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            function addStaticCSS(selector, comment) {\r\n                var staticStyle = document.querySelector(selector);\r\n                if (staticStyle && staticStyle.textContent) {\r\n                    css.push(\"/* \".concat(comment, \" */\"));\r\n                    css.push(staticStyle.textContent);\r\n                    css.push(\"\");\r\n                }\r\n            }\r\n            var css, modifiedCSS, formattedCSS, _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        css = [banner];\r\n                        addStaticCSS(\".darkreader--fallback\", \"Fallback Style\");\r\n                        addStaticCSS(\r\n                            \".darkreader--user-agent\",\r\n                            \"User-Agent Style\"\r\n                        );\r\n                        addStaticCSS(\".darkreader--text\", \"Text Style\");\r\n                        addStaticCSS(\".darkreader--invert\", \"Invert Style\");\r\n                        addStaticCSS(\r\n                            \".darkreader--variables\",\r\n                            \"Variables Style\"\r\n                        );\r\n                        modifiedCSS = [];\r\n                        document\r\n                            .querySelectorAll(\".darkreader--sync\")\r\n                            .forEach(function (element) {\r\n                                forEach(\r\n                                    element.sheet.cssRules,\r\n                                    function (rule) {\r\n                                        rule &&\r\n                                            rule.cssText &&\r\n                                            modifiedCSS.push(rule.cssText);\r\n                                    }\r\n                                );\r\n                            });\r\n                        if (!modifiedCSS.length) return [3, 2];\r\n                        formattedCSS = formatCSS(modifiedCSS.join(\"\\n\"));\r\n                        css.push(\"/* Modified CSS */\");\r\n                        _b = (_a = css).push;\r\n                        return [4, replaceBlobs(formattedCSS)];\r\n                    case 1:\r\n                        _b.apply(_a, [_c.sent()]);\r\n                        css.push(\"\");\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        addStaticCSS(\".darkreader--override\", \"Override Style\");\r\n                        return [2, css.join(\"\\n\")];\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    var isDarkReaderEnabled = false;\r\n    var isIFrame = (function () {\r\n        try {\r\n            return window.self !== window.top;\r\n        } catch (err) {\r\n            console.warn(err);\r\n            return true;\r\n        }\r\n    })();\r\n    function enable(themeOptions, fixes) {\r\n        if (themeOptions === void 0) {\r\n            themeOptions = {};\r\n        }\r\n        if (fixes === void 0) {\r\n            fixes = null;\r\n        }\r\n        var theme = __assign(__assign({}, DEFAULT_THEME), themeOptions);\r\n        if (theme.engine !== ThemeEngine.dynamicTheme) {\r\n            throw new Error(\"Theme engine is not supported.\");\r\n        }\r\n        createOrUpdateDynamicThemeInternal(theme, fixes, isIFrame);\r\n        isDarkReaderEnabled = true;\r\n    }\r\n    function isEnabled() {\r\n        return isDarkReaderEnabled;\r\n    }\r\n    function disable() {\r\n        removeDynamicTheme();\r\n        isDarkReaderEnabled = false;\r\n    }\r\n    var darkScheme = matchMedia(\"(prefers-color-scheme: dark)\");\r\n    var store = {\r\n        themeOptions: null,\r\n        fixes: null\r\n    };\r\n    function handleColorScheme() {\r\n        if (darkScheme.matches) {\r\n            enable(store.themeOptions, store.fixes);\r\n        } else {\r\n            disable();\r\n        }\r\n    }\r\n    function auto(themeOptions, fixes) {\r\n        if (themeOptions === void 0) {\r\n            themeOptions = {};\r\n        }\r\n        if (fixes === void 0) {\r\n            fixes = null;\r\n        }\r\n        if (themeOptions) {\r\n            store = {themeOptions: themeOptions, fixes: fixes};\r\n            handleColorScheme();\r\n            if (isMatchMediaChangeEventListenerSupported) {\r\n                darkScheme.addEventListener(\"change\", handleColorScheme);\r\n            } else {\r\n                darkScheme.addListener(handleColorScheme);\r\n            }\r\n        } else {\r\n            if (isMatchMediaChangeEventListenerSupported) {\r\n                darkScheme.removeEventListener(\"change\", handleColorScheme);\r\n            } else {\r\n                darkScheme.removeListener(handleColorScheme);\r\n            }\r\n            disable();\r\n        }\r\n    }\r\n    function exportGeneratedCSS() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        return [4, collectCSS()];\r\n                    case 1:\r\n                        return [2, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    var setFetchMethod = setFetchMethod$1;\r\n\r\n    exports.auto = auto;\r\n    exports.disable = disable;\r\n    exports.enable = enable;\r\n    exports.exportGeneratedCSS = exportGeneratedCSS;\r\n    exports.isEnabled = isEnabled;\r\n    exports.setFetchMethod = setFetchMethod;\r\n\r\n    Object.defineProperty(exports, \"__esModule\", {value: true});\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/darkreader/darkreader.js\n"));

/***/ }),

/***/ "./src/components/layouts/MainLayout/MainLayout.tsx":
/*!**********************************************************!*\
  !*** ./src/components/layouts/MainLayout/MainLayout.tsx ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mantine/core */ \"./node_modules/@mantine/core/esm/index.js\");\n/* harmony import */ var _mantine_hooks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mantine/hooks */ \"./node_modules/@mantine/hooks/esm/index.js\");\n/* harmony import */ var _mantine_notifications__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mantine/notifications */ \"./node_modules/@mantine/notifications/esm/index.js\");\n/* harmony import */ var _tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tabler/icons-react */ \"./node_modules/@tabler/icons-react/dist/esm/tabler-icons-react.mjs\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var darkreader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! darkreader */ \"./node_modules/darkreader/darkreader.js\");\n/* harmony import */ var darkreader__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(darkreader__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_device_detect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-device-detect */ \"./node_modules/react-device-detect/dist/lib.js\");\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-use */ \"./node_modules/react-use/esm/index.js\");\n/* harmony import */ var _components_misc_FunnyEmoji__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/misc/FunnyEmoji */ \"./src/components/misc/FunnyEmoji.tsx\");\n/* harmony import */ var _components_pages_MainPage_MainPage_style__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/pages/MainPage/MainPage.style */ \"./src/components/pages/MainPage/MainPage.style.tsx\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/config */ \"./src/config.ts\");\n/* harmony import */ var _states_states__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/states/states */ \"./src/states/states.tsx\");\n/* harmony import */ var _utility_store__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/utility/store */ \"./src/utility/store.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst links = [\n    {\n        icon: _tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconMessage,\n        label: \"Agents\",\n        key: \"nullgpt\",\n        canAddCollections: true,\n        collectionsLabel: \"Agents\"\n    }\n];\nconst MainLayout = (param)=>{\n    let { children  } = param;\n    _s();\n    const { classes  } = (0,_components_pages_MainPage_MainPage_style__WEBPACK_IMPORTED_MODULE_7__.useStyles)();\n    const [collections] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCollections)();\n    const [globalCurrentTool, setGlobalCurrentTool] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentTool)();\n    const [currentTool, setCurrentTool] = (0,react_use__WEBPACK_IMPORTED_MODULE_12__.useLocalStorage)(\":currentTool\", globalCurrentTool);\n    const currentLink = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(()=>{\n        return links.find((v)=>v.key === currentTool);\n    }, [\n        currentTool\n    ]);\n    const [addAction] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useAddCollectionAction)();\n    const [currentCollection, setCurrentCollection] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollection)();\n    const [, setCollectionEditId] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionEditId)();\n    const [, setCollectionRemoveId] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionRemoveId)();\n    const [, setCollectionUpId] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionUpId)();\n    const [, setCollectionDownId] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionDownId)();\n    const theme = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_13__.useMantineTheme)();\n    const [opened, setOpened] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n    const [highContrast, setHighContrast] = (0,react_use__WEBPACK_IMPORTED_MODULE_12__.useLocalStorage)(\"highContrast\", \"0\");\n    const logoText = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(()=>{\n        return localStorage.getItem(\":logoText\") || _config__WEBPACK_IMPORTED_MODULE_8__.appName;\n    }, []);\n    const [, setSubCollectionId] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useSubCollectionId)();\n    const [lastMessageByCollection, setLastMessageByCollection] = (0,_states_states__WEBPACK_IMPORTED_MODULE_9__.useLastMessageByCollection)();\n    const viewport = (0,_mantine_hooks__WEBPACK_IMPORTED_MODULE_14__.useViewportSize)();\n    const [renderKey, setRenderKey] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(Date.now());\n    const viewportRef = (0,react__WEBPACK_IMPORTED_MODULE_4__.useRef)({\n        width: 0,\n        height: 0\n    });\n    const hotkeySwitchCollection = (index)=>{\n        if (index <= collections.length - 1) {\n            setCurrentCollection(collections[index].key);\n        }\n    };\n    (0,_mantine_hooks__WEBPACK_IMPORTED_MODULE_14__.useHotkeys)((0,lodash__WEBPACK_IMPORTED_MODULE_3__.range)(0, 9).map((i)=>[\n            \"mod+\".concat(i + 1),\n            ()=>hotkeySwitchCollection(i)\n        ]));\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        setGlobalCurrentTool(currentTool);\n    }, [\n        currentTool\n    ]);\n    (0,react_use__WEBPACK_IMPORTED_MODULE_12__.useDebounce)(()=>{\n        if (!currentTool) return;\n        if (collections.length > 0 && !(0,lodash__WEBPACK_IMPORTED_MODULE_3__.find)(collections, (v)=>v.key === currentCollection)) {\n            const dbCurrentCollection = localStorage.getItem(\":currentCollection:\".concat(currentTool));\n            const tempCollection = (0,lodash__WEBPACK_IMPORTED_MODULE_3__.find)(collections, (v)=>v.key.toString() === dbCurrentCollection);\n            if (tempCollection) {\n                setCurrentCollection(tempCollection.key);\n            } else {\n                setCurrentCollection(collections[0].key);\n            }\n        }\n        if (collections.length === 0) {\n            setCurrentCollection(undefined);\n        }\n    }, 42, [\n        collections,\n        currentCollection,\n        currentTool\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        if (currentTool && currentCollection) {\n            localStorage.setItem(\":currentCollection:\".concat(currentTool), currentCollection.toString());\n        }\n    }, [\n        currentCollection,\n        currentTool\n    ]);\n    (0,react_use__WEBPACK_IMPORTED_MODULE_12__.useMount)(()=>{\n        // enableDarkMode({\n        //   // brightness: 100,\n        //   // contrast: 100,\n        //   sepia: 10,\n        // });\n        //\n        // collectCSS().then(console.log);\n        if (sessionStorage.getItem(\":importLocalStorageFromFile\")) {\n            sessionStorage.removeItem(\":importLocalStorageFromFile\");\n            _mantine_notifications__WEBPACK_IMPORTED_MODULE_15__.notifications.show({\n                title: \"Success\",\n                message: \"Data import successful.\",\n                radius: \"lg\",\n                withCloseButton: true,\n                color: \"green\",\n                icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconCircleCheckFilled, {}, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                    lineNumber: 173,\n                    columnNumber: 15\n                }, undefined)\n            });\n        }\n    });\n    (0,react_use__WEBPACK_IMPORTED_MODULE_12__.useDebounce)(()=>{\n        if (highContrast === \"1\") {\n            (0,darkreader__WEBPACK_IMPORTED_MODULE_2__.enable)({\n                // brightness: 100,\n                // contrast: 100,\n                sepia: 10\n            });\n        } else {\n            (0,darkreader__WEBPACK_IMPORTED_MODULE_2__.disable)();\n        }\n    }, 500, [\n        highContrast\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(()=>{\n        const collection = collections.find((v)=>v.key === currentCollection);\n        if (collection) {\n            document.title = \"\".concat(collection.emoji, \" \").concat(collection.label);\n        }\n    }, [\n        currentCollection,\n        collections\n    ]);\n    (0,_mantine_hooks__WEBPACK_IMPORTED_MODULE_14__.useShallowEffect)(()=>{\n        if (collections.length === 0) return;\n        if (Object.keys(lastMessageByCollection).length > 0) return;\n        const result = {};\n        Promise.all((0,lodash__WEBPACK_IMPORTED_MODULE_3__.map)(collections, async (collection)=>{\n            const messages = await _utility_store__WEBPACK_IMPORTED_MODULE_10__[\"default\"].getItem((0,_utility_store__WEBPACK_IMPORTED_MODULE_10__.messagesKey)(collection.key)) || [];\n            for(let i = messages.length - 1; i >= 0; i--){\n                if (messages[i].source === \"user\") {\n                    result[collection.key] = messages[i].content;\n                    break;\n                }\n            }\n        })).then(()=>{\n            result[\"ok\"] = \"OK\";\n            setLastMessageByCollection(result);\n        });\n    }, [\n        collections,\n        lastMessageByCollection\n    ]);\n    (0,react_use__WEBPACK_IMPORTED_MODULE_12__.useDebounce)(()=>{\n        if (viewport.width > 0) {\n            if (viewportRef.current.width === 0) {\n                viewportRef.current = viewport;\n            }\n            if (viewportRef.current.width !== viewport.width || viewportRef.current.height !== viewport.height) {\n                viewportRef.current = viewport;\n                setRenderKey(Date.now());\n            }\n        }\n    }, 500, [\n        viewport.width,\n        viewport.height\n    ]);\n    const mainLinks = links.map((link)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.UnstyledButton, {\n            className: classes.mainLink,\n            onClick: ()=>{\n                setCurrentTool(link.key);\n                setOpened(false);\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Text, {\n                    color: currentTool === link.key ? \"white\" : \"dimmed\",\n                    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.mainLinkInner, {\n                        \"opacity-80\": currentTool !== link.key\n                    }),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(link.icon, {\n                            size: \"1.3rem\",\n                            className: classes.mainLinkIcon,\n                            stroke: 1.5\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                            lineNumber: 255,\n                            columnNumber: 9\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"font-normal\",\n                            children: link.label\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                            lineNumber: 256,\n                            columnNumber: 9\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                    lineNumber: 249,\n                    columnNumber: 7\n                }, undefined),\n                link.notifications && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Badge, {\n                    size: \"sm\",\n                    variant: \"filled\",\n                    className: classes.mainLinkBadge,\n                    children: link.notifications\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                    lineNumber: 259,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, link.label, true, {\n            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n            lineNumber: 241,\n            columnNumber: 5\n        }, undefined));\n    const collectionLinks = collections.map((collection, index)=>{\n        /*#__PURE__*/ return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            onClick: ()=>{\n                setCurrentCollection(collection.key);\n                setOpened(false);\n            },\n            className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.collectionLink, \"pr-2\", {\n                \"opacity-80\": collection.key !== currentCollection,\n                // 'font-bold': collection.key === currentCollection,\n                [classes.selectedCollectionLink]: collection.key === currentCollection,\n                \"shadow\": collection.key === currentCollection\n            }),\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-row gap-3 items-center relative flex-grow\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-grow flex gap-1 items-center text-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-[40px] justify-center flex items-center relative z-10\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    style: {\n                                        marginRight: (0,_mantine_core__WEBPACK_IMPORTED_MODULE_13__.rem)(8),\n                                        fontSize: \"1rem\"\n                                    },\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"rounded-full w-[32px] h-[32px] p-1 overflow-hidden\",\n                                        style: {\n                                            background: \"#333333\"\n                                        },\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_misc_FunnyEmoji__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                            emoji: collection.emoji,\n                                            emojiType: collection.key === currentCollection ? \"anim\" : \"3d\",\n                                            size: \"100%\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                            lineNumber: 289,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 283,\n                                        columnNumber: 15\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                    lineNumber: 282,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                lineNumber: 281,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col items-start justify-center h-[50px] pb-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Text, {\n                                        color: collection.key === currentCollection ? \"white\" : undefined,\n                                        className: \"whitespace-nowrap\",\n                                        children: collection.label\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 298,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    !!collection.description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Text, {\n                                        color: collection.key === currentCollection ? \"white\" : undefined,\n                                        className: \"font-normal text-xs text-left line-clamp-1 max-w-full\",\n                                        title: collection.description,\n                                        style: {\n                                            lineHeight: \"20px\"\n                                        },\n                                        children: lastMessageByCollection[collection.key] || collection.description || collection.label\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 305,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                lineNumber: 297,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                        lineNumber: 280,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(\"absolute right-[-5px] flex flex-row gap-1 items-center justify-center collection-action px-2 py-1 rounded shadow-xl\", {\n                            \"collection-action-disabled\": !(currentLink === null || currentLink === void 0 ? void 0 : currentLink.canAddCollections)\n                        }, classes.listActions),\n                        children: [\n                            !react_device_detect__WEBPACK_IMPORTED_MODULE_5__.isMobile && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.ActionIcon, {\n                                        variant: \"outline\",\n                                        color: \"blue\",\n                                        size: \"md\",\n                                        onClick: (e)=>{\n                                            e.stopPropagation();\n                                            setSubCollectionId(collection.key);\n                                        },\n                                        title: \"Open in a dialog\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconArrowsMaximize, {\n                                            size: \"2rem\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                            lineNumber: 353,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 343,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Divider, {\n                                        orientation: \"vertical\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 355,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex flex-col gap-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-row gap-1\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.ActionIcon, {\n                                                variant: \"default\",\n                                                color: \"blue\",\n                                                size: \"xs\",\n                                                onClick: (e)=>{\n                                                    e.stopPropagation();\n                                                    setCollectionUpId(collection.key);\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconArrowUp, {\n                                                    size: \"1rem\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                    lineNumber: 369,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                lineNumber: 360,\n                                                columnNumber: 15\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.ActionIcon, {\n                                                variant: \"default\",\n                                                color: \"blue\",\n                                                size: \"xs\",\n                                                onClick: (e)=>{\n                                                    e.stopPropagation();\n                                                    setCollectionDownId(collection.key);\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconArrowDown, {\n                                                    size: \"1rem\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                    lineNumber: 380,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                lineNumber: 371,\n                                                columnNumber: 15\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 359,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex flex-row gap-1\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.ActionIcon, {\n                                                variant: \"default\",\n                                                color: \"blue\",\n                                                size: \"xs\",\n                                                onClick: (e)=>{\n                                                    e.stopPropagation();\n                                                    setCollectionEditId(collection.key);\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconEdit, {\n                                                    size: \"1rem\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                    lineNumber: 393,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                lineNumber: 384,\n                                                columnNumber: 15\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.ActionIcon, {\n                                                variant: \"outline\",\n                                                color: \"red\",\n                                                size: \"xs\",\n                                                onClick: (e)=>{\n                                                    e.stopPropagation();\n                                                    setCollectionRemoveId(collection.key);\n                                                },\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconTrash, {\n                                                    size: \"1rem\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                    lineNumber: 404,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                                lineNumber: 395,\n                                                columnNumber: 15\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                        lineNumber: 383,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                                lineNumber: 358,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                        lineNumber: 332,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 279,\n                columnNumber: 7\n            }, undefined)\n        }, collection.key, false, {\n            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n            lineNumber: 266,\n            columnNumber: 5\n        }, undefined);\n    });\n    const renderedScrollContent = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"pb-5 w-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Group, {\n                className: classes.collectionsHeader,\n                position: \"apart\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Text, {\n                        size: \"xs\",\n                        weight: 500,\n                        color: \"dimmed\",\n                        children: currentLink === null || currentLink === void 0 ? void 0 : currentLink.collectionsLabel\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                        lineNumber: 416,\n                        columnNumber: 9\n                    }, undefined),\n                    (currentLink === null || currentLink === void 0 ? void 0 : currentLink.canAddCollections) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.ActionIcon, {\n                        variant: \"default\",\n                        size: 18,\n                        onClick: addAction,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconPlus, {\n                            size: \"1rem\",\n                            stroke: 1.5\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                            lineNumber: 421,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                        lineNumber: 420,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 415,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.collections, \"flex flex-col gap-0.5 mt-3\"),\n                children: collectionLinks\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 425,\n                columnNumber: 7\n            }, undefined),\n            (currentLink === null || currentLink === void 0 ? void 0 : currentLink.canAddCollections) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"px-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Button, {\n                    fullWidth: true,\n                    variant: \"default\",\n                    size: \"xs\",\n                    leftIcon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tabler_icons_react__WEBPACK_IMPORTED_MODULE_11__.IconPlus, {}, void 0, false, void 0, void 0),\n                    onClick: addAction,\n                    children: \"New agent\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                    lineNumber: 430,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 429,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n        lineNumber: 414,\n        columnNumber: 5\n    }, undefined);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_notifications__WEBPACK_IMPORTED_MODULE_15__.Notifications, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 446,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.AppShell, {\n                padding: 0,\n                pl: 12,\n                pr: 12,\n                navbar: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Navbar, {\n                    hidden: !opened,\n                    width: {\n                        sm: 300\n                    },\n                    p: \"0\",\n                    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(\"flex flex-col z-50\", classes.navbar, {}),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Navbar.Section, {\n                            className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.section, \"pt-5\"),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: classes.mainLinks,\n                                children: mainLinks\n                            }, void 0, false, void 0, void 0)\n                        }, void 0, false, void 0, void 0),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Navbar.Section, {\n                            className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.section, \"w-full\"),\n                            grow: true,\n                            component: _mantine_core__WEBPACK_IMPORTED_MODULE_13__.ScrollArea,\n                            children: renderedScrollContent\n                        }, void 0, false, void 0, void 0),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Navbar.Section, {\n                            className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(classes.section, \"px-5\"),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center\"\n                            }, void 0, false, void 0, void 0)\n                        }, void 0, false, void 0, void 0)\n                    ]\n                }, void 0, true, void 0, void 0),\n                header: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Header, {\n                    height: {\n                        base: 33\n                    },\n                    p: \"md\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            height: \"100%\"\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.MediaQuery, {\n                                largerThan: \"md\",\n                                styles: {\n                                    display: \"none\"\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Burger, {\n                                    opened: opened,\n                                    onClick: ()=>setOpened((o)=>!o),\n                                    size: \"sm\",\n                                    color: theme.colors.gray[6],\n                                    mr: \"xl\"\n                                }, void 0, false, void 0, void 0)\n                            }, void 0, false, void 0, void 0),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center justify-center\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_13__.Text, {\n                                        style: {\n                                            fontWeight: 800,\n                                            lineHeight: 0,\n                                            fontSize: 20,\n                                            color: \"white\",\n                                            letterSpacing: 0.1\n                                        },\n                                        children: logoText\n                                    }, void 0, false, void 0, void 0),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"-ml-2 -mb-2\"\n                                    }, void 0, false, void 0, void 0)\n                                ]\n                            }, void 0, true, void 0, void 0)\n                        ]\n                    }, void 0, true, void 0, void 0)\n                }, void 0, false, void 0, void 0),\n                children: children\n            }, renderKey, false, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 447,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                id: \"import_config_input\",\n                type: \"file\",\n                accept: \"application/json\",\n                className: \"hidden\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\WaihekeGPT\\\\src\\\\components\\\\layouts\\\\MainLayout\\\\MainLayout.tsx\",\n                lineNumber: 543,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(MainLayout, \"wWsNddLJCKGfUaJz4/jGmbzBfbQ=\", false, function() {\n    return [\n        _components_pages_MainPage_MainPage_style__WEBPACK_IMPORTED_MODULE_7__.useStyles,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCollections,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentTool,\n        react_use__WEBPACK_IMPORTED_MODULE_12__.useLocalStorage,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useAddCollectionAction,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollection,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionEditId,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionRemoveId,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionUpId,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useCurrentCollectionDownId,\n        _mantine_core__WEBPACK_IMPORTED_MODULE_13__.useMantineTheme,\n        react_use__WEBPACK_IMPORTED_MODULE_12__.useLocalStorage,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useSubCollectionId,\n        _states_states__WEBPACK_IMPORTED_MODULE_9__.useLastMessageByCollection,\n        _mantine_hooks__WEBPACK_IMPORTED_MODULE_14__.useViewportSize,\n        _mantine_hooks__WEBPACK_IMPORTED_MODULE_14__.useHotkeys,\n        react_use__WEBPACK_IMPORTED_MODULE_12__.useDebounce,\n        react_use__WEBPACK_IMPORTED_MODULE_12__.useMount,\n        react_use__WEBPACK_IMPORTED_MODULE_12__.useDebounce,\n        _mantine_hooks__WEBPACK_IMPORTED_MODULE_14__.useShallowEffect,\n        react_use__WEBPACK_IMPORTED_MODULE_12__.useDebounce\n    ];\n});\n_c = MainLayout;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MainLayout);\nvar _c;\n$RefreshReg$(_c, \"MainLayout\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/layouts/MainLayout/MainLayout.tsx\n"));

/***/ }),

/***/ "./src/components/pages/MainPage/MainPage.style.tsx":
/*!**********************************************************!*\
  !*** ./src/components/pages/MainPage/MainPage.style.tsx ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useStyles\": function() { return /* binding */ useStyles; }\n/* harmony export */ });\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mantine/core */ \"./node_modules/@mantine/core/esm/index.js\");\n\nconst useStyles = (0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.createStyles)((theme)=>({\n        navbar: {\n            paddingTop: 0,\n            zIndex: 1\n        },\n        section: {\n            // 'marginLeft': `calc(${theme.spacing.md} * -1)`,\n            // 'marginRight': `calc(${theme.spacing.md} * -1)`,\n            \"marginBottom\": theme.spacing.md,\n            \"&:not(:last-of-type)\": {\n                borderBottom: \"\".concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(1), \" solid \").concat(theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[3])\n            }\n        },\n        searchCode: {\n            fontWeight: 700,\n            fontSize: (0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(10),\n            backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.colors.gray[0],\n            border: \"\".concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(1), \" solid \").concat(theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.colors.gray[2])\n        },\n        mainLinks: {\n            paddingLeft: \"calc(\".concat(theme.spacing.md, \" - \").concat(theme.spacing.xs, \")\"),\n            paddingRight: \"calc(\".concat(theme.spacing.md, \" - \").concat(theme.spacing.xs, \")\"),\n            paddingBottom: theme.spacing.md\n        },\n        mainLink: {\n            \"display\": \"flex\",\n            \"alignItems\": \"center\",\n            \"width\": \"100%\",\n            \"fontSize\": theme.fontSizes.sm,\n            \"padding\": \"\".concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(1), \" \").concat(theme.spacing.xs),\n            \"borderRadius\": theme.radius.sm,\n            \"fontWeight\": 500,\n            \"color\": theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.gray[7],\n            \"&:hover\": {\n                backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[0],\n                color: theme.colorScheme === \"dark\" ? theme.white : theme.black\n            }\n        },\n        mainLinkInner: {\n            display: \"flex\",\n            alignItems: \"center\",\n            flex: 1\n        },\n        mainLinkIcon: {\n            marginRight: theme.spacing.sm\n        },\n        mainLinkBadge: {\n            padding: 0,\n            width: (0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(20),\n            height: (0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(20),\n            pointerEvents: \"none\"\n        },\n        collections: {\n            paddingLeft: \"calc(\".concat(theme.spacing.md, \" - \").concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(6), \")\"),\n            paddingRight: \"calc(\".concat(theme.spacing.md, \" - \").concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(6), \")\"),\n            paddingBottom: theme.spacing.md\n        },\n        collectionsHeader: {\n            paddingLeft: \"calc(\".concat(theme.spacing.md, \" + \").concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(2), \")\"),\n            paddingRight: theme.spacing.md,\n            marginBottom: (0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(5)\n        },\n        selectedCollectionLink: {\n            background: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[0],\n            border: \"1px solid rgba(255,255,255,0.1) !important\"\n        },\n        collectionLink: {\n            \"display\": \"block\",\n            \"padding\": \"\".concat((0,_mantine_core__WEBPACK_IMPORTED_MODULE_0__.rem)(1), \" \").concat(theme.spacing.xs),\n            \"textDecoration\": \"none\",\n            \"borderRadius\": theme.radius.sm,\n            \"fontSize\": theme.fontSizes.sm,\n            \"border\": \"1px solid transparent\",\n            // lineHeight: 1,\n            // fontWeight: 500,\n            \"cursor\": \"pointer\",\n            \".collection-action\": {\n                opacity: 0,\n                pointerEvents: \"none\"\n            },\n            \"&:hover\": {\n                \"backgroundColor\": theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[0],\n                \".collection-action\": {\n                    opacity: 1,\n                    pointerEvents: \"auto\"\n                },\n                \"border\": \"1px solid rgba(255,255,255,0.1)\"\n            },\n            \".collection-action-disabled\": {\n                opacity: \"0!important\",\n                pointerEvents: \"none!important\"\n            }\n        },\n        listActions: {\n            background: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[0],\n            border: \"1px solid #373A40\"\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9wYWdlcy9NYWluUGFnZS9NYWluUGFnZS5zdHlsZS50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Q7QUFFM0MsTUFBTUUsWUFBWUYsMkRBQVlBLENBQUMsQ0FBQ0csUUFBVztRQUNoREMsUUFBUTtZQUNOQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUVBQyxTQUFTO1lBQ1Asa0RBQWtEO1lBQ2xELG1EQUFtRDtZQUNuRCxnQkFBZ0JKLE1BQU1LLE9BQU8sQ0FBQ0MsRUFBRTtZQUVoQyx3QkFBd0I7Z0JBQ3RCQyxjQUFjLEdBQW1CUCxPQUFoQkYsa0RBQUdBLENBQUMsSUFBRyxXQUFvRixPQUEzRUUsTUFBTVEsV0FBVyxLQUFLLFNBQVNSLE1BQU1TLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLEVBQUUsR0FBR1YsTUFBTVMsTUFBTSxDQUFDRSxJQUFJLENBQUMsRUFBRTtZQUM3RztRQUNGO1FBRUFDLFlBQVk7WUFDVkMsWUFBWTtZQUNaQyxVQUFVaEIsa0RBQUdBLENBQUM7WUFDZGlCLGlCQUFpQmYsTUFBTVEsV0FBVyxLQUFLLFNBQVNSLE1BQU1TLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLEVBQUUsR0FBR1YsTUFBTVMsTUFBTSxDQUFDRSxJQUFJLENBQUMsRUFBRTtZQUMzRkssUUFBUSxHQUFtQmhCLE9BQWhCRixrREFBR0EsQ0FBQyxJQUFHLFdBQW9GLE9BQTNFRSxNQUFNUSxXQUFXLEtBQUssU0FBU1IsTUFBTVMsTUFBTSxDQUFDQyxJQUFJLENBQUMsRUFBRSxHQUFHVixNQUFNUyxNQUFNLENBQUNFLElBQUksQ0FBQyxFQUFFO1FBQ3ZHO1FBRUFNLFdBQVc7WUFDVEMsYUFBYSxRQUE4QmxCLE9BQXRCQSxNQUFNSyxPQUFPLENBQUNDLEVBQUUsRUFBQyxPQUFzQixPQUFqQk4sTUFBTUssT0FBTyxDQUFDYyxFQUFFLEVBQUM7WUFDNURDLGNBQWMsUUFBOEJwQixPQUF0QkEsTUFBTUssT0FBTyxDQUFDQyxFQUFFLEVBQUMsT0FBc0IsT0FBakJOLE1BQU1LLE9BQU8sQ0FBQ2MsRUFBRSxFQUFDO1lBQzdERSxlQUFlckIsTUFBTUssT0FBTyxDQUFDQyxFQUFFO1FBQ2pDO1FBRUFnQixVQUFVO1lBQ1IsV0FBVztZQUNYLGNBQWM7WUFDZCxTQUFTO1lBQ1QsWUFBWXRCLE1BQU11QixTQUFTLENBQUNDLEVBQUU7WUFDOUIsV0FBVyxHQUFheEIsT0FBVkYsa0RBQUdBLENBQUMsSUFBRyxLQUFvQixPQUFqQkUsTUFBTUssT0FBTyxDQUFDYyxFQUFFO1lBQ3hDLGdCQUFnQm5CLE1BQU15QixNQUFNLENBQUNELEVBQUU7WUFDL0IsY0FBYztZQUNkLFNBQVN4QixNQUFNUSxXQUFXLEtBQUssU0FBU1IsTUFBTVMsTUFBTSxDQUFDQyxJQUFJLENBQUMsRUFBRSxHQUFHVixNQUFNUyxNQUFNLENBQUNFLElBQUksQ0FBQyxFQUFFO1lBRW5GLFdBQVc7Z0JBQ1RJLGlCQUFpQmYsTUFBTVEsV0FBVyxLQUFLLFNBQVNSLE1BQU1TLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLEVBQUUsR0FBR1YsTUFBTVMsTUFBTSxDQUFDRSxJQUFJLENBQUMsRUFBRTtnQkFDM0ZlLE9BQU8xQixNQUFNUSxXQUFXLEtBQUssU0FBU1IsTUFBTTJCLEtBQUssR0FBRzNCLE1BQU00QixLQUFLO1lBQ2pFO1FBQ0Y7UUFFQUMsZUFBZTtZQUNiQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsTUFBTTtRQUNSO1FBRUFDLGNBQWM7WUFDWkMsYUFBYWxDLE1BQU1LLE9BQU8sQ0FBQ21CLEVBQUU7UUFFL0I7UUFFQVcsZUFBZTtZQUNiQyxTQUFTO1lBQ1RDLE9BQU92QyxrREFBR0EsQ0FBQztZQUNYd0MsUUFBUXhDLGtEQUFHQSxDQUFDO1lBQ1p5QyxlQUFlO1FBQ2pCO1FBRUFDLGFBQWE7WUFDWHRCLGFBQWEsUUFBOEJwQixPQUF0QkUsTUFBTUssT0FBTyxDQUFDQyxFQUFFLEVBQUMsT0FBWSxPQUFQUixrREFBR0EsQ0FBQyxJQUFHO1lBQ2xEc0IsY0FBYyxRQUE4QnRCLE9BQXRCRSxNQUFNSyxPQUFPLENBQUNDLEVBQUUsRUFBQyxPQUFZLE9BQVBSLGtEQUFHQSxDQUFDLElBQUc7WUFDbkR1QixlQUFlckIsTUFBTUssT0FBTyxDQUFDQyxFQUFFO1FBQ2pDO1FBRUFtQyxtQkFBbUI7WUFDakJ2QixhQUFhLFFBQThCcEIsT0FBdEJFLE1BQU1LLE9BQU8sQ0FBQ0MsRUFBRSxFQUFDLE9BQVksT0FBUFIsa0RBQUdBLENBQUMsSUFBRztZQUNsRHNCLGNBQWNwQixNQUFNSyxPQUFPLENBQUNDLEVBQUU7WUFDOUJvQyxjQUFjNUMsa0RBQUdBLENBQUM7UUFDcEI7UUFFQTZDLHdCQUF3QjtZQUN0QkMsWUFBWTVDLE1BQU1RLFdBQVcsS0FBSyxTQUFTUixNQUFNUyxNQUFNLENBQUNDLElBQUksQ0FBQyxFQUFFLEdBQUdWLE1BQU1TLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDLEVBQUU7WUFDdEZLLFFBQVE7UUFDVjtRQUVBNkIsZ0JBQWdCO1lBQ2QsV0FBVztZQUNYLFdBQVcsR0FBYTdDLE9BQVZGLGtEQUFHQSxDQUFDLElBQUcsS0FBb0IsT0FBakJFLE1BQU1LLE9BQU8sQ0FBQ2MsRUFBRTtZQUN4QyxrQkFBa0I7WUFDbEIsZ0JBQWdCbkIsTUFBTXlCLE1BQU0sQ0FBQ0QsRUFBRTtZQUMvQixZQUFZeEIsTUFBTXVCLFNBQVMsQ0FBQ0MsRUFBRTtZQUM5QixVQUFVO1lBQ1YsaUJBQWlCO1lBQ2pCLG1CQUFtQjtZQUNuQixVQUFVO1lBQ1Ysc0JBQXNCO2dCQUNwQnNCLFNBQVM7Z0JBQ1RQLGVBQWU7WUFDakI7WUFDQSxXQUFXO2dCQUNULG1CQUFtQnZDLE1BQU1RLFdBQVcsS0FBSyxTQUFTUixNQUFNUyxNQUFNLENBQUNDLElBQUksQ0FBQyxFQUFFLEdBQUdWLE1BQU1TLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDLEVBQUU7Z0JBQzdGLHNCQUFzQjtvQkFDcEJtQyxTQUFTO29CQUNUUCxlQUFlO2dCQUNqQjtnQkFDQSxVQUFVO1lBQ1o7WUFDQSwrQkFBK0I7Z0JBQzdCTyxTQUFTO2dCQUNUUCxlQUFlO1lBQ2pCO1FBQ0Y7UUFDQVEsYUFBYTtZQUNYSCxZQUFZNUMsTUFBTVEsV0FBVyxLQUFLLFNBQVNSLE1BQU1TLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLEVBQUUsR0FBR1YsTUFBTVMsTUFBTSxDQUFDRSxJQUFJLENBQUMsRUFBRTtZQUN0RkssUUFBUTtRQUNWO0lBQ0YsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9wYWdlcy9NYWluUGFnZS9NYWluUGFnZS5zdHlsZS50c3g/NmJiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTdHlsZXMsIHJlbSB9IGZyb20gJ0BtYW50aW5lL2NvcmUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyA9IGNyZWF0ZVN0eWxlcygodGhlbWUpID0+ICh7XHJcbiAgbmF2YmFyOiB7XHJcbiAgICBwYWRkaW5nVG9wOiAwLFxyXG4gICAgekluZGV4OiAxLFxyXG4gIH0sXHJcblxyXG4gIHNlY3Rpb246IHtcclxuICAgIC8vICdtYXJnaW5MZWZ0JzogYGNhbGMoJHt0aGVtZS5zcGFjaW5nLm1kfSAqIC0xKWAsXHJcbiAgICAvLyAnbWFyZ2luUmlnaHQnOiBgY2FsYygke3RoZW1lLnNwYWNpbmcubWR9ICogLTEpYCxcclxuICAgICdtYXJnaW5Cb3R0b20nOiB0aGVtZS5zcGFjaW5nLm1kLFxyXG5cclxuICAgICcmOm5vdCg6bGFzdC1vZi10eXBlKSc6IHtcclxuICAgICAgYm9yZGVyQm90dG9tOiBgJHtyZW0oMSl9IHNvbGlkICR7dGhlbWUuY29sb3JTY2hlbWUgPT09ICdkYXJrJyA/IHRoZW1lLmNvbG9ycy5kYXJrWzRdIDogdGhlbWUuY29sb3JzLmdyYXlbM119YCxcclxuICAgIH0sXHJcbiAgfSxcclxuXHJcbiAgc2VhcmNoQ29kZToge1xyXG4gICAgZm9udFdlaWdodDogNzAwLFxyXG4gICAgZm9udFNpemU6IHJlbSgxMCksXHJcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9yU2NoZW1lID09PSAnZGFyaycgPyB0aGVtZS5jb2xvcnMuZGFya1s3XSA6IHRoZW1lLmNvbG9ycy5ncmF5WzBdLFxyXG4gICAgYm9yZGVyOiBgJHtyZW0oMSl9IHNvbGlkICR7dGhlbWUuY29sb3JTY2hlbWUgPT09ICdkYXJrJyA/IHRoZW1lLmNvbG9ycy5kYXJrWzddIDogdGhlbWUuY29sb3JzLmdyYXlbMl19YCxcclxuICB9LFxyXG5cclxuICBtYWluTGlua3M6IHtcclxuICAgIHBhZGRpbmdMZWZ0OiBgY2FsYygke3RoZW1lLnNwYWNpbmcubWR9IC0gJHt0aGVtZS5zcGFjaW5nLnhzfSlgLFxyXG4gICAgcGFkZGluZ1JpZ2h0OiBgY2FsYygke3RoZW1lLnNwYWNpbmcubWR9IC0gJHt0aGVtZS5zcGFjaW5nLnhzfSlgLFxyXG4gICAgcGFkZGluZ0JvdHRvbTogdGhlbWUuc3BhY2luZy5tZCxcclxuICB9LFxyXG5cclxuICBtYWluTGluazoge1xyXG4gICAgJ2Rpc3BsYXknOiAnZmxleCcsXHJcbiAgICAnYWxpZ25JdGVtcyc6ICdjZW50ZXInLFxyXG4gICAgJ3dpZHRoJzogJzEwMCUnLFxyXG4gICAgJ2ZvbnRTaXplJzogdGhlbWUuZm9udFNpemVzLnNtLFxyXG4gICAgJ3BhZGRpbmcnOiBgJHtyZW0oMSl9ICR7dGhlbWUuc3BhY2luZy54c31gLFxyXG4gICAgJ2JvcmRlclJhZGl1cyc6IHRoZW1lLnJhZGl1cy5zbSxcclxuICAgICdmb250V2VpZ2h0JzogNTAwLFxyXG4gICAgJ2NvbG9yJzogdGhlbWUuY29sb3JTY2hlbWUgPT09ICdkYXJrJyA/IHRoZW1lLmNvbG9ycy5kYXJrWzBdIDogdGhlbWUuY29sb3JzLmdyYXlbN10sXHJcblxyXG4gICAgJyY6aG92ZXInOiB7XHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUuY29sb3JTY2hlbWUgPT09ICdkYXJrJyA/IHRoZW1lLmNvbG9ycy5kYXJrWzZdIDogdGhlbWUuY29sb3JzLmdyYXlbMF0sXHJcbiAgICAgIGNvbG9yOiB0aGVtZS5jb2xvclNjaGVtZSA9PT0gJ2RhcmsnID8gdGhlbWUud2hpdGUgOiB0aGVtZS5ibGFjayxcclxuICAgIH0sXHJcbiAgfSxcclxuXHJcbiAgbWFpbkxpbmtJbm5lcjoge1xyXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICBmbGV4OiAxLFxyXG4gIH0sXHJcblxyXG4gIG1haW5MaW5rSWNvbjoge1xyXG4gICAgbWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcuc20sXHJcbiAgICAvLyBjb2xvcjogdGhlbWUuY29sb3JTY2hlbWUgPT09IFwiZGFya1wiID8gdGhlbWUuY29sb3JzLmRhcmtbMl0gOiB0aGVtZS5jb2xvcnMuZ3JheVs2XSxcclxuICB9LFxyXG5cclxuICBtYWluTGlua0JhZGdlOiB7XHJcbiAgICBwYWRkaW5nOiAwLFxyXG4gICAgd2lkdGg6IHJlbSgyMCksXHJcbiAgICBoZWlnaHQ6IHJlbSgyMCksXHJcbiAgICBwb2ludGVyRXZlbnRzOiAnbm9uZScsXHJcbiAgfSxcclxuXHJcbiAgY29sbGVjdGlvbnM6IHtcclxuICAgIHBhZGRpbmdMZWZ0OiBgY2FsYygke3RoZW1lLnNwYWNpbmcubWR9IC0gJHtyZW0oNil9KWAsXHJcbiAgICBwYWRkaW5nUmlnaHQ6IGBjYWxjKCR7dGhlbWUuc3BhY2luZy5tZH0gLSAke3JlbSg2KX0pYCxcclxuICAgIHBhZGRpbmdCb3R0b206IHRoZW1lLnNwYWNpbmcubWQsXHJcbiAgfSxcclxuXHJcbiAgY29sbGVjdGlvbnNIZWFkZXI6IHtcclxuICAgIHBhZGRpbmdMZWZ0OiBgY2FsYygke3RoZW1lLnNwYWNpbmcubWR9ICsgJHtyZW0oMil9KWAsXHJcbiAgICBwYWRkaW5nUmlnaHQ6IHRoZW1lLnNwYWNpbmcubWQsXHJcbiAgICBtYXJnaW5Cb3R0b206IHJlbSg1KSxcclxuICB9LFxyXG5cclxuICBzZWxlY3RlZENvbGxlY3Rpb25MaW5rOiB7XHJcbiAgICBiYWNrZ3JvdW5kOiB0aGVtZS5jb2xvclNjaGVtZSA9PT0gJ2RhcmsnID8gdGhlbWUuY29sb3JzLmRhcmtbNl0gOiB0aGVtZS5jb2xvcnMuZ3JheVswXSxcclxuICAgIGJvcmRlcjogJzFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMSkgIWltcG9ydGFudCcsXHJcbiAgfSxcclxuXHJcbiAgY29sbGVjdGlvbkxpbms6IHtcclxuICAgICdkaXNwbGF5JzogJ2Jsb2NrJyxcclxuICAgICdwYWRkaW5nJzogYCR7cmVtKDEpfSAke3RoZW1lLnNwYWNpbmcueHN9YCxcclxuICAgICd0ZXh0RGVjb3JhdGlvbic6ICdub25lJyxcclxuICAgICdib3JkZXJSYWRpdXMnOiB0aGVtZS5yYWRpdXMuc20sXHJcbiAgICAnZm9udFNpemUnOiB0aGVtZS5mb250U2l6ZXMuc20sXHJcbiAgICAnYm9yZGVyJzogJzFweCBzb2xpZCB0cmFuc3BhcmVudCcsXHJcbiAgICAvLyBsaW5lSGVpZ2h0OiAxLFxyXG4gICAgLy8gZm9udFdlaWdodDogNTAwLFxyXG4gICAgJ2N1cnNvcic6ICdwb2ludGVyJyxcclxuICAgICcuY29sbGVjdGlvbi1hY3Rpb24nOiB7XHJcbiAgICAgIG9wYWNpdHk6IDAsXHJcbiAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcclxuICAgIH0sXHJcbiAgICAnJjpob3Zlcic6IHtcclxuICAgICAgJ2JhY2tncm91bmRDb2xvcic6IHRoZW1lLmNvbG9yU2NoZW1lID09PSAnZGFyaycgPyB0aGVtZS5jb2xvcnMuZGFya1s2XSA6IHRoZW1lLmNvbG9ycy5ncmF5WzBdLFxyXG4gICAgICAnLmNvbGxlY3Rpb24tYWN0aW9uJzoge1xyXG4gICAgICAgIG9wYWNpdHk6IDEsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogJ2F1dG8nLFxyXG4gICAgICB9LFxyXG4gICAgICAnYm9yZGVyJzogJzFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMSknLFxyXG4gICAgfSxcclxuICAgICcuY29sbGVjdGlvbi1hY3Rpb24tZGlzYWJsZWQnOiB7XHJcbiAgICAgIG9wYWNpdHk6ICcwIWltcG9ydGFudCcgYXMgYW55LFxyXG4gICAgICBwb2ludGVyRXZlbnRzOiAnbm9uZSFpbXBvcnRhbnQnIGFzIGFueSxcclxuICAgIH0sXHJcbiAgfSxcclxuICBsaXN0QWN0aW9uczoge1xyXG4gICAgYmFja2dyb3VuZDogdGhlbWUuY29sb3JTY2hlbWUgPT09ICdkYXJrJyA/IHRoZW1lLmNvbG9ycy5kYXJrWzZdIDogdGhlbWUuY29sb3JzLmdyYXlbMF0sXHJcbiAgICBib3JkZXI6ICcxcHggc29saWQgIzM3M0E0MCcsXHJcbiAgfSxcclxufSkpO1xyXG4iXSwibmFtZXMiOlsiY3JlYXRlU3R5bGVzIiwicmVtIiwidXNlU3R5bGVzIiwidGhlbWUiLCJuYXZiYXIiLCJwYWRkaW5nVG9wIiwiekluZGV4Iiwic2VjdGlvbiIsInNwYWNpbmciLCJtZCIsImJvcmRlckJvdHRvbSIsImNvbG9yU2NoZW1lIiwiY29sb3JzIiwiZGFyayIsImdyYXkiLCJzZWFyY2hDb2RlIiwiZm9udFdlaWdodCIsImZvbnRTaXplIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyIiwibWFpbkxpbmtzIiwicGFkZGluZ0xlZnQiLCJ4cyIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJtYWluTGluayIsImZvbnRTaXplcyIsInNtIiwicmFkaXVzIiwiY29sb3IiLCJ3aGl0ZSIsImJsYWNrIiwibWFpbkxpbmtJbm5lciIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiZmxleCIsIm1haW5MaW5rSWNvbiIsIm1hcmdpblJpZ2h0IiwibWFpbkxpbmtCYWRnZSIsInBhZGRpbmciLCJ3aWR0aCIsImhlaWdodCIsInBvaW50ZXJFdmVudHMiLCJjb2xsZWN0aW9ucyIsImNvbGxlY3Rpb25zSGVhZGVyIiwibWFyZ2luQm90dG9tIiwic2VsZWN0ZWRDb2xsZWN0aW9uTGluayIsImJhY2tncm91bmQiLCJjb2xsZWN0aW9uTGluayIsIm9wYWNpdHkiLCJsaXN0QWN0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/pages/MainPage/MainPage.style.tsx\n"));

/***/ })

}]);